Model {
  Name			  "model_QK_SFSVD_ROS"
  Version		  7.6
  MdlSubVersion		  0
  GraphicalInterface {
    NumRootInports	    0
    NumRootOutports	    0
    ParameterArgumentNames  ""
    ComputedModelVersion    "1.313"
    NumModelReferences	    0
    NumTestPointedSignals   0
  }
  SavedCharacterEncoding  "UTF-8"
  slprops.hdlmdlprops {
    $PropName		    "HDLParams"
    $ObjectID		    1
    Array {
      Type		      "Cell"
      Dimension		      2
      Cell		      "HDLSubsystem"
      Cell		      "model_QK_SFSVD_ROS"
      PropName		      "mdlProps"
    }
  }
  SaveDefaultBlockParams  on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  DataTypeOverride	  "UseLocalSettings"
  DataTypeOverrideAppliesTo "AllNumericTypes"
  MinMaxOverflowLogging	  "UseLocalSettings"
  MinMaxOverflowArchiveMode "Overwrite"
  MaxMDLFileLineLength	  120
  Created		  "Fri Aug 10 10:19:23 2012"
  Creator		  "sendobry"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "sendobry"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Thu Jan 24 10:38:14 2013"
  RTWModifiedTimeStamp	  280923830
  ModelVersionFormat	  "1.%<AutoIncrement:313>"
  ConfigurationManager	  "None"
  SampleTimeColors	  off
  SampleTimeAnnotations	  off
  LibraryLinkDisplay	  "none"
  WideLines		  off
  ShowLineDimensions	  off
  ShowPortDataTypes	  off
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  ShowStorageClass	  off
  ShowTestPointIcons	  on
  ShowSignalResolutionIcons on
  ShowViewerIcons	  on
  SortedOrder		  off
  ExecutionContextIcon	  off
  ShowLinearizationAnnotations on
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  ToolBar		  on
  StatusBar		  on
  BrowserShowLibraryLinks on
  BrowserLookUnderMasks	  on
  SimulationMode	  "normal"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  AccelSystemTargetFile	  "accel.tlc"
  AccelTemplateMakefile	  "accel_default_tmf"
  AccelMakeCommand	  "make_rtw"
  TryForcingSFcnDF	  off
  RecordCoverage	  off
  CovPath		  "/"
  CovSaveName		  "covdata"
  CovMetricSettings	  "dw"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  CovForceBlockReductionOff on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeVarName	  "covCumulativeData"
  CovCumulativeReport	  off
  CovReportOnPause	  on
  CovModelRefEnable	  "Off"
  CovExternalEMLEnable	  off
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock on
  BufferReuse		  on
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      2
      Version		      "1.10.0"
      Array {
	Type			"Handle"
	Dimension		9
	Simulink.SolverCC {
	  $ObjectID		  3
	  Version		  "1.10.0"
	  StartTime		  "0"
	  StopTime		  "100"
	  AbsTol		  "auto"
	  FixedStep		  "0.01"
	  InitialStep		  "auto"
	  MaxNumMinSteps	  "-1"
	  MaxOrder		  5
	  ZcThreshold		  "auto"
	  ConsecutiveZCsStepRelTol "10*128*eps"
	  MaxConsecutiveZCs	  "1000"
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  MaxConsecutiveMinStep	  "10"
	  RelTol		  "1e-3"
	  SolverMode		  "SingleTasking"
	  ConcurrentTasks	  off
	  Solver		  "FixedStepDiscrete"
	  SolverName		  "FixedStepDiscrete"
	  SolverJacobianMethodControl "auto"
	  ShapePreserveControl	  "DisableAll"
	  ZeroCrossControl	  "UseLocalSettings"
	  ZeroCrossAlgorithm	  "Nonadaptive"
	  AlgebraicLoopSolver	  "TrustRegion"
	  SolverResetMethod	  "Fast"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  InsertRTBMode		  "Whenever possible"
	}
	Simulink.DataIOCC {
	  $ObjectID		  4
	  Version		  "1.10.0"
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  on
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveCompleteFinalSimState off
	  SaveFormat		  "Array"
	  SaveOutput		  on
	  SaveState		  off
	  SignalLogging		  on
	  DSMLogging		  on
	  InspectSignalLogs	  off
	  SaveTime		  on
	  ReturnWorkspaceOutputs  off
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsout"
	  DSMLoggingName	  "dsmout"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  ReturnWorkspaceOutputsName "out"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  5
	  Version		  "1.10.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    8
	    Cell		    "BooleansAsBitfields"
	    Cell		    "PassReuseOutputArgsAs"
	    Cell		    "PassReuseOutputArgsThreshold"
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "OptimizeModelRefInitCode"
	    Cell		    "NoFixptDivByZeroProtection"
	    Cell		    "UseSpecifiedMinMax"
	    PropName		    "DisabledProps"
	  }
	  BlockReduction	  on
	  BooleanDataType	  on
	  ConditionallyExecuteInputs on
	  InlineParams		  off
	  UseIntDivNetSlope	  off
	  UseSpecifiedMinMax	  off
	  InlineInvariantSignals  off
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnhancedBackFolding	  off
	  StrengthReduction	  off
	  ExpressionFolding	  on
	  BooleansAsBitfields	  off
	  BitfieldContainerType	  "uint_T"
	  EnableMemcpy		  on
	  MemcpyThreshold	  64
	  PassReuseOutputArgsAs	  "Structure reference"
	  ExpressionDepthLimit	  2147483647
	  FoldNonRolledExpr	  on
	  LocalBlockOutputs	  on
	  RollThreshold		  5
	  SystemCodeInlineAuto	  off
	  StateBitsets		  off
	  DataBitsets		  off
	  UseTempVars		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  off
	  NoFixptDivByZeroProtection off
	  EfficientFloat2IntCast  off
	  EfficientMapNaN2IntZero on
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	  MaxStackSize		  "Inherit from target"
	  BufferReusableBoundary  on
	  SimCompilerOptimization "Off"
	  AccelVerboseBuild	  on
	}
	Simulink.DebuggingCC {
	  $ObjectID		  6
	  Version		  "1.10.0"
	  RTPrefix		  "error"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "warning"
	  SignalInfNanChecking	  "none"
	  SignalRangeChecking	  "none"
	  ReadBeforeWriteMsg	  "UseLocalSettings"
	  WriteAfterWriteMsg	  "UseLocalSettings"
	  WriteAfterReadMsg	  "UseLocalSettings"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  SaveWithDisabledLinksMsg "warning"
	  SaveWithParameterizedLinksMsg	"warning"
	  CheckSSInitialOutputMsg on
	  UnderspecifiedInitializationDetection	"Simplified"
	  MergeDetectMultiDrivingBlocksExec "none"
	  CheckExecutionContextPreStartOutputMsg off
	  CheckExecutionContextRuntimeOutputMsg	off
	  SignalResolutionControl "UseLocalSettings"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  TimeAdjustmentMsg	  "none"
	  MaxConsecutiveZCsMsg	  "error"
	  MaskedZcDiagnostic	  "warning"
	  IgnoredZcDiagnostic	  "warning"
	  SolverPrmCheckMsg	  "warning"
	  InheritedTsInSrcMsg	  "warning"
	  DiscreteInheritContinuousMsg "warning"
	  MultiTaskDSMMsg	  "error"
	  MultiTaskCondExecSysMsg "error"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  TasksWithSamePriorityMsg "warning"
	  SigSpecEnsureSampleTimeMsg "warning"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterUnderflowMsg	  "none"
	  ParameterPrecisionLossMsg "warning"
	  ParameterTunabilityLossMsg "warning"
	  FixptConstUnderflowMsg  "none"
	  FixptConstOverflowMsg	  "none"
	  FixptConstPrecisionLossMsg "none"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  FcnCallInpInsideContextMsg "Use local settings"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  UniqueDataStoreMsg	  "none"
	  BusObjectLabelMismatch  "warning"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  EnableOverflowDetection off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceMultiInstanceNormalModeStructChecksumCheck "error"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  ModelReferenceCSMismatchMessage "none"
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	  ModelReferenceExtraNoncontSigs "error"
	  StateNameClashWarn	  "warning"
	  SimStateInterfaceChecksumMismatchMsg "warning"
	  InitInArrayFormatMsg	  "warning"
	  StrictBusMsg		  "ErrorLevel1"
	  BusNameAdapt		  "WarnAndRepair"
	  NonBusSignalsTreatedAsBus "none"
	  LoggingUnavailableSignals "error"
	  BlockIODiagnostic	  "none"
	  SFUnusedDataAndEventsDiag "warning"
	  SFUnexpectedBacktrackingDiag "warning"
	  SFInvalidInputDataAccessInChartInitDiag "warning"
	  SFNoUnconditionalDefaultTransitionDiag "warning"
	  SFTransitionOutsideNaturalParentDiag "warning"
	}
	Simulink.HardwareCC {
	  $ObjectID		  7
	  Version		  "1.10.0"
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdBitPerFloat	  32
	  ProdBitPerDouble	  64
	  ProdBitPerPointer	  32
	  ProdLargestAtomicInteger "Char"
	  ProdLargestAtomicFloat  "None"
	  ProdIntDivRoundTo	  "Undefined"
	  ProdEndianess		  "Unspecified"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdHWDeviceType	  "32-bit Generic"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetBitPerFloat	  32
	  TargetBitPerDouble	  64
	  TargetBitPerPointer	  32
	  TargetLargestAtomicInteger "Char"
	  TargetLargestAtomicFloat "None"
	  TargetShiftRightIntArith on
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetTypeEmulationWarnSuppressLevel 0
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  off
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  8
	  Version		  "1.10.0"
	  UpdateModelReferenceTargets "IfOutOfDateOrStructuralChange"
	  CheckModelReferenceTargetMessage "error"
	  EnableParallelModelReferenceBuilds off
	  ParallelModelReferenceErrorOnInvalidPool on
	  ParallelModelReferenceMATLABWorkerInit "None"
	  ModelReferenceNumInstancesAllowed "Multi"
	  PropagateVarSize	  "Infer from blocks in model"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	  PropagateSignalLabelsOutOfModel off
	  SupportModelReferenceSimTargetCustomCode off
	}
	Simulink.SFSimCC {
	  $ObjectID		  9
	  Version		  "1.10.0"
	  SFSimEnableDebug	  on
	  SFSimOverflowDetection  on
	  SFSimEcho		  on
	  SimBlas		  on
	  SimCtrlC		  on
	  SimExtrinsic		  on
	  SimIntegrity		  on
	  SimUseLocalCustomCode	  off
	  SimParseCustomCode	  on
	  SimBuildMode		  "sf_incremental_build"
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  10
	  Version		  "1.10.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    9
	    Cell		    "IncludeHyperlinkInReport"
	    Cell		    "GenerateTraceInfo"
	    Cell		    "GenerateTraceReport"
	    Cell		    "GenerateTraceReportSl"
	    Cell		    "GenerateTraceReportSf"
	    Cell		    "GenerateTraceReportEml"
	    Cell		    "GenerateWebview"
	    Cell		    "GenerateCodeMetricsReport"
	    Cell		    "GenerateCodeReplacementReport"
	    PropName		    "DisabledProps"
	  }
	  SystemTargetFile	  "orocos.tlc"
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  GenerateMakefile	  on
	  TemplateMakefile	  "orocos.tmf"
	  Description		  "Linux Orocos Target"
	  GenerateReport	  off
	  SaveLog		  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  ProcessScriptMode	  "Default"
	  ConfigurationMode	  "Optimized"
	  ProcessScript		  "orocos_make_rtw_hook"
	  ConfigAtBuild		  off
	  RTWUseLocalCustomCode	  off
	  RTWUseSimCustomCode	  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  TargetLang		  "C"
	  IncludeBusHierarchyInRTWFileBlockHierarchyMap	off
	  IncludeERTFirstTime	  off
	  GenerateTraceInfo	  off
	  GenerateTraceReport	  off
	  GenerateTraceReportSl	  off
	  GenerateTraceReportSf	  off
	  GenerateTraceReportEml  off
	  GenerateCodeInfo	  off
	  GenerateSLWebview	  off
	  RTWCompilerOptimization "Off"
	  CheckMdlBeforeBuild	  "Off"
	  CustomRebuildMode	  "OnUpdate"
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      11
	      Version		      "1.10.0"
	      Array {
		Type			"Cell"
		Dimension		21
		Cell			"IgnoreCustomStorageClasses"
		Cell			"IgnoreTestpoints"
		Cell			"InsertBlockDesc"
		Cell			"InsertPolySpaceComments"
		Cell			"SFDataObjDesc"
		Cell			"MATLABFcnDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InlinedPrmAccess"
		Cell			"CustomSymbolStr"
		Cell			"CustomSymbolStrGlobalVar"
		Cell			"CustomSymbolStrType"
		Cell			"CustomSymbolStrField"
		Cell			"CustomSymbolStrFcn"
		Cell			"CustomSymbolStrFcnArg"
		Cell			"CustomSymbolStrBlkIO"
		Cell			"CustomSymbolStrTmpVar"
		Cell			"CustomSymbolStrMacro"
		Cell			"ReqsInCode"
		PropName		"DisabledProps"
	      }
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IgnoreTestpoints	      off
	      IncHierarchyInIds	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      IncAutoGenComments      off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      MATLABFcnDesc	      off
	      IncDataTypeInIds	      off
	      MangleLength	      1
	      CustomSymbolStrGlobalVar "$R$N$M"
	      CustomSymbolStrType     "$N$R$M"
	      CustomSymbolStrField    "$N$M"
	      CustomSymbolStrFcn      "$R$N$M$F"
	      CustomSymbolStrFcnArg   "rt$I$N$M"
	      CustomSymbolStrBlkIO    "rtb_$N$M"
	      CustomSymbolStrTmpVar   "$N$M"
	      CustomSymbolStrMacro    "$R$N$M"
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      InsertPolySpaceComments off
	      SimulinkBlockComments   on
	      MATLABSourceComments    off
	      EnableCustomComments    off
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	      UseSimReservedNames     off
	    }
	    Simulink.STFCustomTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      12
	      Version		      "1.10.0"
	      Array {
		Type			"Cell"
		Dimension		16
		Cell			"GeneratePreprocessorConditionals"
		Cell			"IncludeMdlTerminateFcn"
		Cell			"CombineOutputUpdateFcns"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"GenerateTestInterfaces"
		Cell			"ModelStepFunctionPrototypeControlCompliant"
		Cell			"CPPClassGenCompliant"
		Cell			"MultiInstanceERTCode"
		Cell			"PurelyIntegerCode"
		Cell			"SupportComplex"
		Cell			"SupportAbsoluteTime"
		Cell			"SupportContinuousTime"
		Cell			"SupportNonInlinedSFcns"
		Cell			"PortableWordSizes"
		PropName		"DisabledProps"
	      }
	      TargetFcnLib	      "ansi_tfl_table_tmw.mat"
	      TargetLibSuffix	      ""
	      TargetPreCompLibLocation ""
	      TargetFunctionLibrary   "ANSI_C"
	      UtilityFuncGeneration   "Auto"
	      ERTMultiwordTypeDef     "System defined"
	      ERTCodeCoverageTool     "None"
	      ERTMultiwordLength      256
	      MultiwordLength	      2048
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      GenerateTestInterfaces  off
	      IsPILTarget	      off
	      ModelReferenceCompliant off
	      ParMdlRefBuildCompliant off
	      CompOptLevelCompliant   off
	      IncludeMdlTerminateFcn  on
	      GeneratePreprocessorConditionals "Disable all"
	      CombineOutputUpdateFcns off
	      CombineSignalStateStructs	off
	      SuppressErrorStatus     off
	      ERTFirstTimeCompliant   off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      SupportVariableSizeSignals off
	      EnableShiftOperators    on
	      ParenthesesLevel	      "Nominal"
	      PortableWordSizes	      off
	      ModelStepFunctionPrototypeControlCompliant off
	      CPPClassGenCompliant    off
	      AutosarCompliant	      off
	      SystemTargetFile	      "orocos.tlc"
	      DialogCategory	      0
	    }
	    PropName		    "Components"
	  }
	}
	hdlcoderui.hdlcc {
	  $ObjectID		  13
	  Version		  "1.10.0"
	  Description		  "HDL Coder custom configuration component"
	  Name			  "HDL Coder"
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    ""
	    PropName		    "HDLConfigFile"
	  }
	  HDLCActiveTab		  "0"
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      ExtraOptions	      "-aGenerateTraceInfo=0 -aIgnoreTestpoints=0 "
      CurrentDlgPage	      "Code Generation"
      ConfigPrmDlgPosition    " [ 1933, 78, 2910, 996 ] "
    }
    PropName		    "ConfigurationSets"
  }
  Simulink.ConfigSet {
    $PropName		    "ActiveConfigurationSet"
    $ObjectID		    2
  }
  BlockDefaults {
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
    BlockRotation	    0
    BlockMirror		    off
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    UseDisplayTextAsClickCallback off
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  BlockParameterDefaults {
    Block {
      BlockType		      Demux
      Outputs		      "4"
      DisplayOption	      "none"
      BusSelectionMode	      off
    }
    Block {
      BlockType		      EnablePort
      StatesWhenEnabling      "held"
      PropagateVarSize	      "Only when enabling"
      ShowOutputPort	      off
      ZeroCross		      on
    }
    Block {
      BlockType		      Gain
      Gain		      "1"
      Multiplication	      "Element-wise(K.*u)"
      ParamMin		      "[]"
      ParamMax		      "[]"
      ParamDataTypeStr	      "Inherit: Same as input"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Same as input"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Inport
      Port		      "1"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: auto"
      LockScale		      off
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      VarSizeSig	      "Inherit"
      SampleTime	      "-1"
      SignalType	      "auto"
      SamplingMode	      "auto"
      LatchByDelayingOutsideSignal off
      LatchInputForFeedbackSignals off
      Interpolate	      on
    }
    Block {
      BlockType		      Mux
      Inputs		      "4"
      DisplayOption	      "none"
      UseBusObject	      off
      BusObject		      "BusObject"
      NonVirtualBus	      off
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: auto"
      LockScale		      off
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      VarSizeSig	      "Inherit"
      SampleTime	      "-1"
      SignalType	      "auto"
      SamplingMode	      "auto"
      SourceOfInitialOutputValue "Dialog"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
    }
    Block {
      BlockType		      "S-Function"
      FunctionName	      "system"
      SFunctionModules	      "''"
      PortCounts	      "[]"
      SFunctionDeploymentMode off
    }
    Block {
      BlockType		      Selector
      NumberOfDimensions      "1"
      IndexMode		      "One-based"
      InputPortWidth	      "-1"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      "FromPortIcon"
      Permissions	      "ReadWrite"
      PermitHierarchicalResolution "All"
      TreatAsAtomicUnit	      off
      CheckFcnCallInpInsideContextMsg off
      SystemSampleTime	      "-1"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      DataTypeOverrideAppliesTo	"AllNumericTypes"
      MinMaxOverflowLogging   "UseLocalSettings"
      Variant		      off
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Sum
      IconShape		      "rectangular"
      Inputs		      "++"
      CollapseMode	      "All dimensions"
      CollapseDim	      "1"
      InputSameDT	      on
      AccumDataTypeStr	      "Inherit: Inherit via internal rule"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Same as first input"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Terminator
    }
    Block {
      BlockType		      UnitDelay
      X0		      "0"
      InputProcessing	      "Inherited"
      SampleTime	      "1"
      StateMustResolveToSignalObject off
      RTWStateStorageClass    "Auto"
    }
  }
  System {
    Name		    "model_QK_SFSVD_ROS"
    Location		    [1894, 74, 3598, 1059]
    Open		    on
    ModelBrowserVisibility  on
    ModelBrowserWidth	    212
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "A4"
    PaperUnits		    "centimeters"
    TiledPaperMargins	    [1.270000, 1.270000, 1.270000, 1.270000]
    TiledPageScale	    1
    ShowPageBoundaries	    off
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    SIDHighWatermark	    "1660"
    Block {
      BlockType		      Reference
      Name		      "Detect\nChange"
      SID		      "1659"
      Ports		      [1, 1]
      Position		      [865, 55, 925, 85]
      LibraryVersion	      "1.225"
      SourceBlock	      "simulink/Logic and Bit\nOperations/Detect\nChange"
      SourceType	      "Detect Change"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
      vinit		      "0"
    }
    Block {
      BlockType		      Gain
      Name		      "Gain1"
      SID		      "1576"
      Position		      [1345, 149, 1400, 191]
      ShowName		      off
      Gain		      "[1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain10"
      SID		      "1603"
      Position		      [1350, 309, 1405, 351]
      ShowName		      off
      Gain		      "[1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain11"
      SID		      "1604"
      Position		      [1255, 354, 1310, 396]
      ShowName		      off
      Gain		      "[1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain12"
      SID		      "1607"
      Position		      [1240, 454, 1295, 496]
      ShowName		      off
      Gain		      "[1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain2"
      SID		      "1577"
      Position		      [1255, 178, 1330, 222]
      ShowName		      off
      Gain		      "[1 1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain3"
      SID		      "1578"
      Position		      [1345, 209, 1400, 251]
      ShowName		      off
      Gain		      "[1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain4"
      SID		      "1579"
      Position		      [1255, 239, 1310, 281]
      ShowName		      off
      Gain		      "[1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain5"
      SID		      "1580"
      Position		      [600, 459, 655, 501]
      ShowName		      off
      Gain		      "[1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain6"
      SID		      "1581"
      Position		      [600, 559, 655, 601]
      ShowName		      off
      Gain		      "[1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain7"
      SID		      "1582"
      Position		      [600, 359, 655, 401]
      ShowName		      off
      Gain		      "[1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain8"
      SID		      "1583"
      Position		      [600, 309, 655, 351]
      ShowName		      off
      Gain		      "-1"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain9"
      SID		      "1584"
      Position		      [600, 409, 655, 451]
      ShowName		      off
      Gain		      "[1 -1 -1]"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      SubSystem
      Name		      "Kalmanfilter"
      SID		      "226"
      Ports		      [4, 12, 1]
      Position		      [865, 152, 1160, 518]
      BackgroundColor	      "orange"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      Port {
	PortNumber		1
	Name			"p_n_filter"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      Port {
	PortNumber		2
	Name			"q_filter"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      Port {
	PortNumber		3
	Name			"v_n_filter"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      Port {
	PortNumber		4
	Name			"wbnb_filter"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      Port {
	PortNumber		5
	Name			"b_a_filter"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      Port {
	PortNumber		6
	Name			"b_w_filter"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      Port {
	PortNumber		7
	Name			"w_M_filter"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      Port {
	PortNumber		8
	Name			"k_t"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      Port {
	PortNumber		9
	Name			"CT0s"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      Port {
	PortNumber		10
	Name			"b_M"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
      System {
	Name			"Kalmanfilter"
	Location		[1490, 81, 3194, 1050]
	Open			off
	ModelBrowserVisibility	on
	ModelBrowserWidth	212
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"A4"
	PaperUnits		"centimeters"
	TiledPaperMargins	[1.270000, 1.270000, 1.270000, 1.270000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "dt"
	  SID			  "1513"
	  Position		  [135, 368, 165, 382]
	  IconDisplay		  "Port number"
	  SamplingMode		  "Sample based"
	}
	Block {
	  BlockType		  Inport
	  Name			  "u"
	  SID			  "227"
	  Position		  [135, 318, 165, 332]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  SamplingMode		  "Sample based"
	}
	Block {
	  BlockType		  Inport
	  Name			  "y"
	  SID			  "228"
	  Position		  [680, 423, 710, 437]
	  Port			  "3"
	  IconDisplay		  "Port number"
	  SamplingMode		  "Sample based"
	}
	Block {
	  BlockType		  Inport
	  Name			  "sensor"
	  SID			  "1484"
	  Position		  [135, 598, 165, 612]
	  Port			  "4"
	  IconDisplay		  "Port number"
	  SamplingMode		  "Sample based"
	}
	Block {
	  BlockType		  EnablePort
	  Name			  "Enable"
	  SID			  "1652"
	  Ports			  []
	  Position		  [402, 70, 422, 90]
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  SID			  "232"
	  Ports			  [1, 31]
	  Position		  [1000, 53, 1005, 687]
	  ShowName		  off
	  Outputs		  "31"
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Detect\nChange"
	  SID			  "1649"
	  Ports			  [1, 1]
	  Position		  [455, 590, 515, 620]
	  LibraryVersion	  "1.225"
	  SourceBlock		  "simulink/Logic and Bit\nOperations/Detect\nChange"
	  SourceType		  "Detect Change"
	  ShowPortLabels	  "FromPortIcon"
	  SystemSampleTime	  "-1"
	  FunctionWithSeparateData off
	  RTWMemSecFuncInitTerm	  "Inherit from model"
	  RTWMemSecFuncExecute	  "Inherit from model"
	  RTWMemSecDataConstants  "Inherit from model"
	  RTWMemSecDataInternal	  "Inherit from model"
	  RTWMemSecDataParameters "Inherit from model"
	  GeneratePreprocessorConditionals off
	  vinit			  "0"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux1"
	  SID			  "234"
	  Ports			  [3, 1]
	  Position		  [1060, 319, 1065, 381]
	  ShowName		  off
	  Inputs		  "3"
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux10"
	  SID			  "235"
	  Ports			  [3, 1]
	  Position		  [1090, 379, 1095, 441]
	  ShowName		  off
	  Inputs		  "3"
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux2"
	  SID			  "236"
	  Ports			  [3, 1]
	  Position		  [1095, 560, 1100, 620]
	  ShowName		  off
	  Inputs		  "3"
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux3"
	  SID			  "237"
	  Ports			  [4, 1]
	  Position		  [1120, 440, 1125, 520]
	  ShowName		  off
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux4"
	  SID			  "1547"
	  Ports			  [2, 1]
	  Position		  [1060, 618, 1065, 662]
	  ShowName		  off
	  Inputs		  "2"
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux6"
	  SID			  "239"
	  Ports			  [4, 1]
	  Position		  [1105, 177, 1110, 263]
	  ShowName		  off
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux7"
	  SID			  "240"
	  Ports			  [3, 1]
	  Position		  [1155, 59, 1160, 121]
	  ShowName		  off
	  Inputs		  "3"
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux8"
	  SID			  "241"
	  Ports			  [3, 1]
	  Position		  [1065, 119, 1070, 181]
	  ShowName		  off
	  Inputs		  "3"
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux9"
	  SID			  "242"
	  Ports			  [3, 1]
	  Position		  [1080, 259, 1085, 321]
	  ShowName		  off
	  Inputs		  "3"
	  DisplayOption		  "bar"
	}
	Block {
	  BlockType		  UnitDelay
	  Name			  "Unit Delay"
	  SID			  "246"
	  Position		  [810, 693, 845, 727]
	  BlockMirror		  on
	  X0			  "parameter.P0"
	  InputProcessing	  "Elements as channels (sample based)"
	  SampleTime		  "-1"
	  Port {
	    PortNumber		    1
	    Name		    "P(k-1)"
	    RTWStorageClass	    "Auto"
	    DataLoggingNameMode	    "SignalName"
	  }
	}
	Block {
	  BlockType		  UnitDelay
	  Name			  "Unit Delay2"
	  SID			  "247"
	  Position		  [805, 248, 840, 282]
	  BlockMirror		  on
	  X0			  "parameter.x0"
	  InputProcessing	  "Elements as channels (sample based)"
	  SampleTime		  "-1"
	  Port {
	    PortNumber		    1
	    Name		    "x(k-1)"
	    RTWStorageClass	    "Auto"
	    DataLoggingNameMode	    "SignalName"
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "b2n"
	  SID			  "248"
	  Ports			  [2, 1]
	  Position		  [1190, 135, 1290, 190]
	  MinAlgLoopOccurrences	  off
	  PropExecContextOutsideSubsystem off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  Opaque		  off
	  RequestExecContextInheritance	off
	  MaskHideContents	  off
	  System {
	    Name		    "b2n"
	    Location		    [2939, 147, 3354, 253]
	    Open		    off
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    212
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "A4"
	    PaperUnits		    "centimeters"
	    TiledPaperMargins	    [1.270000, 1.270000, 1.270000, 1.270000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "v_b"
	      SID		      "249"
	      Position		      [25, 113, 55, 127]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "q"
	      SID		      "250"
	      Position		      [25, 58, 55, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Reference
	      Name		      "Quaternion\nInverse"
	      SID		      "1270"
	      Ports		      [1, 1]
	      Position		      [120, 43, 175, 87]
	      LibraryVersion	      "1.100"
	      SourceBlock	      "aerolibutil/Quaternion\nInverse"
	      SourceType	      "Quaternion Inverse"
	    }
	    Block {
	      BlockType		      Reference
	      Name		      "Quaternion\nRotation1"
	      SID		      "1271"
	      Ports		      [2, 1]
	      Position		      [280, 53, 335, 97]
	      LibraryVersion	      "1.100"
	      SourceBlock	      "aerolibutil/Quaternion\nRotation"
	      SourceType	      "Quaternion Rotation"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "v_n"
	      SID		      "260"
	      Position		      [390, 68, 420, 82]
	      IconDisplay	      "Port number"
	    }
	    Line {
	      SrcBlock		      "q"
	      SrcPort		      1
	      DstBlock		      "Quaternion\nInverse"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "Quaternion\nRotation1"
	      SrcPort		      1
	      DstBlock		      "v_n"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "Quaternion\nInverse"
	      SrcPort		      1
	      DstBlock		      "Quaternion\nRotation1"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "v_b"
	      SrcPort		      1
	      Points		      [170, 0; 0, -35]
	      DstBlock		      "Quaternion\nRotation1"
	      DstPort		      2
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "correction"
	  SID			  "1656"
	  Ports			  [4, 2]
	  Position		  [750, 331, 920, 489]
	  LibraryVersion	  "1.31"
	  ErrorFcn		  "Stateflow.Translate.translate"
	  PermitHierarchicalResolution "ExplicitOnly"
	  TreatAsAtomicUnit	  on
	  MinAlgLoopOccurrences	  off
	  PropExecContextOutsideSubsystem off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  Opaque		  off
	  RequestExecContextInheritance	off
	  MaskHideContents	  off
	  MaskType		  "Stateflow"
	  MaskDescription	  "Embedded MATLAB block"
	  MaskSelfModifiable	  on
	  MaskDisplay		  "disp('correction');"
	  MaskIconFrame		  on
	  MaskIconOpaque	  off
	  MaskIconRotate	  "none"
	  MaskPortRotate	  "default"
	  MaskIconUnits		  "normalized"
	  System {
	    Name		    "correction"
	    Location		    [257, 457, 812, 717]
	    Open		    off
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "A4"
	    PaperUnits		    "centimeters"
	    TiledPaperMargins	    [1.270000, 1.270000, 1.270000, 1.270000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SIDHighWatermark	    "33"
	    Block {
	      BlockType		      Inport
	      Name		      "xpred"
	      SID		      "1656::1"
	      Position		      [20, 101, 40, 119]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "Ppred"
	      SID		      "1656::18"
	      Position		      [20, 136, 40, 154]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "y"
	      SID		      "1656::22"
	      Position		      [20, 171, 40, 189]
	      Port		      "3"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sensors"
	      SID		      "1656::23"
	      Position		      [20, 206, 40, 224]
	      Port		      "4"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Demux
	      Name		      " Demux "
	      SID		      "1656::31"
	      Ports		      [1, 1]
	      Position		      [270, 205, 320, 245]
	      Outputs		      "1"
	    }
	    Block {
	      BlockType		      "S-Function"
	      Name		      " SFunction "
	      SID		      "1656::30"
	      Tag		      "Stateflow S-Function model_QK_SFSVD_ROS 3"
	      Ports		      [4, 3]
	      Position		      [180, 102, 230, 203]
	      FunctionName	      "sf_sfun"
	      Parameters	      "parameter"
	      PortCounts	      "[4 3]"
	      EnableBusSupport	      on
	      Port {
		PortNumber		2
		Name			"x"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	      Port {
		PortNumber		3
		Name			"P"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	    }
	    Block {
	      BlockType		      Terminator
	      Name		      " Terminator "
	      SID		      "1656::33"
	      Position		      [460, 216, 480, 234]
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "x"
	      SID		      "1656::5"
	      Position		      [460, 101, 480, 119]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "P"
	      SID		      "1656::24"
	      Position		      [460, 136, 480, 154]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Line {
	      SrcBlock		      "xpred"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "Ppred"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "y"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sensors"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      4
	    }
	    Line {
	      Name		      "x"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      2
	      DstBlock		      "x"
	      DstPort		      1
	    }
	    Line {
	      Name		      "P"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      3
	      DstBlock		      "P"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      " Demux "
	      SrcPort		      1
	      DstBlock		      " Terminator "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      " SFunction "
	      SrcPort		      1
	      DstBlock		      " Demux "
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "covariancePrediction"
	  SID			  "1657"
	  Ports			  [4, 1]
	  Position		  [390, 414, 580, 561]
	  LibraryVersion	  "1.31"
	  ErrorFcn		  "Stateflow.Translate.translate"
	  PermitHierarchicalResolution "ExplicitOnly"
	  TreatAsAtomicUnit	  on
	  MinAlgLoopOccurrences	  off
	  PropExecContextOutsideSubsystem off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  Opaque		  off
	  RequestExecContextInheritance	off
	  MaskHideContents	  off
	  MaskType		  "Stateflow"
	  MaskDescription	  "Embedded MATLAB block"
	  MaskSelfModifiable	  on
	  MaskDisplay		  "disp('covariancePrediction');"
	  MaskIconFrame		  on
	  MaskIconOpaque	  off
	  MaskIconRotate	  "none"
	  MaskPortRotate	  "default"
	  MaskIconUnits		  "normalized"
	  System {
	    Name		    "covariancePrediction"
	    Location		    [257, 457, 812, 717]
	    Open		    off
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "A4"
	    PaperUnits		    "centimeters"
	    TiledPaperMargins	    [1.270000, 1.270000, 1.270000, 1.270000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SIDHighWatermark	    "32"
	    Block {
	      BlockType		      Inport
	      Name		      "uin"
	      SID		      "1657::1"
	      Position		      [20, 101, 40, 119]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "xin"
	      SID		      "1657::18"
	      Position		      [20, 136, 40, 154]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "Pin"
	      SID		      "1657::22"
	      Position		      [20, 171, 40, 189]
	      Port		      "3"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "dt"
	      SID		      "1657::24"
	      Position		      [20, 206, 40, 224]
	      Port		      "4"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Demux
	      Name		      " Demux "
	      SID		      "1657::30"
	      Ports		      [1, 1]
	      Position		      [270, 205, 320, 245]
	      Outputs		      "1"
	    }
	    Block {
	      BlockType		      "S-Function"
	      Name		      " SFunction "
	      SID		      "1657::29"
	      Tag		      "Stateflow S-Function model_QK_SFSVD_ROS 1"
	      Ports		      [4, 2]
	      Position		      [180, 102, 230, 203]
	      FunctionName	      "sf_sfun"
	      Parameters	      "parameter"
	      PortCounts	      "[4 2]"
	      EnableBusSupport	      on
	      Port {
		PortNumber		2
		Name			"P_pred"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	    }
	    Block {
	      BlockType		      Terminator
	      Name		      " Terminator "
	      SID		      "1657::32"
	      Position		      [460, 216, 480, 234]
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "P_pred"
	      SID		      "1657::5"
	      Position		      [460, 101, 480, 119]
	      IconDisplay	      "Port number"
	    }
	    Line {
	      SrcBlock		      "uin"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "xin"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "Pin"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "dt"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      4
	    }
	    Line {
	      Name		      "P_pred"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      2
	      DstBlock		      "P_pred"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      " Demux "
	      SrcPort		      1
	      DstBlock		      " Terminator "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      " SFunction "
	      SrcPort		      1
	      DstBlock		      " Demux "
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "statePrediction"
	  SID			  "1658"
	  Ports			  [3, 1]
	  Position		  [390, 314, 580, 386]
	  LibraryVersion	  "1.31"
	  ErrorFcn		  "Stateflow.Translate.translate"
	  PermitHierarchicalResolution "ExplicitOnly"
	  TreatAsAtomicUnit	  on
	  MinAlgLoopOccurrences	  off
	  PropExecContextOutsideSubsystem off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  Opaque		  off
	  RequestExecContextInheritance	off
	  MaskHideContents	  off
	  MaskType		  "Stateflow"
	  MaskDescription	  "Embedded MATLAB block"
	  MaskSelfModifiable	  on
	  MaskDisplay		  "disp('statePrediction');"
	  MaskIconFrame		  on
	  MaskIconOpaque	  off
	  MaskIconRotate	  "none"
	  MaskPortRotate	  "default"
	  MaskIconUnits		  "normalized"
	  System {
	    Name		    "statePrediction"
	    Location		    [257, 457, 812, 717]
	    Open		    off
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "A4"
	    PaperUnits		    "centimeters"
	    TiledPaperMargins	    [1.270000, 1.270000, 1.270000, 1.270000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SIDHighWatermark	    "31"
	    Block {
	      BlockType		      Inport
	      Name		      "uin"
	      SID		      "1658::1"
	      Position		      [20, 101, 40, 119]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "xin"
	      SID		      "1658::18"
	      Position		      [20, 136, 40, 154]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "dt"
	      SID		      "1658::27"
	      Position		      [20, 171, 40, 189]
	      Port		      "3"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Demux
	      Name		      " Demux "
	      SID		      "1658::29"
	      Ports		      [1, 1]
	      Position		      [270, 180, 320, 220]
	      Outputs		      "1"
	    }
	    Block {
	      BlockType		      "S-Function"
	      Name		      " SFunction "
	      SID		      "1658::28"
	      Tag		      "Stateflow S-Function model_QK_SFSVD_ROS 2"
	      Ports		      [3, 2]
	      Position		      [180, 100, 230, 180]
	      FunctionName	      "sf_sfun"
	      Parameters	      "parameter"
	      PortCounts	      "[3 2]"
	      EnableBusSupport	      on
	      Port {
		PortNumber		2
		Name			"x_pred"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	    }
	    Block {
	      BlockType		      Terminator
	      Name		      " Terminator "
	      SID		      "1658::31"
	      Position		      [460, 191, 480, 209]
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "x_pred"
	      SID		      "1658::5"
	      Position		      [460, 101, 480, 119]
	      IconDisplay	      "Port number"
	    }
	    Line {
	      SrcBlock		      "uin"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "xin"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "dt"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      3
	    }
	    Line {
	      Name		      "x_pred"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      2
	      DstBlock		      "x_pred"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      " Demux "
	      SrcPort		      1
	      DstBlock		      " Terminator "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      " SFunction "
	      SrcPort		      1
	      DstBlock		      " Demux "
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  Outport
	  Name			  "P_n"
	  SID			  "269"
	  Position		  [1400, 83, 1430, 97]
	  IconDisplay		  "Port number"
	  InitialOutput		  "parameter.x0(1:3)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "q"
	  SID			  "277"
	  Position		  [1400, 248, 1430, 262]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  InitialOutput		  "parameter.x0(7:10)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "V_n"
	  SID			  "270"
	  Position		  [1400, 158, 1430, 172]
	  Port			  "3"
	  IconDisplay		  "Port number"
	  InitialOutput		  "zeros(3,1)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "wbnb"
	  SID			  "272"
	  Position		  [1400, 403, 1430, 417]
	  Port			  "4"
	  IconDisplay		  "Port number"
	  PortDimensions	  "3"
	  InitialOutput		  "parameter.x0(17:19)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "b_a"
	  SID			  "274"
	  Position		  [1400, 283, 1430, 297]
	  Port			  "5"
	  IconDisplay		  "Port number"
	  PortDimensions	  "3"
	  InitialOutput		  "parameter.x0(11:13)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "b_w"
	  SID			  "275"
	  Position		  [1400, 343, 1430, 357]
	  Port			  "6"
	  IconDisplay		  "Port number"
	  PortDimensions	  "3"
	  InitialOutput		  "parameter.x0(14:16)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "w_M"
	  SID			  "276"
	  Position		  [1400, 473, 1430, 487]
	  Port			  "7"
	  IconDisplay		  "Port number"
	  PortDimensions	  "4"
	  InitialOutput		  "parameter.x0(20:23)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "k_t"
	  SID			  "279"
	  Position		  [1400, 523, 1430, 537]
	  Port			  "8"
	  IconDisplay		  "Port number"
	  InitialOutput		  "parameter.k_t"
	}
	Block {
	  BlockType		  Outport
	  Name			  "CT0s"
	  SID			  "280"
	  Position		  [1355, 543, 1385, 557]
	  Port			  "9"
	  IconDisplay		  "Port number"
	  InitialOutput		  "parameter.CT0s"
	}
	Block {
	  BlockType		  Outport
	  Name			  "b_M"
	  SID			  "689"
	  Position		  [1400, 583, 1430, 597]
	  Port			  "10"
	  IconDisplay		  "Port number"
	  InitialOutput		  "parameter.x0(26:28)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "v_wind"
	  SID			  "1545"
	  Position		  [1400, 633, 1430, 647]
	  Port			  "11"
	  IconDisplay		  "Port number"
	  InitialOutput		  "parameter.x0(29:30)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "drag"
	  SID			  "1548"
	  Position		  [1400, 663, 1430, 677]
	  Port			  "12"
	  IconDisplay		  "Port number"
	  InitialOutput		  "parameter.x0(31)"
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  DstBlock		  "Mux7"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  DstBlock		  "Mux7"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  3
	  DstBlock		  "Mux7"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  20
	  DstBlock		  "Mux3"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  21
	  DstBlock		  "Mux3"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  22
	  DstBlock		  "Mux3"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  23
	  DstBlock		  "Mux3"
	  DstPort		  4
	}
	Line {
	  SrcBlock		  "correction"
	  SrcPort		  1
	  Points		  [20, 0]
	  Branch {
	    DstBlock		    "Demux1"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [0, -105]
	    DstBlock		    "Unit Delay2"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "correction"
	  SrcPort		  2
	  Points		  [20, 0; 0, 260]
	  DstBlock		  "Unit Delay"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux6"
	  SrcPort		  1
	  Points		  [35, 0]
	  Branch {
	    Points		    [0, 35]
	    DstBlock		    "q"
	    DstPort		    1
	  }
	  Branch {
	    Labels		    [0, 0]
	    Points		    [0, -45]
	    DstBlock		    "b2n"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  7
	  DstBlock		  "Mux6"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  8
	  DstBlock		  "Mux6"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  9
	  DstBlock		  "Mux6"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  10
	  DstBlock		  "Mux6"
	  DstPort		  4
	}
	Line {
	  SrcBlock		  "u"
	  SrcPort		  1
	  Points		  [145, 0]
	  Branch {
	    Points		    [0, 110]
	    DstBlock		    "covariancePrediction"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "statePrediction"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  14
	  DstBlock		  "Mux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  15
	  DstBlock		  "Mux1"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  16
	  DstBlock		  "Mux1"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  4
	  DstBlock		  "Mux8"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  5
	  DstBlock		  "Mux8"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  6
	  DstBlock		  "Mux8"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  11
	  DstBlock		  "Mux9"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  12
	  DstBlock		  "Mux9"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  13
	  DstBlock		  "Mux9"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  17
	  DstBlock		  "Mux10"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  18
	  DstBlock		  "Mux10"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  19
	  DstBlock		  "Mux10"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Mux7"
	  SrcPort		  1
	  DstBlock		  "P_n"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux9"
	  SrcPort		  1
	  DstBlock		  "b_a"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux1"
	  SrcPort		  1
	  DstBlock		  "b_w"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux10"
	  SrcPort		  1
	  DstBlock		  "wbnb"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux3"
	  SrcPort		  1
	  DstBlock		  "w_M"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux2"
	  SrcPort		  1
	  DstBlock		  "b_M"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "b2n"
	  SrcPort		  1
	  DstBlock		  "V_n"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux8"
	  SrcPort		  1
	  DstBlock		  "b2n"
	  DstPort		  1
	}
	Line {
	  Name			  "x(k-1)"
	  Labels		  [0, 0]
	  SrcBlock		  "Unit Delay2"
	  SrcPort		  1
	  Points		  [-500, 0; 0, 85]
	  Branch {
	    Points		    [0, 120]
	    DstBlock		    "covariancePrediction"
	    DstPort		    2
	  }
	  Branch {
	    DstBlock		    "statePrediction"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  24
	  DstBlock		  "k_t"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  25
	  DstBlock		  "CT0s"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "sensor"
	  SrcPort		  1
	  DstBlock		  "Detect\nChange"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux4"
	  SrcPort		  1
	  DstBlock		  "v_wind"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  31
	  DstBlock		  "drag"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  26
	  DstBlock		  "Mux2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  27
	  DstBlock		  "Mux2"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  28
	  DstBlock		  "Mux2"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  29
	  DstBlock		  "Mux4"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  30
	  DstBlock		  "Mux4"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "statePrediction"
	  SrcPort		  1
	  DstBlock		  "correction"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "covariancePrediction"
	  SrcPort		  1
	  Points		  [60, 0; 0, -100]
	  DstBlock		  "correction"
	  DstPort		  2
	}
	Line {
	  Name			  "P(k-1)"
	  Labels		  [0, 0]
	  SrcBlock		  "Unit Delay"
	  SrcPort		  1
	  Points		  [-700, 0; 0, -205]
	  DstBlock		  "covariancePrediction"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "y"
	  SrcPort		  1
	  DstBlock		  "correction"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "dt"
	  SrcPort		  1
	  Points		  [115, 0]
	  Branch {
	    Points		    [0, 165]
	    DstBlock		    "covariancePrediction"
	    DstPort		    4
	  }
	  Branch {
	    DstBlock		    "statePrediction"
	    DstPort		    3
	  }
	}
	Line {
	  SrcBlock		  "Detect\nChange"
	  SrcPort		  1
	  Points		  [155, 0; 0, -135]
	  DstBlock		  "correction"
	  DstPort		  4
	}
      }
    }
    Block {
      BlockType		      Mux
      Name		      "Mux1"
      SID		      "1483"
      Ports		      [7, 1]
      Position		      [760, 257, 765, 603]
      NamePlacement	      "alternate"
      ShowName		      off
      Inputs		      "7"
      DisplayOption	      "bar"
    }
    Block {
      BlockType		      Mux
      Name		      "Mux2"
      SID		      "1606"
      Ports		      [2, 1]
      Position		      [1245, 408, 1250, 437]
      NamePlacement	      "alternate"
      ShowName		      off
      Inputs		      "2"
      DisplayOption	      "bar"
    }
    Block {
      BlockType		      Mux
      Name		      "Mux3"
      SID		      "1629"
      Ports		      [5, 1]
      Position		      [1315, 389, 1320, 511]
      NamePlacement	      "alternate"
      ShowName		      off
      Inputs		      "5"
      DisplayOption	      "bar"
    }
    Block {
      BlockType		      Mux
      Name		      "Mux4"
      SID		      "1558"
      Ports		      [7, 1]
      Position		      [760, 653, 765, 877]
      NamePlacement	      "alternate"
      ShowName		      off
      Inputs		      "7"
      DisplayOption	      "bar"
    }
    Block {
      BlockType		      Selector
      Name		      "Selector"
      SID		      "1557"
      Ports		      [1, 1]
      Position		      [610, 662, 650, 688]
      ShowName		      off
      InputPortWidth	      "2"
      IndexOptions	      "Index vector (dialog)"
      Indices		      "2"
      OutputSizes	      "1"
      Port {
	PortNumber		1
	Name			"x,y"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
    }
    Block {
      BlockType		      Selector
      Name		      "Selector1"
      SID		      "1560"
      Ports		      [1, 1]
      Position		      [610, 692, 650, 718]
      ShowName		      off
      InputPortWidth	      "2"
      IndexOptions	      "Index vector (dialog)"
      Indices		      "2"
      OutputSizes	      "1"
      Port {
	PortNumber		1
	Name			"z"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
    }
    Block {
      BlockType		      Selector
      Name		      "Selector2"
      SID		      "1561"
      Ports		      [1, 1]
      Position		      [610, 722, 650, 748]
      ShowName		      off
      InputPortWidth	      "2"
      IndexOptions	      "Index vector (dialog)"
      Indices		      "2"
      OutputSizes	      "1"
      Port {
	PortNumber		1
	Name			"vel"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
    }
    Block {
      BlockType		      Selector
      Name		      "Selector3"
      SID		      "1562"
      Ports		      [1, 1]
      Position		      [610, 752, 650, 778]
      ShowName		      off
      InputPortWidth	      "2"
      IndexOptions	      "Index vector (dialog)"
      Indices		      "2"
      OutputSizes	      "1"
      Port {
	PortNumber		1
	Name			"a"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
    }
    Block {
      BlockType		      Selector
      Name		      "Selector4"
      SID		      "1563"
      Ports		      [1, 1]
      Position		      [610, 782, 650, 808]
      ShowName		      off
      InputPortWidth	      "2"
      IndexOptions	      "Index vector (dialog)"
      Indices		      "2"
      OutputSizes	      "1"
      Port {
	PortNumber		1
	Name			"w"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
    }
    Block {
      BlockType		      Selector
      Name		      "Selector5"
      SID		      "1564"
      Ports		      [1, 1]
      Position		      [610, 812, 650, 838]
      ShowName		      off
      InputPortWidth	      "2"
      IndexOptions	      "Index vector (dialog)"
      Indices		      "2"
      OutputSizes	      "1"
      Port {
	PortNumber		1
	Name			"wM"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
    }
    Block {
      BlockType		      Selector
      Name		      "Selector6"
      SID		      "1565"
      Ports		      [1, 1]
      Position		      [610, 842, 650, 868]
      ShowName		      off
      InputPortWidth	      "2"
      IndexOptions	      "Index vector (dialog)"
      Indices		      "2"
      OutputSizes	      "1"
      Port {
	PortNumber		1
	Name			"B"
	RTWStorageClass		"Auto"
	DataLoggingNameMode	"SignalName"
      }
    }
    Block {
      BlockType		      Selector
      Name		      "Selector7"
      SID		      "1589"
      Ports		      [1, 1]
      Position		      [445, 262, 485, 298]
      ShowName		      off
      InputPortWidth	      "3"
      IndexOptions	      "Index vector (dialog)"
      Indices		      "[1 2]"
      OutputSizes	      "1"
    }
    Block {
      BlockType		      Selector
      Name		      "Selector8"
      SID		      "1568"
      Ports		      [1, 1]
      Position		      [440, 57, 480, 83]
      ShowName		      off
      InputPortWidth	      "2"
      IndexOptions	      "Index vector (dialog)"
      Indices		      "2"
      OutputSizes	      "1"
    }
    Block {
      BlockType		      Sum
      Name		      "Sum1"
      SID		      "1532"
      Ports		      [2, 1]
      Position		      [705, 60, 725, 80]
      ShowName		      off
      IconShape		      "round"
      Inputs		      "|-+"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      UnitDelay
      Name		      "Unit Delay1"
      SID		      "1533"
      Position		      [620, 53, 650, 87]
      InputProcessing	      "Elements as channels (sample based)"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Reference
      Name		      "altimeter"
      SID		      "1553"
      Ports		      [0, 4]
      Position		      [50, 275, 175, 340]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/altimeter"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "ba_output"
      SID		      "1631"
      Ports		      [2]
      Position		      [1505, 301, 1630, 339]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/ba_output"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "bw_output"
      SID		      "1632"
      Ports		      [2]
      Position		      [1505, 356, 1630, 394]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/bw_output"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "fix"
      SID		      "1555"
      Ports		      [0, 3]
      Position		      [50, 198, 175, 262]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/fix"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "fix_velocity"
      SID		      "1556"
      Ports		      [0, 2]
      Position		      [50, 358, 175, 402]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/fix_velocity"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "imu_output"
      SID		      "1645"
      Ports		      [4]
      Position		      [1505, 485, 1630, 630]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/imu_output"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "log"
      SID		      "1633"
      Ports		      [2]
      Position		      [1505, 411, 1630, 464]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/log"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "magnetic"
      SID		      "1552"
      Ports		      [0, 2]
      Position		      [50, 663, 175, 707]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/magnetic"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "motor_status"
      SID		      "1660"
      Ports		      [0, 6]
      Position		      [45, 516, 175, 644]
      LibraryVersion	      "1.106"
      SourceBlock	      "PortLib/motor_status"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "raw_imu"
      SID		      "1626"
      Ports		      [0, 3]
      Position		      [50, 419, 175, 501]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/raw_imu"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Reference
      Name		      "state_output"
      SID		      "1630"
      Ports		      [5]
      Position		      [1505, 120, 1630, 280]
      LibraryVersion	      "1.104"
      SourceBlock	      "PortLib/state_output"
      SourceType	      "SubSystem"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
    }
    Line {
      SrcBlock		      "motor_status"
      SrcPort		      4
      Points		      [320, 0; 0, -355; 305, 0; 0, 55]
      DstBlock		      "Kalmanfilter"
      DstPort		      2
    }
    Line {
      SrcBlock		      "fix"
      SrcPort		      3
      Points		      [220, 0; 0, 30]
      DstBlock		      "Selector7"
      DstPort		      1
    }
    Line {
      SrcBlock		      "altimeter"
      SrcPort		      2
      Points		      [190, 0; 0, 30]
      DstBlock		      "Gain8"
      DstPort		      1
    }
    Line {
      SrcBlock		      "fix_velocity"
      SrcPort		      2
      Points		      [365, 0; 0, -10]
      DstBlock		      "Gain7"
      DstPort		      1
    }
    Line {
      SrcBlock		      "raw_imu"
      SrcPort		      3
      Points		      [335, 0; 0, -55; 60, 0]
      Branch {
	DstBlock		"Gain9"
	DstPort			1
      }
      Branch {
	Points			[0, 180]
	DstBlock		"imu_output"
	DstPort			4
      }
    }
    Line {
      SrcBlock		      "raw_imu"
      SrcPort		      2
      Points		      [0, 20]
      DstBlock		      "Gain5"
      DstPort		      1
    }
    Line {
      SrcBlock		      "magnetic"
      SrcPort		      2
      Points		      [375, 0; 0, -115]
      DstBlock		      "Gain6"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Mux1"
      SrcPort		      1
      Points		      [15, 0; 0, -50]
      DstBlock		      "Kalmanfilter"
      DstPort		      3
    }
    Line {
      SrcBlock		      "Mux4"
      SrcPort		      1
      Points		      [25, 0; 0, -295]
      DstBlock		      "Kalmanfilter"
      DstPort		      4
    }
    Line {
      SrcBlock		      "Unit Delay1"
      SrcPort		      1
      DstBlock		      "Sum1"
      DstPort		      1
    }
    Line {
      Name		      "x,y"
      Labels		      [0, 0]
      SrcBlock		      "Selector"
      SrcPort		      1
      DstBlock		      "Mux4"
      DstPort		      1
    }
    Line {
      Name		      "z"
      Labels		      [0, 0]
      SrcBlock		      "Selector1"
      SrcPort		      1
      DstBlock		      "Mux4"
      DstPort		      2
    }
    Line {
      Name		      "vel"
      Labels		      [0, 0]
      SrcBlock		      "Selector2"
      SrcPort		      1
      DstBlock		      "Mux4"
      DstPort		      3
    }
    Line {
      Name		      "a"
      Labels		      [0, 0]
      SrcBlock		      "Selector3"
      SrcPort		      1
      DstBlock		      "Mux4"
      DstPort		      4
    }
    Line {
      Name		      "w"
      Labels		      [0, 0]
      SrcBlock		      "Selector4"
      SrcPort		      1
      DstBlock		      "Mux4"
      DstPort		      5
    }
    Line {
      Name		      "wM"
      Labels		      [0, 0]
      SrcBlock		      "Selector5"
      SrcPort		      1
      DstBlock		      "Mux4"
      DstPort		      6
    }
    Line {
      Name		      "B"
      Labels		      [0, 0]
      SrcBlock		      "Selector6"
      SrcPort		      1
      DstBlock		      "Mux4"
      DstPort		      7
    }
    Line {
      SrcBlock		      "fix"
      SrcPort		      1
      Points		      [45, 0; 0, 465]
      DstBlock		      "Selector"
      DstPort		      1
    }
    Line {
      SrcBlock		      "altimeter"
      SrcPort		      1
      Points		      [40, 0; 0, 420]
      DstBlock		      "Selector1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "raw_imu"
      SrcPort		      1
      Points		      [30, 0]
      Branch {
	Points			[0, 330; 310, 0]
	Branch {
	  DstBlock		  "Selector3"
	  DstPort		  1
	}
	Branch {
	  Points		  [0, 30]
	  DstBlock		  "Selector4"
	  DstPort		  1
	}
      }
      Branch {
	Points			[0, -365]
	Branch {
	  DstBlock		  "Selector8"
	  DstPort		  1
	}
	Branch {
	  Points		  [0, -30; 1250, 0; 0, 100]
	  Branch {
	    Points		    [0, 170]
	    Branch {
	      DstBlock		      "ba_output"
	      DstPort		      1
	    }
	    Branch {
	      Points		      [0, 55]
	      Branch {
		DstBlock		"bw_output"
		DstPort			1
	      }
	      Branch {
		Points			[0, 60]
		Branch {
		  DstBlock		  "log"
		  DstPort		  1
		}
		Branch {
		  Points		  [0, 80]
		  DstBlock		  "imu_output"
		  DstPort		  1
		}
	      }
	    }
	  }
	  Branch {
	    DstBlock		    "state_output"
	    DstPort		    1
	  }
	}
      }
    }
    Line {
      SrcBlock		      "magnetic"
      SrcPort		      1
      Points		      [20, 0; 0, 180]
      DstBlock		      "Selector6"
      DstPort		      1
    }
    Line {
      SrcBlock		      "fix_velocity"
      SrcPort		      1
      Points		      [35, 0; 0, 365]
      DstBlock		      "Selector2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Selector8"
      SrcPort		      1
      Points		      [85, 0]
      Branch {
	Points			[0, 35; 145, 0]
	DstBlock		"Sum1"
	DstPort			2
      }
      Branch {
	DstBlock		"Unit Delay1"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "motor_status"
      SrcPort		      1
      Points		      [25, 0; 0, 295]
      DstBlock		      "Selector5"
      DstPort		      1
    }
    Line {
      Name		      "p_n_filter"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      1
      DstBlock		      "Gain1"
      DstPort		      1
    }
    Line {
      Name		      "wbnb_filter"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      4
      DstBlock		      "Gain4"
      DstPort		      1
    }
    Line {
      Name		      "q_filter"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      2
      DstBlock		      "Gain2"
      DstPort		      1
    }
    Line {
      Name		      "v_n_filter"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      3
      DstBlock		      "Gain3"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Gain5"
      SrcPort		      1
      DstBlock		      "Mux1"
      DstPort		      5
    }
    Line {
      SrcBlock		      "Gain6"
      SrcPort		      1
      DstBlock		      "Mux1"
      DstPort		      7
    }
    Line {
      SrcBlock		      "Gain7"
      SrcPort		      1
      DstBlock		      "Mux1"
      DstPort		      3
    }
    Line {
      SrcBlock		      "Gain8"
      SrcPort		      1
      DstBlock		      "Mux1"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Gain9"
      SrcPort		      1
      DstBlock		      "Mux1"
      DstPort		      4
    }
    Line {
      SrcBlock		      "Selector7"
      SrcPort		      1
      DstBlock		      "Mux1"
      DstPort		      1
    }
    Line {
      Name		      "b_a_filter"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      5
      Points		      [80, 0; 0, 40]
      DstBlock		      "Gain10"
      DstPort		      1
    }
    Line {
      Name		      "b_w_filter"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      6
      Points		      [70, 0; 0, 55]
      DstBlock		      "Gain11"
      DstPort		      1
    }
    Line {
      Name		      "w_M_filter"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      7
      Points		      [60, 0; 0, 50]
      DstBlock		      "Mux3"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Mux2"
      SrcPort		      1
      DstBlock		      "Mux3"
      DstPort		      2
    }
    Line {
      Name		      "k_t"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      8
      Points		      [55, 0; 0, 35]
      DstBlock		      "Mux2"
      DstPort		      1
    }
    Line {
      Name		      "CT0s"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      9
      Points		      [50, 0; 0, 20]
      DstBlock		      "Mux2"
      DstPort		      2
    }
    Line {
      Name		      "b_M"
      Labels		      [0, 0]
      SrcBlock		      "Kalmanfilter"
      SrcPort		      10
      Points		      [40, 0; 0, 10]
      DstBlock		      "Mux3"
      DstPort		      3
    }
    Line {
      SrcBlock		      "Kalmanfilter"
      SrcPort		      12
      DstBlock		      "Mux3"
      DstPort		      5
    }
    Line {
      SrcBlock		      "Gain12"
      SrcPort		      1
      DstBlock		      "Mux3"
      DstPort		      4
    }
    Line {
      SrcBlock		      "Gain1"
      SrcPort		      1
      DstBlock		      "state_output"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Gain2"
      SrcPort		      1
      Points		      [80, 0]
      Branch {
	DstBlock		"state_output"
	DstPort			3
      }
      Branch {
	Points			[0, 340]
	DstBlock		"imu_output"
	DstPort			2
      }
    }
    Line {
      SrcBlock		      "Gain3"
      SrcPort		      1
      DstBlock		      "state_output"
      DstPort		      4
    }
    Line {
      SrcBlock		      "Gain4"
      SrcPort		      1
      Points		      [15, 0]
      Branch {
	DstBlock		"state_output"
	DstPort			5
      }
      Branch {
	Points			[0, 315]
	DstBlock		"imu_output"
	DstPort			3
      }
    }
    Line {
      SrcBlock		      "Gain10"
      SrcPort		      1
      DstBlock		      "ba_output"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Gain11"
      SrcPort		      1
      Points		      [60, 0; 0, 10]
      DstBlock		      "bw_output"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Mux3"
      SrcPort		      1
      DstBlock		      "log"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Kalmanfilter"
      SrcPort		      11
      Points		      [35, 0; 0, 5]
      DstBlock		      "Gain12"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Sum1"
      SrcPort		      1
      Points		      [75, 0]
      Branch {
	Points			[0, 130]
	DstBlock		"Kalmanfilter"
	DstPort			1
      }
      Branch {
	DstBlock		"Detect\nChange"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Detect\nChange"
      SrcPort		      1
      Points		      [80, 0]
      DstBlock		      "Kalmanfilter"
      DstPort		      enable
    }
    Line {
      SrcBlock		      "motor_status"
      SrcPort		      5
      Points		      [335, 0; 0, -80]
      DstBlock		      "Mux1"
      DstPort		      6
    }
    Annotation {
      Position		      [1446, 735]
    }
  }
}
# Finite State Machines
#
#    Stateflow Version 7.5 (R2010a) dated Jul 24 2010, 07:30:36
#
#


Stateflow {
  machine {
    id			    1
    name		    "model_QK_SFSVD_ROS"
    created		    "22-Jan-2013 14:48:25"
    isLibrary		    0
    firstTarget		    35
    sfVersion		    75014000.000003
  }
  chart {
    id			    2
    name		    "Kalmanfilter/covariancePrediction"
    windowPosition	    [399.879 291.305 200.25 189.75]
    viewLimits		    [0 156.75 0 153.75]
    screen		    [1 1 1680 1050 1.333333333333333]
    treeNode		    [0 3 0 0]
    firstTransition	    5
    firstJunction	    4
    viewObj		    2
    machine		    1
    subviewS {
    }
    ssIdHighWaterMark	    12
    decomposition	    CLUSTER_CHART
    type		    EML_CHART
    firstData		    6
    chartFileNumber	    1
    disableImplicitCasting  1
    eml {
      name		      "covariancePrediction"
    }
  }
  state {
    id			    3
    labelString		    "eML_blk_kernel()"
    position		    [18 64.5 118 66]
    fontSize		    12
    chart		    2
    treeNode		    [2 0 0 0]
    superState		    SUBCHART
    subviewer		    2
    ssIdNumber		    1
    type		    FUNC_STATE
    decomposition	    CLUSTER_STATE
    eml {
      isEML		      1
      script		      "function P_pred = covariancePrediction(uin, xin, Pin, dt, parameter)\n\n\n% parameters\ng       ="
      " parameter.g;\nm       = parameter.m;\nl_m     = parameter.l_m;\nI_x     = parameter.I_x;\nI_y     = parameter.I"
      "_y;\nI_z     = parameter.I_z;\nPsi     = parameter.Psi;\nR_A     = parameter.R_A;\nJ_M     = parameter.J_M;\nCT2"
      "s    = parameter.CT2s;\nCT1s    = parameter.CT1s;\nC_wz    = parameter.C_wz;\nC_mxy   = parameter.C_mxy;\nC_mz  "
      "  = parameter.C_mz;\nalpha_m = parameter.alpha_m;\nbeta_m  = parameter.beta_m;\nk_m     = parameter.k_m;\nQin   "
      "  = parameter.Q0;\n\n% input vector\nU_1 = uin(1);\nU_2 = uin(2);\nU_3 = uin(3);\nU_4 = uin(4);\n\n% state vecto"
      "r\n% p_x = xin(1);\n% p_y = xin(2);\n% p_z = xin(3);\nu = xin(4);\nv = xin(5);\nw = xin(6);\nq_0 = xin(7);\nq_1 "
      "= xin(8);\nq_2 = xin(9);\nq_3 = xin(10);\n% a_x_bias = xin(11);\n% a_y_bias = xin(12);\n% a_z_bias = xin(13);\n%"
      " p_bias = xin(14);\n% q_bias = xin(15);\n% r_bias = xin(16);\np = xin(17);\nq = xin(18);\nr = xin(19);\nw_1 = xi"
      "n(20);\nw_2 = xin(21);\nw_3 = xin(22);\nw_4 = xin(23);\nk_t = xin(24);\nCT0s = xin(25);\n% M_x0 = xin(26);\n% M_"
      "y0 = xin(27);\n% M_z0 = xin(28);\nv_x_wind = xin(29);\nv_y_wind = xin(30);\nC_wxy = xin(31);\n\nA = zeros(31);\n"
      "Q = zeros(31);\nW = zeros(3,4);\n\nvx_res = -u+v_x_wind*(q_0*q_0+q_1*q_1-q_2*q_2-q_3*q_3)+v_y_wind*(q_0*q_3*2.0+"
      "q_1*q_2*2.0);\nvy_res =  v-v_y_wind*(q_0*q_0-q_1*q_1+q_2*q_2-q_3*q_3)+v_x_wind*(q_0*q_3*2.0-q_1*q_2*2.0);\nvz_re"
      "s =  w-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0);\n\nvelocityLength    = eps + sqrt("
      "vx_res^2 + vy_res^2 + vz_res^2);\nangularRateLength = eps + sqrt(p*p+q*q+r*r);\n\nif min(uin) > 3\n    A(1,4) = "
      "q_0*q_0+q_1*q_1-q_2*q_2-q_3*q_3;\n    A(1,5) = q_0*q_3*-2.0+q_1*q_2*2.0;\n    A(1,6) = q_0*q_2*2.0+q_1*q_3*2.0;\n"
      "    A(1,7) = q_0*u*2.0-q_3*v*2.0+q_2*w*2.0;\n    A(1,8) = q_1*u*2.0+q_2*v*2.0+q_3*w*2.0;\n    A(1,9) = q_2*u*-2."
      "0+q_1*v*2.0+q_0*w*2.0;\n    A(1,10) = q_3*u*-2.0-q_0*v*2.0+q_1*w*2.0;\n    A(2,4) = q_0*q_3*2.0+q_1*q_2*2.0;\n  "
      "  A(2,5) = q_0*q_0-q_1*q_1+q_2*q_2-q_3*q_3;\n    A(2,6) = q_0*q_1*-2.0+q_2*q_3*2.0;\n    A(2,7) = q_3*u*2.0+q_0*"
      "v*2.0-q_1*w*2.0;\n    A(2,8) = q_2*u*2.0-q_1*v*2.0-q_0*w*2.0;\n    A(2,9) = q_1*u*2.0+q_2*v*2.0+q_3*w*2.0;\n    "
      "A(2,10) = q_0*u*2.0-q_3*v*2.0+q_2*w*2.0;\n    A(3,4) = q_0*q_2*-2.0+q_1*q_3*2.0;\n    A(3,5) = q_0*q_1*2.0+q_2*q"
      "_3*2.0;\n    A(3,6) = q_0*q_0-q_1*q_1-q_2*q_2+q_3*q_3;\n    A(3,7) = q_2*u*-2.0+q_1*v*2.0+q_0*w*2.0;\n    A(3,8)"
      " = q_3*u*2.0+q_0*v*2.0-q_1*w*2.0;\n    A(3,9) = q_0*u*-2.0+q_3*v*2.0-q_2*w*2.0;\n    A(3,10) = q_1*u*2.0+q_2*v*2"
      ".0+q_3*w*2.0;\n    A(4,4) = -(C_wxy*velocityLength)/m-(C_wxy*(vx_res)*(u*-2.0+v_x_wind*(q_0*q_0+q_1*q_1-q_2*q_2-"
      "q_3*q_3)*2.0+v_y_wind*(q_0*q_3*2.0+q_1*q_2*2.0)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    A(4,5) = r+(C_wxy*(vx"
      "_res)*(v*2.0-v_y_wind*(q_0*q_0-q_1*q_1+q_2*q_2-q_3*q_3)*2.0+v_x_wind*(q_0*q_3*2.0-q_1*q_2*2.0)*2.0)*1.0/velocity"
      "Length*(1.0/2.0))/m;\n    A(4,6) = -q+(C_wxy*(vx_res)*(w*2.0-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+v_y_wind*(q_"
      "0*q_1*2.0-q_2*q_3*2.0)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    A(4,7) = g*q_2*-2.0+(C_wxy*(q_0*v_x_wind*2.0+q"
      "_3*v_y_wind*2.0)*velocityLength)/m+(C_wxy*(vx_res)*((q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(vy_res)*-2.0+(q_0*v_x_w"
      "ind*2.0+q_3*v_y_wind*2.0)*(vx_res)*2.0+(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0"
      "/2.0))/m;\n    A(4,8) = g*q_3*2.0+(C_wxy*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*velocityLength)/m+(C_wxy*(vx_res)*("
      "(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(vy_res)*2.0+(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(vx_res)*2.0+(q_0*v_y_wind*"
      "2.0-q_3*v_x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    A(4,9) = g*q_0*-2.0+(C_wxy*(q_1*v_y_wi"
      "nd*2.0-q_2*v_x_wind*2.0)*velocityLength)/m-(C_wxy*(vx_res)*((q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(vy_res)*2.0-(q_"
      "1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(vx_res)*2.0+(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(vz_res)*2.0)*1.0/velocityLeng"
      "th*(1.0/2.0))/m;\n    A(4,10) = g*q_1*2.0+(C_wxy*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*velocityLength)/m+(C_wxy*(v"
      "x_res)*((q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(vy_res)*2.0+(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(vx_res)*2.0-(q_1*v"
      "_x_wind*2.0+q_2*v_y_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    A(4,18) = -w;\n    A(4,19) = v"
      ";\n    A(4,29) = (C_wxy*velocityLength*(q_0*q_0+q_1*q_1-q_2*q_2-q_3*q_3))/m+(C_wxy*(vx_res)*1.0/velocityLength*("
      "(q_0*q_3*2.0-q_1*q_2*2.0)*(vy_res)*2.0-(q_0*q_2*2.0+q_1*q_3*2.0)*(vz_res)*2.0+(vx_res)*(q_0*q_0+q_1*q_1-q_2*q_2-"
      "q_3*q_3)*2.0)*(1.0/2.0))/m;\n    A(4,30) = (C_wxy*(q_0*q_3*2.0+q_1*q_2*2.0)*velocityLength)/m+(C_wxy*(vx_res)*1."
      "0/velocityLength*((q_0*q_3*2.0+q_1*q_2*2.0)*(vx_res)*2.0-(vy_res)*(q_0*q_0-q_1*q_1+q_2*q_2-q_3*q_3)*2.0+(q_0*q_1"
      "*2.0-q_2*q_3*2.0)*(vz_res)*2.0)*(1.0/2.0))/m;\n    A(4,31) = ((vx_res)*velocityLength)/m;\n    A(5,4) = -r+(C_wx"
      "y*(u*-2.0+v_x_wind*(q_0*q_0+q_1*q_1-q_2*q_2-q_3*q_3)*2.0+v_y_wind*(q_0*q_3*2.0+q_1*q_2*2.0)*2.0)*1.0/velocityLen"
      "gth*(vy_res)*(1.0/2.0))/m;\n    A(5,5) = -(C_wxy*velocityLength)/m-(C_wxy*(v*2.0-v_y_wind*(q_0*q_0-q_1*q_1+q_2*q"
      "_2-q_3*q_3)*2.0+v_x_wind*(q_0*q_3*2.0-q_1*q_2*2.0)*2.0)*1.0/velocityLength*(vy_res)*(1.0/2.0))/m;\n    A(5,6) = "
      "p-(C_wxy*(w*2.0-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0)*1.0/velocityLengt"
      "h*(vy_res)*(1.0/2.0))/m;\n    A(5,7) = g*q_1*2.0+(C_wxy*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*velocityLength)/m-(C"
      "_wxy*((q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(vy_res)*-2.0+(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(vx_res)*2.0+(q_1*v_"
      "y_wind*2.0-q_2*v_x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(vy_res)*(1.0/2.0))/m;\n    A(5,8) = g*q_0*2.0-(C_"
      "wxy*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*velocityLength)/m-(C_wxy*((q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(vy_res)*2"
      ".0+(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(vx_res)*2.0+(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(vz_res)*2.0)*1.0/veloci"
      "tyLength*(vy_res)*(1.0/2.0))/m;\n    A(5,9) = g*q_3*2.0+(C_wxy*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*velocityLengt"
      "h)/m+(C_wxy*((q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(vy_res)*2.0-(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(vx_res)*2.0+("
      "q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(vy_res)*(1.0/2.0))/m;\n    A(5,10) = g*q_2*"
      "2.0-(C_wxy*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*velocityLength)/m-(C_wxy*((q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(vy"
      "_res)*2.0+(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(vx_res)*2.0-(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(vz_res)*2.0)*1.0"
      "/velocityLength*(vy_res)*(1.0/2.0))/m;\n    A(5,17) = w;\n    A(5,19) = -u;\n    A(5,29) = -(C_wxy*(q_0*q_3*2.0-"
      "q_1*q_2*2.0)*velocityLength)/m-(C_wxy*1.0/velocityLength*(vy_res)*((q_0*q_3*2.0-q_1*q_2*2.0)*(vy_res)*2.0-(q_0*q"
      "_2*2.0+q_1*q_3*2.0)*(vz_res)*2.0+(vx_res)*(q_0*q_0+q_1*q_1-q_2*q_2-q_3*q_3)*2.0)*(1.0/2.0))/m;\n    A(5,30) = (C"
      "_wxy*velocityLength*(q_0*q_0-q_1*q_1+q_2*q_2-q_3*q_3))/m-(C_wxy*1.0/velocityLength*(vy_res)*((q_0*q_3*2.0+q_1*q_"
      "2*2.0)*(vx_res)*2.0-(vy_res)*(q_0*q_0-q_1*q_1+q_2*q_2-q_3*q_3)*2.0+(q_0*q_1*2.0-q_2*q_3*2.0)*(vz_res)*2.0)*(1.0/"
      "2.0))/m;\n    A(5,31) = -(velocityLength*(vy_res))/m;\n    A(6,4) = q+(C_wz*(u*-2.0+v_x_wind*(q_0*q_0+q_1*q_1-q_"
      "2*q_2-q_3*q_3)*2.0+v_y_wind*(q_0*q_3*2.0+q_1*q_2*2.0)*2.0)*(vz_res)*1.0/velocityLength*(1.0/2.0))/m;\n    A(6,5)"
      " = -p-(C_wz*(v*2.0-v_y_wind*(q_0*q_0-q_1*q_1+q_2*q_2-q_3*q_3)*2.0+v_x_wind*(q_0*q_3*2.0-q_1*q_2*2.0)*2.0)*(vz_re"
      "s)*1.0/velocityLength*(1.0/2.0))/m;\n    A(6,6) = (CT1s*w_1+CT1s*w_2+CT1s*w_3+CT1s*w_4+CT2s*abs(-w+l_m*p-q_0*q_1"
      "*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*abs(-w+l_m*q-q_0*q_1*v_y_wind"
      "*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q"
      "_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT2s*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_win"
      "d*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q"
      "_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wi"
      "nd*2.0-q_2*q_3*v_y_wind*2.0)))*(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v"
      "_y_wind*2.0)+CT2s*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2."
      "0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(-w"
      "+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((-w+l_m*q-q_0"
      "*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y"
      "_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q"
      "_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind"
      "*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*"
      "q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0"
      "-q_2*q_3*v_y_wind*2.0))/m-(C_wz*velocityLength)/m-(C_wz*(vz_res)*(w*2.0-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+v"
      "_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    A(6,7) = g*q_0*2.0+(CT1s*w_1*(q_1*v"
      "_y_wind*2.0-q_2*v_x_wind*2.0)+CT1s*w_2*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT1s*w_3*(q_1*v_y_wind*2.0-q_2*v_x_wi"
      "nd*2.0)+CT1s*w_4*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0"
      "+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*abs(-w+l_m*q-q_0*q_1*v_y_wi"
      "nd*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*"
      "abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*(q_1*v_y_wind*2"
      ".0-q_2*v_x_wind*2.0)+CT2s*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y"
      "_wind*2.0)*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_"
      "3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wi"
      "nd*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wi"
      "nd*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1"
      "*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x"
      "_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x"
      "_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q"
      "_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_"
      "x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x"
      "_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q"
      "_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_"
      "x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x"
      "_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0))/m-(C_wz*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*velocityLength"
      ")/m-(C_wz*(vz_res)*((q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(vy_res)*-2.0+(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(vx_re"
      "s)*2.0+(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    A(6,8) = g*q_1*-2"
      ".0+(CT1s*w_1*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT1s*w_2*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT1s*w_3*(q_0*v_y_"
      "wind*2.0-q_3*v_x_wind*2.0)+CT1s*w_4*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q"
      "_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*abs(-w+l"
      "_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(q_0*v_y_wind*2.0-q_3*"
      "v_x_wind*2.0)+CT2s*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2"
      ".0)*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_w"
      "ind*2.0-q_2*q_3*v_y_wind*2.0)*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*"
      "v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind"
      "*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(-w+l_m*p-q_0*q_1*v_y_wind"
      "*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q"
      "_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_w"
      "ind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(-w+l_m*q-q_0*q_1*v_y_w"
      "ind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0"
      "*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_"
      "wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(w+l_m*p+q_0*q_1*v_y_w"
      "ind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0"
      "*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_"
      "wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(w+l_m*q+q_0*q_1*v_y_w"
      "ind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0))/m-(C_wz*(q_0*v_y_wind*2.0-q_3*v_x_wind*"
      "2.0)*velocityLength)/m-(C_wz*(vz_res)*((q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(vy_res)*2.0+(q_1*v_x_wind*2.0+q_2*v_"
      "y_wind*2.0)*(vx_res)*2.0+(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n   "
      " A(6,9) = g*q_2*-2.0-(CT1s*w_1*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT1s*w_2*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+"
      "CT1s*w_3*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT1s*w_4*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*abs(-w+l_m*p-q_0*"
      "q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(q_0*v_x_wind*2.0+q_3*v_y_wind*"
      "2.0)+CT2s*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(q_0"
      "*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-"
      "q_2*q_3*v_y_wind*2.0)*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind"
      "*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*(((-w+l_m*p-q_0*q_1*v_y"
      "_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2."
      "0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(-w+l_m*"
      "p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((-w+l_m*q-q_0*q_1*"
      "v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind"
      "*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(-w+l"
      "_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*p+q_0*q_"
      "1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_win"
      "d*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(w+l"
      "_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*q+q_0*q_"
      "1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_win"
      "d*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(w+l"
      "_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0))/m+(C_wz*(q_0*v_x_wind"
      "*2.0+q_3*v_y_wind*2.0)*velocityLength)/m+(C_wz*(vz_res)*((q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(vy_res)*2.0-(q_1*v"
      "_y_wind*2.0-q_2*v_x_wind*2.0)*(vx_res)*2.0+(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*"
      "(1.0/2.0))/m;\n    A(6,10) = g*q_3*2.0-(CT1s*w_1*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT1s*w_2*(q_1*v_x_wind*2.0+"
      "q_2*v_y_wind*2.0)+CT1s*w_3*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT1s*w_4*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s"
      "*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(q_1*v_x_wind"
      "*2.0+q_2*v_y_wind*2.0)+CT2s*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*"
      "v_y_wind*2.0)*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1"
      "*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*abs(w+l_m*q+q_0*q_1*v_y_wind*2."
      "0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*(((-w"
      "+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q"
      "_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_"
      "wind*2.0)*(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(("
      "(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*"
      "q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v"
      "_y_wind*2.0)*(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s"
      "*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m"
      "*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*"
      "v_y_wind*2.0)*(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT2s"
      "*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m"
      "*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*"
      "v_y_wind*2.0)*(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0))/m+("
      "C_wz*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*velocityLength)/m-(C_wz*(vz_res)*((q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*("
      "vy_res)*2.0+(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(vx_res)*2.0-(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(vz_res)*2.0)*1"
      ".0/velocityLength*(1.0/2.0))/m;\n    A(6,17) = -v+(CT2s*l_m*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2."
      "0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT1s*l_m*w_2-CT1s*l_m*w_4-CT2s*l_m*abs(-w+l_m*p-q_0*q_1*v_y_wind*2."
      "0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)-CT2s*l_m*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*"
      "q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_"
      "wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_"
      "3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*l_m*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_w"
      "ind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q"
      "_2*q_3*v_y_wind*2.0)))*(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*"
      "2.0))/m;\n    A(6,18) = u+(CT2s*l_m*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q"
      "_2*q_3*v_y_wind*2.0)-CT1s*l_m*w_1+CT1s*l_m*w_3-CT2s*l_m*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q"
      "_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)-CT2s*l_m*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3"
      "*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_win"
      "d*2.0+q_2*q_3*v_y_wind*2.0)))*(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v"
      "_y_wind*2.0)+CT2s*l_m*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind"
      "*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*("
      "w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0))/m;\n    A(6,20) = "
      "-(CT0s*w_1*2.0+CT1s*(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2."
      "0))/m;\n    A(6,21) = -(CT0s*w_2*2.0-CT1s*(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2."
      "0-q_2*q_3*v_y_wind*2.0))/m;\n    A(6,22) = -(CT0s*w_3*2.0-CT1s*(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2."
      "0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0))/m;\n    A(6,23) = -(CT0s*w_4*2.0+CT1s*(-w+l_m*p-q_0*q_1*v_y_wind*2"
      ".0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0))/m;\n    A(6,25) = -(w_1*w_1+w_2*w_2+w_3*w_3+"
      "w_4*w_4)/m;\n    A(6,29) = -(CT2s*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_"
      "2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0+q_1*q_3*2.0)+CT2s*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_"
      "3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0+q_1*q_3*2.0)+CT2s*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x"
      "_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0+q_1*q_3*2.0)+CT2s*abs(w+l_m*q+q_0*q_1*v_y_wind"
      "*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0+q_1*q_3*2.0)+CT1s*w_1*(q_0*q_2"
      "*2.0+q_1*q_3*2.0)+CT1s*w_2*(q_0*q_2*2.0+q_1*q_3*2.0)+CT1s*w_3*(q_0*q_2*2.0+q_1*q_3*2.0)+CT1s*w_4*(q_0*q_2*2.0+q_"
      "1*q_3*2.0)+CT2s*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)"
      "/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*"
      "q_2*2.0+q_1*q_3*2.0)*(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2"
      ".0)+CT2s*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(ep"
      "s + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0"
      "+q_1*q_3*2.0)*(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2"
      "s*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_"
      "m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*"
      "2.0)*(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m"
      "*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_"
      "1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*(w+l_"
      "m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0))/m+(C_wz*(q_0*q_2*2.0+q"
      "_1*q_3*2.0)*velocityLength)/m-(C_wz*(vz_res)*1.0/velocityLength*((q_0*q_3*2.0-q_1*q_2*2.0)*(vy_res)*2.0-(q_0*q_2"
      "*2.0+q_1*q_3*2.0)*(vz_res)*2.0+(vx_res)*(q_0*q_0+q_1*q_1-q_2*q_2-q_3*q_3)*2.0)*(1.0/2.0))/m;\n    A(6,30) = (CT2"
      "s*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(q_0*q_1*2.0"
      "-q_2*q_3*2.0)+CT2s*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*"
      "2.0)*(q_0*q_1*2.0-q_2*q_3*2.0)+CT2s*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q"
      "_2*q_3*v_y_wind*2.0)*(q_0*q_1*2.0-q_2*q_3*2.0)+CT2s*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_"
      "3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*(q_0*q_1*2.0-q_2*q_3*2.0)+CT1s*w_1*(q_0*q_1*2.0-q_2*q_3*2.0)+CT1s*w_2*(q_0*"
      "q_1*2.0-q_2*q_3*2.0)+CT1s*w_3*(q_0*q_1*2.0-q_2*q_3*2.0)+CT1s*w_4*(q_0*q_1*2.0-q_2*q_3*2.0)+CT2s*(((-w+l_m*p-q_0*"
      "q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_"
      "wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*(-w+l_m*p-q"
      "_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((-w+l_m*q-q_0*q_1*v_y"
      "_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2."
      "0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*(-w+l_m*q-q_0*q_1*"
      "v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*p+q_0*q_1*v_y_wind*2."
      "0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2"
      "*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*(w+l_m*p+q_0*q_1*v_y_wind*2"
      ".0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT2s*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*"
      "v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*"
      "2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2"
      "*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0))/m-(C_wz*(q_0*q_1*2.0-q_2*q_3*2.0)*velocityLength)/m-(C"
      "_wz*(vz_res)*1.0/velocityLength*((q_0*q_3*2.0+q_1*q_2*2.0)*(vx_res)*2.0-(vy_res)*(q_0*q_0-q_1*q_1+q_2*q_2-q_3*q_"
      "3)*2.0+(q_0*q_1*2.0-q_2*q_3*2.0)*(vz_res)*2.0)*(1.0/2.0))/m;\n    A(7,7) = (q_0*q_0)*-9.0-(q_1*q_1)*3.0-(q_2*q_2"
      ")*3.0-(q_3*q_3)*3.0+3.0;\n    A(7,8) = p*(-1.0/2.0)-q_0*q_1*6.0;\n    A(7,9) = q*(-1.0/2.0)-q_0*q_2*6.0;\n    A("
      "7,10) = r*(-1.0/2.0)-q_0*q_3*6.0;\n    A(7,17) = q_1*(-1.0/2.0);\n    A(7,18) = q_2*(-1.0/2.0);\n    A(7,19) = q"
      "_3*(-1.0/2.0);\n    A(8,7) = p*(1.0/2.0)-q_0*q_1*6.0;\n    A(8,8) = (q_0*q_0)*-3.0-(q_1*q_1)*9.0-(q_2*q_2)*3.0-("
      "q_3*q_3)*3.0+3.0;\n    A(8,9) = r*(1.0/2.0)-q_1*q_2*6.0;\n    A(8,10) = q*(-1.0/2.0)-q_1*q_3*6.0;\n    A(8,17) ="
      " q_0*(1.0/2.0);\n    A(8,18) = q_3*(-1.0/2.0);\n    A(8,19) = q_2*(1.0/2.0);\n    A(9,7) = q*(1.0/2.0)-q_0*q_2*6"
      ".0;\n    A(9,8) = r*(-1.0/2.0)-q_1*q_2*6.0;\n    A(9,9) = (q_0*q_0)*-3.0-(q_1*q_1)*3.0-(q_2*q_2)*9.0-(q_3*q_3)*3"
      ".0+3.0;\n    A(9,10) = p*(1.0/2.0)-q_2*q_3*6.0;\n    A(9,17) = q_3*(1.0/2.0);\n    A(9,18) = q_0*(1.0/2.0);\n   "
      " A(9,19) = q_1*(-1.0/2.0);\n    A(10,7) = r*(1.0/2.0)-q_0*q_3*6.0;\n    A(10,8) = q*(1.0/2.0)-q_1*q_3*6.0;\n    "
      "A(10,9) = p*(-1.0/2.0)-q_2*q_3*6.0;\n    A(10,10) = (q_0*q_0)*-3.0-(q_1*q_1)*3.0-(q_2*q_2)*3.0-(q_3*q_3)*9.0+3.0"
      ";\n    A(10,17) = q_2*(-1.0/2.0);\n    A(10,18) = q_1*(1.0/2.0);\n    A(10,19) = q_0*(1.0/2.0);\n    A(17,6) = -"
      "(-CT2s*l_m*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)-CT1s"
      "*l_m*w_2+CT1s*l_m*w_4+CT2s*l_m*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q"
      "_3*v_y_wind*2.0)-CT2s*(l_m*l_m)*p*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*"
      "q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_w"
      "ind*2.0)))-CT2s*l_m*w*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_win"
      "d*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))"
      "+CT2s*(l_m*l_m)*p*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2."
      "0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))-CT2"
      "s*l_m*w*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps "
      "+ w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))-CT2s*l_m*q_0*q_"
      "1*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs("
      "eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*l"
      "_m*q_0*q_2*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*"
      "2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*2"
      ".0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*"
      "v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind"
      "*2.0)))*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0"
      "+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3"
      "*v_y_wind*2.0)))*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_"
      "wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-"
      "q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q"
      "_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wi"
      "nd*2.0-q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2."
      "0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3"
      "*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_"
      "wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-"
      "q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0)/I_x;\n    A(17,7) = -(-CT2s*(l_m*l_m)*p*(((w+l_m*p+q_0*q_1*v_y"
      "_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0"
      "-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)-CT2s*l_m*"
      "w*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+"
      "l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q"
      "_2*v_x_wind*2.0)-CT2s*l_m*q_1*v_y_wind*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2."
      "0-q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*v_x_wind*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*"
      "v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT1s*l_m*q_1*v_y_wind*w_2*2.0+CT1s*l_m*q_2*v_x_wind*w_2*2.0+CT1s*l_m*q_1*"
      "v_y_wind*w_4*2.0-CT1s*l_m*q_2*v_x_wind*w_4*2.0+CT2s*(l_m*l_m)*p*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_win"
      "d*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_"
      "1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*l_m*q_1*v_y_wind*abs(-w+l_m*"
      "p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_2*v_x_wind"
      "*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*"
      "w*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_"
      "m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2"
      "*v_x_wind*2.0)-CT2s*l_m*q_0*q_1*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*"
      "2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*"
      "q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wi"
      "nd*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q"
      "_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0+CT2s*l_"
      "m*q_1*q_3*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2"
      ".0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q"
      "_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_win"
      "d*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_"
      "1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*((("
      "w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q"
      "_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_"
      "wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2."
      "0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3"
      "*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2"
      ".0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_"
      "2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0+CT2s*l_m*q_2"
      "*q_3*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/ab"
      "s(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_"
      "wind*2.0-q_2*v_x_wind*2.0)*2.0)/I_x;\n    A(17,8) = -(-CT2s*(l_m*l_m)*p*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*"
      "v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*"
      "2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)-CT2s*l_m*w*(((-w+l_m*p-q_0*"
      "q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_"
      "wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)-C"
      "T2s*l_m*q_0*v_y_wind*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind"
      "*2.0)*2.0+CT2s*l_m*q_3*v_x_wind*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q"
      "_3*v_y_wind*2.0)*2.0-CT1s*l_m*q_0*v_y_wind*w_2*2.0+CT1s*l_m*q_0*v_y_wind*w_4*2.0+CT1s*l_m*q_3*v_x_wind*w_2*2.0-C"
      "T1s*l_m*q_3*v_x_wind*w_4*2.0+CT2s*(l_m*l_m)*p*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_"
      "wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0"
      "+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*l_m*q_0*v_y_wind*abs(-w+l_m*p-q_0*q_1*v_y_wind"
      "*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_3*v_x_wind*abs(-w+l_m*p-q_0*"
      "q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*w*(((w+l_m*p+q_0*q"
      "_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wi"
      "nd*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)-CT2"
      "s*l_m*q_0*q_1*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wi"
      "nd*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0))"
      ")*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x"
      "_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2."
      "0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind"
      "*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l"
      "_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_"
      "3*v_x_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_"
      "wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0"
      "+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*p+q_0*q_1*v_"
      "y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2."
      "0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0+CT2s"
      "*l_m*q_0*q_2*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind"
      "*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*("
      "q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_win"
      "d*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1"
      "*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w"
      "+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_"
      "0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_w"
      "ind*2.0)*2.0)/I_x;\n    A(17,9) = (-CT2s*(l_m*l_m)*p*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_"
      "3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_win"
      "d*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)-CT2s*l_m*w*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_"
      "0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_"
      "x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)-CT2s*l_m*q_0*v_x_win"
      "d*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*"
      "q_3*v_y_wind*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2."
      "0-CT1s*l_m*q_0*v_x_wind*w_2*2.0+CT1s*l_m*q_0*v_x_wind*w_4*2.0-CT1s*l_m*q_3*v_y_wind*w_2*2.0+CT1s*l_m*q_3*v_y_win"
      "d*w_4*2.0+CT2s*(l_m*l_m)*p*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_"
      "y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2"
      ".0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*l_m*q_0*v_x_wind*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wi"
      "nd*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_3*v_y_wind*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_"
      "0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*w*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0"
      "*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_"
      "wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)-CT2s*l_m*q_0*q_1*v_y_w"
      "ind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -"
      "w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0"
      "+q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v"
      "_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*"
      "2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m*p-q_0*q_"
      "1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wi"
      "nd*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0"
      "+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_"
      "y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2"
      ".0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*"
      "v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*"
      "2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wi"
      "nd*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l"
      "_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_"
      "3*v_y_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_w"
      "ind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q"
      "_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_"
      "wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-"
      "q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0)/I_x;\n"
      "    A(17,10) = (-CT2s*(l_m*l_m)*p*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*"
      "q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_w"
      "ind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)-CT2s*l_m*w*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+"
      "q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*"
      "v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)-CT2s*l_m*q_1*v_x_wind*abs(w+l_m*p+q_0*q"
      "_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_2*v_y_wind*abs(w+"
      "l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT1s*l_m*q_1*v_x_"
      "wind*w_2*2.0+CT1s*l_m*q_1*v_x_wind*w_4*2.0-CT1s*l_m*q_2*v_y_wind*w_2*2.0+CT1s*l_m*q_2*v_y_wind*w_4*2.0+CT2s*(l_m"
      "*l_m)*p*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps"
      " + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind"
      "*2.0+q_2*v_y_wind*2.0)+CT2s*l_m*q_1*v_x_wind*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_"
      "wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*v_y_wind*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+"
      "q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*w*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q"
      "_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_"
      "x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)-CT2s*l_m*q_0*q_1*v_y_wind*(((-w+l_m*p-q_0"
      "*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y"
      "_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*"
      "2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3"
      "*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_win"
      "d*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*"
      "q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_"
      "wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v"
      "_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps"
      " + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind"
      "*2.0+q_2*v_y_wind*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_"
      "3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_win"
      "d*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*p+q_0*q"
      "_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wi"
      "nd*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0"
      "+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y"
      "_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0"
      ")))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_"
      "x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2."
      "0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0)/I_x;\n    A(17,17) = (-C"
      "_mxy*sqrt(p*p+q*q+r*r)+CT2s*(l_m*l_m)*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2."
      "0+q_2*q_3*v_y_wind*2.0)-C_mxy*(p*p)*1.0/angularRateLength+CT2s*(l_m*l_m)*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_"
      "2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)+CT1s*(l_m*l_m)*w_2+CT1s*(l_m*l_m)*w_4+CT2s*(l_m*l_m*l_"
      "m)*p*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w"
      "+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))+CT2s*(l_m*l_m)*w*("
      "((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p"
      "+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))+CT2s*(l_m*l_m*l_m)*p*((("
      "-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p"
      "-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))-CT2s*(l_m*l_m)*w*(((-w+l"
      "_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0"
      "*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))+CT2s*(l_m*l_m)*q_0*q_1*v_y_w"
      "ind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+"
      "l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0-CT2s*(l_m*l_m)*"
      "q_0*q_2*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)"
      "/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0-CT"
      "2s*(l_m*l_m)*q_1*q_3*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*"
      "v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*"
      "2.0)))*2.0-CT2s*(l_m*l_m)*q_2*q_3*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind"
      "*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*"
      "q_3*v_y_wind*2.0)))*2.0-CT2s*(l_m*l_m)*q_0*q_1*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_"
      "1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_"
      "x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*(l_m*l_m)*q_0*q_2*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*"
      "v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind"
      "*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*(l_m*l_m)*q_1*q_3*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wi"
      "nd*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q"
      "_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*(l_m*l_m)*q_2*q_3*v_y_wind*(((-w+l_m*p"
      "-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1"
      "*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*2.0)/I_x;\n    A(17,18) = -(-I_y"
      "*r+I_z*r+C_mxy*p*q*1.0/angularRateLength)/I_x;\n    A(17,19) = -(-I_y*q+I_z*q+C_mxy*p*r*1.0/angularRateLength)/I"
      "_x;\n    A(17,21) = -(-CT1s*l_m*w+CT0s*l_m*w_2*2.0-CT1s*(l_m*l_m)*p-CT1s*l_m*q_0*q_1*v_y_wind*2.0+CT1s*l_m*q_0*q"
      "_2*v_x_wind*2.0+CT1s*l_m*q_1*q_3*v_x_wind*2.0+CT1s*l_m*q_2*q_3*v_y_wind*2.0)/I_x;\n    A(17,23) = (-CT1s*l_m*w+C"
      "T0s*l_m*w_4*2.0+CT1s*(l_m*l_m)*p-CT1s*l_m*q_0*q_1*v_y_wind*2.0+CT1s*l_m*q_0*q_2*v_x_wind*2.0+CT1s*l_m*q_1*q_3*v_"
      "x_wind*2.0+CT1s*l_m*q_2*q_3*v_y_wind*2.0)/I_x;\n    A(17,25) = -(l_m*(w_2*w_2)-l_m*(w_4*w_4))/I_x;\n    A(17,26)"
      " = 1.0/I_x;\n    A(17,29) = (-CT2s*(l_m*l_m)*p*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_"
      "wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-"
      "q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)-CT2s*l_m*w*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2"
      ".0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q"
      "_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)-CT2s*l_m*q_0*q_2*abs(w+l_m*p+q_0*q_1*v_y_wind*"
      "2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_1*q_3*abs(w+l_m*p+q_0*q_1*v_y"
      "_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT1s*l_m*q_0*q_2*w_2*2.0+CT1s*l_m*"
      "q_0*q_2*w_4*2.0-CT1s*l_m*q_1*q_3*w_2*2.0+CT1s*l_m*q_1*q_3*w_4*2.0+CT2s*(l_m*l_m)*p*(((-w+l_m*p-q_0*q_1*v_y_wind*"
      "2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*"
      "q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)+CT2s*l_m*q_0*q_2*abs(-w+"
      "l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*"
      "abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*w"
      "*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m"
      "*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2"
      ".0)-CT2s*l_m*q_0*q_1*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3"
      "*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_win"
      "d*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wi"
      "nd*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q"
      "_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m*p-"
      "q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*"
      "v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+CT2"
      "s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wi"
      "nd*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0))"
      ")*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q"
      "_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_"
      "x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*p+q_0*q_1*v_"
      "y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2."
      "0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+CT2s*l_m*q_1*q"
      "_3*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs("
      "eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2."
      "0+q_1*q_3*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wi"
      "nd*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_"
      "2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0)/I_x;\n    A(17,30) = -(-CT2s*(l_m*l_m)*p*(((w+l_m*p+q_0*q_1"
      "*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind"
      "*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)-CT2s*l_m*w*(((-"
      "w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-"
      "q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)"
      "-CT2s*l_m*q_0*q_1*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2."
      "0)*2.0+CT2s*l_m*q_2*q_3*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_w"
      "ind*2.0)*2.0-CT1s*l_m*q_0*q_1*w_2*2.0+CT1s*l_m*q_0*q_1*w_4*2.0+CT1s*l_m*q_2*q_3*w_2*2.0-CT1s*l_m*q_2*q_3*w_4*2.0"
      "+CT2s*(l_m*l_m)*p*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2."
      "0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_"
      "0*q_1*2.0-q_2*q_3*2.0)+CT2s*l_m*q_0*q_1*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*"
      "2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_2*q_3*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_"
      "x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*w*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x"
      "_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0"
      "-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)-CT2s*l_m*q_0*q_1*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_"
      "0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_"
      "x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*"
      "(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_"
      "m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*"
      "2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_"
      "2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_"
      "y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v"
      "_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*"
      "2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_"
      "m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q"
      "_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0+"
      "CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_"
      "wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)"
      "))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-"
      "q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v"
      "_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*p+q_0*q_1*v"
      "_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*p+q_0*q_1*v_y_wind*2"
      ".0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0)/I_x;\n    A("
      "18,6) = -(-CT2s*l_m*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*"
      "2.0)+CT1s*l_m*w_1-CT1s*l_m*w_3+CT2s*l_m*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*"
      "2.0+q_2*q_3*v_y_wind*2.0)-CT2s*(l_m*l_m)*q*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind"
      "*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*"
      "q_3*v_y_wind*2.0)))-CT2s*l_m*w*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_"
      "3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wi"
      "nd*2.0)))+CT2s*(l_m*l_m)*q*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_"
      "y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2"
      ".0)))-CT2s*l_m*w*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)"
      "/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))-CT2s*l"
      "_m*q_0*q_1*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*"
      "2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*2"
      ".0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*"
      "v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind"
      "*2.0)))*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0"
      "+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3"
      "*v_y_wind*2.0)))*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x"
      "_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2."
      "0+q_2*q_3*v_y_wind*2.0)))*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1"
      "*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_"
      "wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*"
      "2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q"
      "_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_"
      "x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2."
      "0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0"
      "*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_"
      "wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0)/I_y;\n    A(18,7) = -(-CT2s*(l_m*l_m)*q*(((w+l_m*q+q_"
      "0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y"
      "_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)-"
      "CT2s*l_m*w*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs("
      "eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_w"
      "ind*2.0-q_2*v_x_wind*2.0)-CT2s*l_m*q_1*v_y_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_"
      "x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*v_x_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0"
      "-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0+CT1s*l_m*q_1*v_y_wind*w_1*2.0-CT1s*l_m*q_2*v_x_wind*w_1*2.0-CT1s"
      "*l_m*q_1*v_y_wind*w_3*2.0+CT1s*l_m*q_2*v_x_wind*w_3*2.0+CT2s*(l_m*l_m)*q*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_"
      "2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wi"
      "nd*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*l_m*q_1*v_y_wind*ab"
      "s(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_2"
      "*v_x_wind*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-"
      "CT2s*l_m*w*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(e"
      "ps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_win"
      "d*2.0-q_2*v_x_wind*2.0)-CT2s*l_m*q_0*q_1*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*"
      "v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind"
      "*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*q-q_0*q"
      "_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_w"
      "ind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2."
      "0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v"
      "_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*"
      "2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_"
      "2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wi"
      "nd*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y"
      "_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + "
      "w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0"
      "-q_2*v_x_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_"
      "x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2."
      "0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*q+q_0*q_1*v"
      "_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2"
      ".0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0+CT2"
      "s*l_m*q_2*q_3*v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_win"
      "d*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*"
      "(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*2.0)/I_y;\n    A(18,8) = -(-CT2s*(l_m*l_m)*q*(((w+l_m*q+q_0*q_1*v_y_wind*2.0"
      "-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*"
      "v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)-CT2s*l_m*w*(((-w+l"
      "_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0"
      "*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wi"
      "nd*2.0)-CT2s*l_m*q_0*v_y_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3"
      "*v_y_wind*2.0)*2.0+CT2s*l_m*q_3*v_x_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*"
      "2.0-q_2*q_3*v_y_wind*2.0)*2.0+CT1s*l_m*q_0*v_y_wind*w_1*2.0-CT1s*l_m*q_0*v_y_wind*w_3*2.0-CT1s*l_m*q_3*v_x_wind*"
      "w_1*2.0+CT1s*l_m*q_3*v_x_wind*w_3*2.0+CT2s*(l_m*l_m)*q*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1"
      "*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x"
      "_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*l_m*q_0*v_y_wind*abs(-w+l_m*q-q_0*q_1"
      "*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_3*v_x_wind*abs(-w+l"
      "_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*w*(((w+l_"
      "m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q"
      "_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind"
      "*2.0)-CT2s*l_m*q_0*q_1*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q"
      "_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_w"
      "ind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_"
      "0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_"
      "x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0+CT2s*l_m*q_1*q_3"
      "*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(e"
      "ps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wi"
      "nd*2.0-q_3*v_x_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1"
      "*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x"
      "_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*q+q"
      "_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_"
      "y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)"
      "*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3"
      "*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind"
      "*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_"
      "2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_win"
      "d*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_"
      "wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w"
      "+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0-"
      "q_3*v_x_wind*2.0)*2.0)/I_y;\n    A(18,9) = (-CT2s*(l_m*l_m)*q*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2"
      ".0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_"
      "3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)-CT2s*l_m*w*(((-w+l_m*q-q_0*q_1*v_y_wi"
      "nd*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q"
      "_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)-CT2s*l_m*q_"
      "0*v_x_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-"
      "CT2s*l_m*q_3*v_y_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_win"
      "d*2.0)*2.0+CT1s*l_m*q_0*v_x_wind*w_1*2.0-CT1s*l_m*q_0*v_x_wind*w_3*2.0+CT1s*l_m*q_3*v_y_wind*w_1*2.0-CT1s*l_m*q_"
      "3*v_y_wind*w_3*2.0+CT2s*(l_m*l_m)*q*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q"
      "_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v"
      "_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*l_m*q_0*v_x_wind*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q"
      "_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_3*v_y_wind*abs(-w+l_m*q-q_0*q_1*v_y_wi"
      "nd*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*w*(((w+l_m*q+q_0*q_1*v_y_win"
      "d*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0"
      "*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)-CT2s*l_m*q_0*"
      "q_1*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/ab"
      "s(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x"
      "_wind*2.0+q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+"
      "q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*"
      "v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m"
      "*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q"
      "_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind"
      "*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q"
      "_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v"
      "_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0"
      "-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*"
      "v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_0*q"
      "_2*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs("
      "eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wi"
      "nd*2.0+q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*"
      "q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_w"
      "ind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*q+q_0"
      "*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_"
      "wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*2"
      ".0)/I_y;\n    A(18,10) = (-CT2s*(l_m*l_m)*q*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_win"
      "d*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2"
      "*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)-CT2s*l_m*w*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x"
      "_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2."
      "0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)-CT2s*l_m*q_1*v_x_wind*abs(w+l"
      "_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_2*v_y_w"
      "ind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0+CT1s*l_"
      "m*q_1*v_x_wind*w_1*2.0-CT1s*l_m*q_1*v_x_wind*w_3*2.0+CT1s*l_m*q_2*v_y_wind*w_1*2.0-CT1s*l_m*q_2*v_y_wind*w_3*2.0"
      "+CT2s*(l_m*l_m)*q*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2."
      "0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_"
      "1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*l_m*q_1*v_x_wind*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_"
      "1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*v_y_wind*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x"
      "_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*w*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_"
      "wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-"
      "q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)-CT2s*l_m*q_0*q_1*v_y_wind*(((-w"
      "+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q"
      "_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_"
      "wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2"
      ".0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q"
      "_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_win"
      "d*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_"
      "0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0+CT2s*l_m"
      "*q_2*q_3*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2."
      "0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_"
      "1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*"
      "2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q"
      "_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l"
      "_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*"
      "q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_win"
      "d*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q"
      "_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_"
      "y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-"
      "q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v"
      "_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*2.0)/I_y;\n    A(18"
      ",17) = -(I_x*r-I_z*r+C_mxy*p*q*1.0/angularRateLength)/I_y;\n    A(18,18) = (-C_mxy*sqrt(p*p+q*q+r*r)+CT2s*(l_m*l"
      "_m)*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)-C_mxy*(q*q"
      ")*1.0/angularRateLength+CT2s*(l_m*l_m)*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2."
      "0-q_2*q_3*v_y_wind*2.0)+CT1s*(l_m*l_m)*w_1+CT1s*(l_m*l_m)*w_3+CT2s*(l_m*l_m*l_m)*q*(((w+l_m*q+q_0*q_1*v_y_wind*2"
      ".0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_"
      "2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))+CT2s*(l_m*l_m)*w*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0"
      "*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_"
      "wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))+CT2s*(l_m*l_m*l_m)*q*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*"
      "q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_"
      "wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))-CT2s*(l_m*l_m)*w*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*"
      "v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind"
      "*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))+CT2s*(l_m*l_m)*q_0*q_1*v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2."
      "0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2"
      "*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0-CT2s*(l_m*l_m)*q_0*q_2*v_x_wind*(((w+l_m*q+q_0*q_"
      "1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_win"
      "d*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0-CT2s*(l_m*l_m)*q_1*q_3*v_x_wind*(((w"
      "+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_"
      "0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0-CT2s*(l_m*l_m)*q_2*q_3*"
      "v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps"
      " + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*2.0-CT2s*(l_m*"
      "l_m)*q_0*q_1*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_win"
      "d*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))"
      "*2.0+CT2s*(l_m*l_m)*q_0*q_2*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+"
      "q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*"
      "v_y_wind*2.0)))*2.0+CT2s*(l_m*l_m)*q_1*q_3*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_"
      "3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wi"
      "nd*2.0+q_2*q_3*v_y_wind*2.0)))*2.0+CT2s*(l_m*l_m)*q_2*q_3*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_"
      "wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0"
      "+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*2.0)/I_y;\n    A(18,19) = -(I_x*p-I_z*p+C_mxy*q*r*1.0/angularRateL"
      "ength)/I_y;\n    A(18,20) = (-CT1s*l_m*w+CT0s*l_m*w_1*2.0+CT1s*(l_m*l_m)*q-CT1s*l_m*q_0*q_1*v_y_wind*2.0+CT1s*l_"
      "m*q_0*q_2*v_x_wind*2.0+CT1s*l_m*q_1*q_3*v_x_wind*2.0+CT1s*l_m*q_2*q_3*v_y_wind*2.0)/I_y;\n    A(18,22) = -(-CT1s"
      "*l_m*w+CT0s*l_m*w_3*2.0-CT1s*(l_m*l_m)*q-CT1s*l_m*q_0*q_1*v_y_wind*2.0+CT1s*l_m*q_0*q_2*v_x_wind*2.0+CT1s*l_m*q_"
      "1*q_3*v_x_wind*2.0+CT1s*l_m*q_2*q_3*v_y_wind*2.0)/I_y;\n    A(18,25) = (l_m*(w_1*w_1)-l_m*(w_3*w_3))/I_y;\n    A"
      "(18,27) = 1.0/I_y;\n    A(18,29) = (-CT2s*(l_m*l_m)*q*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q"
      "_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wi"
      "nd*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)-CT2s*l_m*w*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x"
      "_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2."
      "0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)-CT2s*l_m*q_0*q_2*abs(w+l_m*q+q_0*q_1*v_"
      "y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_1*q_3*abs(w+l_m*q+q_0*"
      "q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0+CT1s*l_m*q_0*q_2*w_1*2.0-CT"
      "1s*l_m*q_0*q_2*w_3*2.0+CT1s*l_m*q_1*q_3*w_1*2.0-CT1s*l_m*q_1*q_3*w_3*2.0+CT2s*(l_m*l_m)*q*(((-w+l_m*q-q_0*q_1*v_"
      "y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2"
      ".0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)+CT2s*l_m*q_0*q_2*"
      "abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q"
      "_1*q_3*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2"
      "s*l_m*w*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps "
      "+ w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_"
      "1*q_3*2.0)-CT2s*l_m*q_0*q_1*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+"
      "q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*"
      "v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2"
      "*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_win"
      "d*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w"
      "+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q"
      "_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*"
      "2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3"
      "*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_win"
      "d*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_win"
      "d*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1"
      "*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*q+q_0"
      "*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_"
      "wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0+CT2s*l_"
      "m*q_1*q_3*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2."
      "0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0"
      "*q_2*2.0+q_1*q_3*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3"
      "*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind"
      "*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0+q_1*q_3*2.0)*2.0)/I_y;\n    A(18,30) = -(-CT2s*(l_m*l_m)*q*(((w+l_m*q+"
      "q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v"
      "_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)-CT2s*l_m"
      "*w*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w"
      "+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q"
      "_3*2.0)-CT2s*l_m*q_0*q_1*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_"
      "wind*2.0)*2.0+CT2s*l_m*q_2*q_3*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_"
      "3*v_y_wind*2.0)*2.0+CT1s*l_m*q_0*q_1*w_1*2.0-CT1s*l_m*q_0*q_1*w_3*2.0-CT1s*l_m*q_2*q_3*w_1*2.0+CT1s*l_m*q_2*q_3*"
      "w_3*2.0+CT2s*(l_m*l_m)*q*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_"
      "wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0"
      ")))*(q_0*q_1*2.0-q_2*q_3*2.0)+CT2s*l_m*q_0*q_1*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_"
      "x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_2*q_3*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1"
      "*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*w*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*"
      "q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_w"
      "ind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)-CT2s*l_m*q_0*q_1*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind"
      "*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0"
      "*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0+CT2s*l_m*q_0*q_2*v_"
      "x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps "
      "+ -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q"
      "_2*q_3*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind"
      "*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2"
      "*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_"
      "0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)/abs(eps + -w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_"
      "x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0-CT2s*l_m*q_0*q_1*v_y_wind*"
      "(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*"
      "q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2."
      "0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q"
      "_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wi"
      "nd*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*(((w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wi"
      "nd*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_"
      "1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y_wind*(((w+l_m*q+q_"
      "0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)/abs(eps + w+l_m*q+q_0*q_1*v_y"
      "_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0-q_2*q_3*2.0)*2.0)/I_y;\n"
      "    A(19,17) = (I_x*R_A*q-I_y*R_A*q-C_mz*R_A*p*r*1.0/angularRateLength)/(I_z*R_A);\n    A(19,18) = (I_x*R_A*p-I_"
      "y*R_A*p-C_mz*R_A*q*r*1.0/angularRateLength)/(I_z*R_A);\n    A(19,19) = (-C_mz*R_A*sqrt(p*p+q*q+r*r)-C_mz*R_A*(r*"
      "r)*1.0/angularRateLength)/(I_z*R_A);\n    A(19,20) = ((Psi*Psi)*(1.0/2.0)-Psi*((Psi*Psi)*w_1*2.0-Psi*U_1*beta_m*"
      "2.0)*1.0/sqrt(eps + (U_1*U_1)*(beta_m*beta_m)+(Psi*Psi)*(w_1*w_1)+R_A*U_1*alpha_m*4.0-Psi*U_1*beta_m*w_1*2.0)*(1"
      ".0/4.0))/(I_z*R_A);\n    A(19,21) = ((Psi*Psi)*(-1.0/2.0)+Psi*((Psi*Psi)*w_2*2.0-Psi*U_2*beta_m*2.0)*1.0/sqrt(ep"
      "s + (U_2*U_2)*(beta_m*beta_m)+(Psi*Psi)*(w_2*w_2)+R_A*U_2*alpha_m*4.0-Psi*U_2*beta_m*w_2*2.0)*(1.0/4.0))/(I_z*R_"
      "A);\n    A(19,22) = ((Psi*Psi)*(1.0/2.0)-Psi*((Psi*Psi)*w_3*2.0-Psi*U_3*beta_m*2.0)*1.0/sqrt(eps + (U_3*U_3)*(be"
      "ta_m*beta_m)+(Psi*Psi)*(w_3*w_3)+R_A*U_3*alpha_m*4.0-Psi*U_3*beta_m*w_3*2.0)*(1.0/4.0))/(I_z*R_A);\n    A(19,23)"
      " = ((Psi*Psi)*(-1.0/2.0)+Psi*((Psi*Psi)*w_4*2.0-Psi*U_4*beta_m*2.0)*1.0/sqrt(eps + (U_4*U_4)*(beta_m*beta_m)+(Ps"
      "i*Psi)*(w_4*w_4)+R_A*U_4*alpha_m*4.0-Psi*U_4*beta_m*w_4*2.0)*(1.0/4.0))/(I_z*R_A);\n    A(19,28) = 1.0/I_z;\n   "
      " A(20,6) = (k_t*(CT1s*w_1+CT2s*abs(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0)"
      ")+CT2s*(((w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*q-v_x_w"
      "ind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+"
      "v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(20,7) = (k_t*(CT1s*w_1*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2"
      "s*abs(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_1*v_y_wind*2.0-q_2*v_x_w"
      "ind*2.0)+CT2s*(((w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*"
      "q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*("
      "w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(20,8) = (k_t*(CT1s*"
      "w_1*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*abs(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2."
      "0-q_2*q_3*2.0))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*(((w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*"
      "(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2."
      "0))))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*"
      "q_3*2.0))))/J_M;\n    A(20,9) = -(k_t*(CT1s*w_1*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*abs(w-l_m*q-v_x_wind*(q"
      "_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*(((w-l_m*q-"
      "v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*q-v_x_wind*(q_0*q_2*2.0+q"
      "_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(w-l_m*q-v_x_wind*(q_0*q_2"
      "*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(20,10) = -(k_t*(CT1s*w_1*(q_1*v_x_wind*2.0+q"
      "_2*v_y_wind*2.0)+CT2s*abs(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_1*v_"
      "x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*(((w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2."
      "0))/abs(eps + w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_1*v_x_wind*2.0"
      "+q_2*v_y_wind*2.0)*(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A"
      "(20,18) = -(k_t*(CT1s*l_m*w_1+CT2s*l_m*abs(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*"
      "q_3*2.0))+CT2s*l_m*(((w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w"
      "-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q"
      "_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(20,20) = -(k_m+Psi*((Psi*(1.0/2.0))/R_A+Psi*1.0/(R"
      "_A*R_A)*1.0/sqrt(eps + 1.0/(R_A*R_A)*power(U_1*beta_m-Psi*w_1,2.0)*(1.0/4.0)+(U_1*alpha_m)/R_A)*(U_1*beta_m-Psi*"
      "w_1)*(1.0/4.0))+k_t*(CT0s*w_1*2.0-CT1s*(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3"
      "*2.0))))/J_M;\n    A(20,24) = (-CT0s*(w_1*w_1)+CT2s*abs(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0"
      "*q_1*2.0-q_2*q_3*2.0))*(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT1s*w_1*"
      "(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0)))/J_M;\n    A(20,25) = -(k_t*(w_1"
      "*w_1))/J_M;\n    A(20,29) = -(k_t*(CT2s*abs(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2"
      "*q_3*2.0))*(q_0*q_2*2.0+q_1*q_3*2.0)+CT1s*w_1*(q_0*q_2*2.0+q_1*q_3*2.0)+CT2s*(((w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_"
      "1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_"
      "0*q_1*2.0-q_2*q_3*2.0))))*(q_0*q_2*2.0+q_1*q_3*2.0)*(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_"
      "1*2.0-q_2*q_3*2.0))))/J_M;\n    A(20,30) = (k_t*(CT2s*abs(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q"
      "_0*q_1*2.0-q_2*q_3*2.0))*(q_0*q_1*2.0-q_2*q_3*2.0)+CT1s*w_1*(q_0*q_1*2.0-q_2*q_3*2.0)+CT2s*(((w-l_m*q-v_x_wind*("
      "q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0"
      ")+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*q_1*2.0-q_2*q_3*2.0)*(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_"
      "y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(21,6) = (k_t*(CT1s*w_2+CT2s*abs(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_"
      "1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT2s*(((w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*"
      "q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))"
      "*(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(21,7) = (k_t*(CT1"
      "s*w_2*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*abs(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*"
      "2.0-q_2*q_3*2.0))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*(((w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_win"
      "d*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*"
      "2.0))))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_"
      "2*q_3*2.0))))/J_M;\n    A(21,8) = (k_t*(CT1s*w_2*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*abs(w+l_m*p-v_x_wind*("
      "q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*(((w+l_m*p"
      "-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*p-v_x_wind*(q_0*q_2*2.0+"
      "q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(w+l_m*p-v_x_wind*(q_0*q_"
      "2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(21,9) = -(k_t*(CT1s*w_2*(q_0*v_x_wind*2.0+q"
      "_3*v_y_wind*2.0)+CT2s*abs(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*v_"
      "x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*(((w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2."
      "0))/abs(eps + w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*v_x_wind*2.0"
      "+q_3*v_y_wind*2.0)*(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A"
      "(21,10) = -(k_t*(CT1s*w_2*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*abs(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0"
      ")+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*(((w+l_m*p-v_x_wind*(q_0*q_2*2.0+"
      "q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*("
      "q_0*q_1*2.0-q_2*q_3*2.0))))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_"
      "wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(21,17) = (k_t*(CT1s*l_m*w_2+CT2s*l_m*abs(w+l_m*p-v_x_wind*(q_0*q_2"
      "*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT2s*l_m*(((w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y"
      "_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*"
      "q_3*2.0))))*(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(21,21)"
      " = -(k_m+Psi*((Psi*(1.0/2.0))/R_A+Psi*1.0/(R_A*R_A)*1.0/sqrt(eps + 1.0/(R_A*R_A)*power(U_2*beta_m-Psi*w_2,2.0)*("
      "1.0/4.0)+(U_2*alpha_m)/R_A)*(U_2*beta_m-Psi*w_2)*(1.0/4.0))+k_t*(CT0s*w_2*2.0-CT1s*(w+l_m*p-v_x_wind*(q_0*q_2*2."
      "0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(21,24) = (-CT0s*(w_2*w_2)+CT2s*abs(w+l_m*p-v_x_"
      "wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v"
      "_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT1s*w_2*(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_"
      "2*q_3*2.0)))/J_M;\n    A(21,25) = -(k_t*(w_2*w_2))/J_M;\n    A(21,29) = -(k_t*(CT2s*abs(w+l_m*p-v_x_wind*(q_0*q_"
      "2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*q_2*2.0+q_1*q_3*2.0)+CT1s*w_2*(q_0*q_2*2.0+q_1*q_3*2"
      ".0)+CT2s*(((w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*p-v_x"
      "_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*q_2*2.0+q_1*q_3*2.0)*(w+l_m*p-v_x_win"
      "d*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(21,30) = (k_t*(CT2s*abs(w+l_m*p-v_"
      "x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*q_1*2.0-q_2*q_3*2.0)+CT1s*w_2*(q_0*q_1"
      "*2.0-q_2*q_3*2.0)+CT2s*(((w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps"
      " + w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*q_1*2.0-q_2*q_3*2.0)*(w"
      "+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(22,6) = (k_t*(CT1s*w"
      "_3+CT2s*abs(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT2s*(((w+l_m*q-v_x_w"
      "ind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_"
      "3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q"
      "_2*q_3*2.0))))/J_M;\n    A(22,7) = (k_t*(CT1s*w_3*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*abs(w+l_m*q-v_x_wind*"
      "(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*(((w+l_m*"
      "q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*q-v_x_wind*(q_0*q_2*2.0"
      "+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_1*v_y_wind*2.0-q_2*v_x_wind*2.0)*(w+l_m*q-v_x_wind*(q_0*q"
      "_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(22,8) = (k_t*(CT1s*w_3*(q_0*v_y_wind*2.0-q"
      "_3*v_x_wind*2.0)+CT2s*abs(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*v_"
      "y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*(((w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2."
      "0))/abs(eps + w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*v_y_wind*2.0"
      "-q_3*v_x_wind*2.0)*(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A"
      "(22,9) = -(k_t*(CT1s*w_3*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*abs(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)"
      "+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*(((w+l_m*q-v_x_wind*(q_0*q_2*2.0+q"
      "_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q"
      "_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_w"
      "ind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(22,10) = -(k_t*(CT1s*w_3*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*a"
      "bs(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_1*v_x_wind*2.0+q_2*v_y_wind"
      "*2.0)+CT2s*(((w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*q-v"
      "_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(w+l"
      "_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(22,18) = (k_t*(CT1s*l_"
      "m*w_3+CT2s*l_m*abs(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT2s*l_m*(((w+"
      "l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*q-v_x_wind*(q_0*q_2"
      "*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_"
      "0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(22,22) = -(k_m+Psi*((Psi*(1.0/2.0))/R_A+Psi*1.0/(R_A*R_A)*1.0/sqrt(eps + 1"
      ".0/(R_A*R_A)*power(U_3*beta_m-Psi*w_3,2.0)*(1.0/4.0)+(U_3*alpha_m)/R_A)*(U_3*beta_m-Psi*w_3)*(1.0/4.0))+k_t*(CT0"
      "s*w_3*2.0-CT1s*(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(22,"
      "24) = (-CT0s*(w_3*w_3)+CT2s*abs(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*("
      "w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT1s*w_3*(w+l_m*q-v_x_wind*(q_0*q"
      "_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0)))/J_M;\n    A(22,25) = -(k_t*(w_3*w_3))/J_M;\n    A(22,29"
      ") = -(k_t*(CT2s*abs(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*q_2*2.0+"
      "q_1*q_3*2.0)+CT1s*w_3*(q_0*q_2*2.0+q_1*q_3*2.0)+CT2s*(((w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0"
      "*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0)))"
      ")*(q_0*q_2*2.0+q_1*q_3*2.0)*(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_"
      "M;\n    A(22,30) = (k_t*(CT2s*abs(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))"
      "*(q_0*q_1*2.0-q_2*q_3*2.0)+CT1s*w_3*(q_0*q_1*2.0-q_2*q_3*2.0)+CT2s*(((w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)"
      "+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-"
      "q_2*q_3*2.0))))*(q_0*q_1*2.0-q_2*q_3*2.0)*(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*"
      "q_3*2.0))))/J_M;\n    A(23,6) = (k_t*(CT1s*w_4+CT2s*abs(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0"
      "*q_1*2.0-q_2*q_3*2.0))+CT2s*(((w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/ab"
      "s(eps + w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(w-l_m*p-v_x_wind*(q_0*"
      "q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(23,7) = (k_t*(CT1s*w_4*(q_1*v_y_wind*2.0-"
      "q_2*v_x_wind*2.0)+CT2s*abs(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_1*v"
      "_y_wind*2.0-q_2*v_x_wind*2.0)+CT2s*(((w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2"
      ".0))/abs(eps + w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_1*v_y_wind*2."
      "0-q_2*v_x_wind*2.0)*(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    "
      "A(23,8) = (k_t*(CT1s*w_4*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*abs(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)"
      "+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)+CT2s*(((w-l_m*p-v_x_wind*(q_0*q_2*2.0+q"
      "_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q"
      "_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*v_y_wind*2.0-q_3*v_x_wind*2.0)*(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_w"
      "ind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(23,9) = -(k_t*(CT1s*w_4*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)+CT2s*ab"
      "s(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*v_x_wind*2.0+q_3*v_y_wind*"
      "2.0)+CT2s*(((w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*p-v_"
      "x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*v_x_wind*2.0+q_3*v_y_wind*2.0)*(w-l_"
      "m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(23,10) = -(k_t*(CT1s*w_"
      "4*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*abs(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-"
      "q_2*q_3*2.0))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)+CT2s*(((w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q"
      "_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0)"
      ")))*(q_1*v_x_wind*2.0+q_2*v_y_wind*2.0)*(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_"
      "3*2.0))))/J_M;\n    A(23,17) = -(k_t*(CT1s*l_m*w_4+CT2s*l_m*abs(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_w"
      "ind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT2s*l_m*(((w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*"
      "q_3*2.0))/abs(eps + w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(w-l_m*p-v_"
      "x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(23,23) = -(k_m+Psi*((Psi*(1.0"
      "/2.0))/R_A+Psi*1.0/(R_A*R_A)*1.0/sqrt(eps + 1.0/(R_A*R_A)*power(U_4*beta_m-Psi*w_4,2.0)*(1.0/4.0)+(U_4*alpha_m)/"
      "R_A)*(U_4*beta_m-Psi*w_4)*(1.0/4.0))+k_t*(CT0s*w_4*2.0-CT1s*(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind"
      "*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(23,24) = (-CT0s*(w_4*w_4)+CT2s*abs(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q"
      "_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_"
      "2*q_3*2.0))+CT1s*w_4*(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0)))/J_M;\n    "
      "A(23,25) = -(k_t*(w_4*w_4))/J_M;\n    A(23,29) = -(k_t*(CT2s*abs(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_"
      "wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*q_2*2.0+q_1*q_3*2.0)+CT1s*w_4*(q_0*q_2*2.0+q_1*q_3*2.0)+CT2s*(((w-l_m*p-v_x"
      "_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*"
      "q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*q_2*2.0+q_1*q_3*2.0)*(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*"
      "2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    A(23,30) = (k_t*(CT2s*abs(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1"
      "*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(q_0*q_1*2.0-q_2*q_3*2.0)+CT1s*w_4*(q_0*q_1*2.0-q_2*q_3*2.0)+CT2s*"
      "(((w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))/abs(eps + w-l_m*p-v_x_wind*(q_"
      "0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))*(q_0*q_1*2.0-q_2*q_3*2.0)*(w-l_m*p-v_x_wind*(q_0*q_"
      "2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\nend\nW(1,1) = -q_1;\nW(1,2) = q_0;\nW(1,3) = q_3;"
      "\nW(1,4) = -q_2;\nW(2,1) = -q_2;\nW(2,2) = -q_3;\nW(2,3) = q_0;\nW(2,4) = q_1;\nW(3,1) = -q_3;\nW(3,2) = q_2;\nW"
      "(3,3) = -q_1;\nW(3,4) = q_0;\n\nB = zeros(31,4);\n\nB(19,1) = (Psi*beta_m*(-1.0/2.0)-Psi*(R_A*alpha_m*4.0+U_1*(b"
      "eta_m*beta_m)*2.0-Psi*beta_m*w_1*2.0)*1.0/sqrt(eps + ( eps + U_1*U_1)*(beta_m*beta_m)+(Psi*Psi)*(w_1*w_1)+R_A*U_"
      "1*alpha_m*4.0-Psi*U_1*beta_m*w_1*2.0)*(1.0/4.0))/(I_z*R_A);\nB(19,2) = (Psi*beta_m*(1.0/2.0)+Psi*(R_A*alpha_m*4."
      "0+U_2*(beta_m*beta_m)*2.0-Psi*beta_m*w_2*2.0)*1.0/sqrt(eps + ( eps + U_2*U_2)*(beta_m*beta_m)+(Psi*Psi)*(w_2*w_2"
      ")+R_A*U_2*alpha_m*4.0-Psi*U_2*beta_m*w_2*2.0)*(1.0/4.0))/(I_z*R_A);\nB(19,3) = (Psi*beta_m*(-1.0/2.0)-Psi*(R_A*a"
      "lpha_m*4.0+U_3*(beta_m*beta_m)*2.0-Psi*beta_m*w_3*2.0)*1.0/sqrt(eps + ( eps + U_3*U_3)*(beta_m*beta_m)+(Psi*Psi)"
      "*(w_3*w_3)+R_A*U_3*alpha_m*4.0-Psi*U_3*beta_m*w_3*2.0)*(1.0/4.0))/(I_z*R_A);\nB(19,4) = (Psi*beta_m*(1.0/2.0)+Ps"
      "i*(R_A*alpha_m*4.0+U_4*(beta_m*beta_m)*2.0-Psi*beta_m*w_4*2.0)*1.0/sqrt(eps + ( eps + U_4*U_4)*(beta_m*beta_m)+("
      "Psi*Psi)*(w_4*w_4)+R_A*U_4*alpha_m*4.0-Psi*U_4*beta_m*w_4*2.0)*(1.0/4.0))/(I_z*R_A);\n\nB(20,1) = (Psi*((beta_m*"
      "(1.0/2.0))/R_A+1.0/sqrt(eps + 1.0/(R_A*R_A)*power(U_1*beta_m-Psi*w_1,2.0)*(1.0/4.0)+(U_1*alpha_m)/R_A)*(alpha_m/"
      "R_A+1.0/(R_A*R_A)*beta_m*(U_1*beta_m-Psi*w_1)*(1.0/2.0))*(1.0/2.0)))/J_M;\nB(21,2) = (Psi*((beta_m*(1.0/2.0))/R_"
      "A+1.0/sqrt(eps + 1.0/(R_A*R_A)*power(U_2*beta_m-Psi*w_2,2.0)*(1.0/4.0)+(U_2*alpha_m)/R_A)*(alpha_m/R_A+1.0/(R_A*"
      "R_A)*beta_m*(U_2*beta_m-Psi*w_2)*(1.0/2.0))*(1.0/2.0)))/J_M;\nB(22,3) = (Psi*((beta_m*(1.0/2.0))/R_A+1.0/sqrt(ep"
      "s + 1.0/(R_A*R_A)*power(U_3*beta_m-Psi*w_3,2.0)*(1.0/4.0)+(U_3*alpha_m)/R_A)*(alpha_m/R_A+1.0/(R_A*R_A)*beta_m*("
      "U_3*beta_m-Psi*w_3)*(1.0/2.0))*(1.0/2.0)))/J_M;\nB(23,4) = (Psi*((beta_m*(1.0/2.0))/R_A+1.0/sqrt(eps + 1.0/(R_A*"
      "R_A)*power(U_4*beta_m-Psi*w_4,2.0)*(1.0/4.0)+(U_4*alpha_m)/R_A)*(alpha_m/R_A+1.0/(R_A*R_A)*beta_m*(U_4*beta_m-Ps"
      "i*w_4)*(1.0/2.0))*(1.0/2.0)))/J_M;\n\nQ(1:6,1:6)   = diag(Qin(1:6));\nQ(7:10,7:10) = 1/4*transpose(-W)*diag(Qin("
      "7:9))*(-W);\nQ(11:end,11:end) = diag(Qin(10:end));\n\nQ = Q + B*(diag(Qin(19:22)))*B';\n\nA = eye(size(A)) + dt*"
      "A;\n\n% Prediction Step for P\nP_pred = A*Pin*A' + Q;\n"
      editorLayout	      "100 M4x1[10 5 700 500]"
    }
  }
  junction {
    id			    4
    position		    [23.5747 49.5747 7]
    chart		    2
    linkNode		    [2 0 0]
    subviewer		    2
    ssIdNumber		    3
    type		    CONNECTIVE_JUNCTION
  }
  transition {
    id			    5
    labelString		    "{eML_blk_kernel();}"
    labelPosition	    [32.125 19.875 102.544 14.964]
    fontSize		    12
    src {
      intersection	      [0 0 1 0 23.5747 14.625 0 0]
    }
    dst {
      id		      4
      intersection	      [7 0 -1 -1 23.5747 42.5747 0 0]
    }
    midPoint		    [23.5747 24.9468]
    chart		    2
    linkNode		    [2 0 0]
    dataLimits		    [23.575 23.575 14.625 34.575]
    subviewer		    2
    drawStyle		    SMART
    executionOrder	    1
    ssIdNumber		    2
  }
  data {
    id			    6
    ssIdNumber		    4
    name		    "uin"
    linkNode		    [2 0 7]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    7
    ssIdNumber		    6
    name		    "xin"
    linkNode		    [2 6 8]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    8
    ssIdNumber		    5
    name		    "P_pred"
    linkNode		    [2 7 9]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    9
    ssIdNumber		    10
    name		    "Pin"
    linkNode		    [2 8 10]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    10
    ssIdNumber		    12
    name		    "dt"
    linkNode		    [2 9 11]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    11
    ssIdNumber		    11
    name		    "parameter"
    linkNode		    [2 10 0]
    scope		    PARAMETER_DATA
    isNonTunable	    1
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"Parameters"
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  instance {
    id			    12
    name		    "Kalmanfilter/covariancePrediction"
    machine		    1
    chart		    2
  }
  chart {
    id			    13
    name		    "Kalmanfilter/statePrediction"
    windowPosition	    [384.879 306.305 200.25 189.75]
    viewLimits		    [0 156.75 0 153.75]
    screen		    [1 1 1680 1050 1.333333333333333]
    treeNode		    [0 14 0 0]
    firstTransition	    16
    firstJunction	    15
    viewObj		    13
    machine		    1
    subviewS {
    }
    ssIdHighWaterMark	    11
    decomposition	    CLUSTER_CHART
    type		    EML_CHART
    firstData		    17
    chartFileNumber	    2
    disableImplicitCasting  1
    eml {
      name		      "statePrediction"
    }
  }
  state {
    id			    14
    labelString		    "eML_blk_kernel()"
    position		    [18 64.5 118 66]
    fontSize		    12
    chart		    13
    treeNode		    [13 0 0 0]
    superState		    SUBCHART
    subviewer		    13
    ssIdNumber		    1
    type		    FUNC_STATE
    decomposition	    CLUSTER_STATE
    eml {
      isEML		      1
      script		      "function x_pred = statePrediction(uin, xin, dt, parameter)\n\n% parameters\ng       = parameter.g"
      ";  \nm       = parameter.m;\nl_m     = parameter.l_m; \nI_x     = parameter.I_x;\nI_y     = parameter.I_y;\nI_z "
      "    = parameter.I_z; \nPsi     = parameter.Psi; \nR_A     = parameter.R_A;\nJ_M     = parameter.J_M;\nCT2s    = "
      "parameter.CT2s;\nCT1s    = parameter.CT1s;\nC_wz    = parameter.C_wz;\nC_mxy   = parameter.C_mxy;\nC_mz    = par"
      "ameter.C_mz;\nalpha_m = parameter.alpha_m;\nbeta_m  = parameter.beta_m;\nk_m     = parameter.k_m;\n\n% input vec"
      "tor\nU_1 = uin(1);\nU_2 = uin(2);\nU_3 = uin(3);\nU_4 = uin(4);\n\n% old state vector\n% p_x = xin(1);\n% p_y = "
      "xin(2);\n% p_z = xin(3);\nu = xin(4);\nv = xin(5);\nw = xin(6);\nq_0 = xin(7);\nq_1 = xin(8);\nq_2 = xin(9);\nq_"
      "3 = xin(10);\n% a_x_bias = xin(11);\n% a_y_bias = xin(12);\n% a_z_bias = xin(13);\n% p_bias = xin(14);\n% q_bias"
      " = xin(15);\n% r_bias = xin(16);\np = xin(17);\nq = xin(18);\nr = xin(19);\nw_1 = xin(20);\nw_2 = xin(21);\nw_3 "
      "= xin(22);\nw_4 = xin(23);\nk_t = xin(24);\nCT0s = xin(25);\nM_x0 = xin(26);\nM_y0 = xin(27);\nM_z0 = xin(28);\n"
      "v_x_wind = xin(29);\nv_y_wind = xin(30);\nC_wxy = xin(31);\n\nvx_res = -u+v_x_wind*(q_0*q_0+q_1*q_1-q_2*q_2-q_3*"
      "q_3)+v_y_wind*(q_0*q_3*2.0+q_1*q_2*2.0);\nvy_res = v-v_y_wind*(q_0*q_0-q_1*q_1+q_2*q_2-q_3*q_3)+v_x_wind*(q_0*q_"
      "3*2.0-q_1*q_2*2.0);\nvz_res = w-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0);\nvelocity"
      "Length = sqrt(eps + vx_res^2 + vy_res^2 + vz_res^2);\n\ndx = zeros(31,1);\nif min(uin) > 3\n    dx(1) = u*(q_0*q"
      "_0+q_1*q_1-q_2*q_2-q_3*q_3)-v*(q_0*q_3*2.0-q_1*q_2*2.0)+w*(q_0*q_2*2.0+q_1*q_3*2.0);\n    dx(2) = v*(q_0*q_0-q_1"
      "*q_1+q_2*q_2-q_3*q_3)+u*(q_0*q_3*2.0+q_1*q_2*2.0)-w*(q_0*q_1*2.0-q_2*q_3*2.0);\n    dx(3) = w*(q_0*q_0-q_1*q_1-q"
      "_2*q_2+q_3*q_3)-u*(q_0*q_2*2.0-q_1*q_3*2.0)+v*(q_0*q_1*2.0+q_2*q_3*2.0);\n    dx(4) = -q*w+r*v-g*(q_0*q_2*2.0-q_"
      "1*q_3*2.0)+(C_wxy*(vx_res)*velocityLength)/m;\n    dx(5) = p*w-r*u+g*(q_0*q_1*2.0+q_2*q_3*2.0)-(C_wxy*velocityLe"
      "ngth*(vy_res))/m;\n    dx(6) = g*(q_0*q_0-q_1*q_1-q_2*q_2+q_3*q_3)-p*v+q*u-(CT0s*(w_1*w_1)+CT0s*(w_2*w_2)+CT0s*("
      "w_3*w_3)+CT0s*(w_4*w_4)-CT1s*w_2*(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3"
      "*v_y_wind*2.0)-CT1s*w_3*(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind"
      "*2.0)+CT1s*w_4*(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT"
      "1s*w_1*(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*abs(-"
      "w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(-w+l_m*p-q_0*q_1*v"
      "_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*abs(-w+l_m*q-q_0*q_1*v_y_wind*2"
      ".0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wi"
      "nd*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)-CT2s*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1"
      "*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-"
      "q_2*q_3*v_y_wind*2.0)-CT2s*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_"
      "y_wind*2.0)*(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0))/m-(C_"
      "wz*(vz_res)*velocityLength)/m;\n    dx(7) = p*q_1*(-1.0/2.0)-q*q_2*(1.0/2.0)-q_3*r*(1.0/2.0)-q_0*((q_0*q_0)*3.0+"
      "(q_1*q_1)*3.0+(q_2*q_2)*3.0+(q_3*q_3)*3.0-3.0);\n    dx(8) = p*q_0*(1.0/2.0)-q*q_3*(1.0/2.0)+q_2*r*(1.0/2.0)-q_1"
      "*((q_0*q_0)*3.0+(q_1*q_1)*3.0+(q_2*q_2)*3.0+(q_3*q_3)*3.0-3.0);\n    dx(9) = p*q_3*(1.0/2.0)+q*q_0*(1.0/2.0)-q_1"
      "*r*(1.0/2.0)-q_2*((q_0*q_0)*3.0+(q_1*q_1)*3.0+(q_2*q_2)*3.0+(q_3*q_3)*3.0-3.0);\n    dx(10) = p*q_2*(-1.0/2.0)+q"
      "*q_1*(1.0/2.0)+q_0*r*(1.0/2.0)-q_3*((q_0*q_0)*3.0+(q_1*q_1)*3.0+(q_2*q_2)*3.0+(q_3*q_3)*3.0-3.0);\n    dx(17) = "
      "(M_x0-C_mxy*p*sqrt(p*p+q*q+r*r)+I_y*q*r-I_z*q*r-CT0s*l_m*(w_2*w_2)+CT0s*l_m*(w_4*w_4)+CT2s*(l_m*l_m)*p*abs(w+l_m"
      "*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)-CT2s*l_m*w*abs(-w+l_m*p-"
      "q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT1s*(l_m*l_m)*p*w_2+CT1s*("
      "l_m*l_m)*p*w_4+CT2s*(l_m*l_m)*p*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*"
      "q_3*v_y_wind*2.0)+CT2s*l_m*w*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*"
      "v_y_wind*2.0)+CT1s*l_m*w*w_2-CT1s*l_m*w*w_4-CT2s*l_m*q_0*q_1*v_y_wind*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*"
      "v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*abs(-w+l_m*p-q_0*q_1*v_y_w"
      "ind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_wind*abs(-w+l_m"
      "*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_2*q_3*v_y"
      "_wind*abs(-w+l_m*p-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s"
      "*l_m*q_0*q_1*v_y_wind*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_win"
      "d*2.0)*2.0-CT2s*l_m*q_0*q_2*v_x_wind*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-"
      "q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_1*q_3*v_x_wind*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_"
      "3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_2*q_3*v_y_wind*abs(w+l_m*p+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_"
      "wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0+CT1s*l_m*q_0*q_1*v_y_wind*w_2*2.0-CT1s*l_m*q_0*q_2*v_x_w"
      "ind*w_2*2.0-CT1s*l_m*q_0*q_1*v_y_wind*w_4*2.0+CT1s*l_m*q_0*q_2*v_x_wind*w_4*2.0-CT1s*l_m*q_1*q_3*v_x_wind*w_2*2."
      "0+CT1s*l_m*q_1*q_3*v_x_wind*w_4*2.0-CT1s*l_m*q_2*q_3*v_y_wind*w_2*2.0+CT1s*l_m*q_2*q_3*v_y_wind*w_4*2.0)/I_x;\n "
      "   dx(18) = (M_y0-C_mxy*q*sqrt(p*p+q*q+r*r)-I_x*p*r+I_z*p*r+CT0s*l_m*(w_1*w_1)-CT0s*l_m*(w_3*w_3)+CT2s*(l_m*l_m)"
      "*q*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)-CT2s*l_m*w*a"
      "bs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)+CT1s*(l_m*l_m)*"
      "q*w_1+CT1s*(l_m*l_m)*q*w_3+CT2s*(l_m*l_m)*q*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_w"
      "ind*2.0+q_2*q_3*v_y_wind*2.0)+CT2s*l_m*w*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*"
      "2.0-q_2*q_3*v_y_wind*2.0)-CT1s*l_m*w*w_1+CT1s*l_m*w*w_3-CT2s*l_m*q_0*q_1*v_y_wind*abs(-w+l_m*q-q_0*q_1*v_y_wind*"
      "2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_0*q_2*v_x_wind*abs(-w+l_m*q-q"
      "_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m*q_1*q_3*v_x_win"
      "d*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2.0)*2.0+CT2s*l_m"
      "*q_2*q_3*v_y_wind*abs(-w+l_m*q-q_0*q_1*v_y_wind*2.0+q_0*q_2*v_x_wind*2.0+q_1*q_3*v_x_wind*2.0+q_2*q_3*v_y_wind*2"
      ".0)*2.0+CT2s*l_m*q_0*q_1*v_y_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2"
      "*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_0*q_2*v_x_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_wind*2.0-q_1*q_3*v"
      "_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_1*q_3*v_x_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-q_0*q_2*v_x_win"
      "d*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT2s*l_m*q_2*q_3*v_y_wind*abs(w+l_m*q+q_0*q_1*v_y_wind*2.0-"
      "q_0*q_2*v_x_wind*2.0-q_1*q_3*v_x_wind*2.0-q_2*q_3*v_y_wind*2.0)*2.0-CT1s*l_m*q_0*q_1*v_y_wind*w_1*2.0+CT1s*l_m*q"
      "_0*q_2*v_x_wind*w_1*2.0+CT1s*l_m*q_0*q_1*v_y_wind*w_3*2.0-CT1s*l_m*q_0*q_2*v_x_wind*w_3*2.0+CT1s*l_m*q_1*q_3*v_x"
      "_wind*w_1*2.0-CT1s*l_m*q_1*q_3*v_x_wind*w_3*2.0+CT1s*l_m*q_2*q_3*v_y_wind*w_1*2.0-CT1s*l_m*q_2*q_3*v_y_wind*w_3*"
      "2.0)/I_y;\n    dx(19) = ((Psi*Psi)*w_1*(1.0/2.0)-(Psi*Psi)*w_2*(1.0/2.0)+(Psi*Psi)*w_3*(1.0/2.0)-(Psi*Psi)*w_4*("
      "1.0/2.0)+M_z0*R_A-Psi*sqrt((U_1*U_1)*(beta_m*beta_m)+(Psi*Psi)*(w_1*w_1)+R_A*U_1*alpha_m*4.0-Psi*U_1*beta_m*w_1*"
      "2.0)*(1.0/2.0)+Psi*sqrt((U_2*U_2)*(beta_m*beta_m)+(Psi*Psi)*(w_2*w_2)+R_A*U_2*alpha_m*4.0-Psi*U_2*beta_m*w_2*2.0"
      ")*(1.0/2.0)-Psi*sqrt((U_3*U_3)*(beta_m*beta_m)+(Psi*Psi)*(w_3*w_3)+R_A*U_3*alpha_m*4.0-Psi*U_3*beta_m*w_3*2.0)*("
      "1.0/2.0)+Psi*sqrt((U_4*U_4)*(beta_m*beta_m)+(Psi*Psi)*(w_4*w_4)+R_A*U_4*alpha_m*4.0-Psi*U_4*beta_m*w_4*2.0)*(1.0"
      "/2.0)-Psi*U_1*beta_m*(1.0/2.0)+Psi*U_2*beta_m*(1.0/2.0)-Psi*U_3*beta_m*(1.0/2.0)+Psi*U_4*beta_m*(1.0/2.0)-C_mz*R"
      "_A*r*sqrt(p*p+q*q+r*r)+I_x*R_A*p*q-I_y*R_A*p*q)/(I_z*R_A);\n    dx(20) = (-k_m*w_1+Psi*(sqrt(1.0/(R_A*R_A)*power"
      "(U_1*beta_m-Psi*w_1,2.0)*(1.0/4.0)+(U_1*alpha_m)/R_A)+(U_1*beta_m*(1.0/2.0)-Psi*w_1*(1.0/2.0))/R_A)+k_t*(-CT0s*("
      "w_1*w_1)+CT2s*abs(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(w-l_m*q-v_x_wi"
      "nd*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT1s*w_1*(w-l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3"
      "*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))))/J_M;\n    dx(21) = (-k_m*w_2+k_t*(-CT0s*(w_2*w_2)+CT2s*abs(w+l_m*p-v"
      "_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0"
      ")+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT1s*w_2*(w+l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0"
      "-q_2*q_3*2.0)))+Psi*(sqrt(1.0/(R_A*R_A)*power(U_2*beta_m-Psi*w_2,2.0)*(1.0/4.0)+(U_2*alpha_m)/R_A)+(U_2*beta_m*("
      "1.0/2.0)-Psi*w_2*(1.0/2.0))/R_A))/J_M;\n    dx(22) = (-k_m*w_3+Psi*(sqrt(1.0/(R_A*R_A)*power(U_3*beta_m-Psi*w_3,"
      "2.0)*(1.0/4.0)+(U_3*alpha_m)/R_A)+(U_3*beta_m*(1.0/2.0)-Psi*w_3*(1.0/2.0))/R_A)+k_t*(-CT0s*(w_3*w_3)+CT2s*abs(w+"
      "l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*"
      "q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))+CT1s*w_3*(w+l_m*q-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*"
      "q_1*2.0-q_2*q_3*2.0))))/J_M;\n    dx(23) = (-k_m*w_4+k_t*(-CT0s*(w_4*w_4)+CT2s*abs(w-l_m*p-v_x_wind*(q_0*q_2*2.0"
      "+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0))*(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*"
      "2.0-q_2*q_3*2.0))+CT1s*w_4*(w-l_m*p-v_x_wind*(q_0*q_2*2.0+q_1*q_3*2.0)+v_y_wind*(q_0*q_1*2.0-q_2*q_3*2.0)))+Psi*"
      "(sqrt(1.0/(R_A*R_A)*power(U_4*beta_m-Psi*w_4,2.0)*(1.0/4.0)+(U_4*alpha_m)/R_A)+(U_4*beta_m*(1.0/2.0)-Psi*w_4*(1."
      "0/2.0))/R_A))/J_M;\nend\n\n% state prediction\n\nx_pred = xin + dt*dx;"
      editorLayout	      "100 M4x1[10 5 700 500]"
    }
  }
  junction {
    id			    15
    position		    [23.5747 49.5747 7]
    chart		    13
    linkNode		    [13 0 0]
    subviewer		    13
    ssIdNumber		    3
    type		    CONNECTIVE_JUNCTION
  }
  transition {
    id			    16
    labelString		    "{eML_blk_kernel();}"
    labelPosition	    [32.125 19.875 102.544 14.964]
    fontSize		    12
    src {
      intersection	      [0 0 1 0 23.5747 14.625 0 0]
    }
    dst {
      id		      15
      intersection	      [7 0 -1 -1 23.5747 42.5747 0 0]
    }
    midPoint		    [23.5747 24.9468]
    chart		    13
    linkNode		    [13 0 0]
    dataLimits		    [23.575 23.575 14.625 34.575]
    subviewer		    13
    drawStyle		    SMART
    executionOrder	    1
    ssIdNumber		    2
  }
  data {
    id			    17
    ssIdNumber		    4
    name		    "uin"
    linkNode		    [13 0 18]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    18
    ssIdNumber		    5
    name		    "x_pred"
    linkNode		    [13 17 19]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    19
    ssIdNumber		    6
    name		    "xin"
    linkNode		    [13 18 20]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    20
    ssIdNumber		    11
    name		    "dt"
    linkNode		    [13 19 21]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    21
    ssIdNumber		    10
    name		    "parameter"
    linkNode		    [13 20 0]
    scope		    PARAMETER_DATA
    isNonTunable	    1
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"Parameters"
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  instance {
    id			    22
    name		    "Kalmanfilter/statePrediction"
    machine		    1
    chart		    13
  }
  chart {
    id			    23
    name		    "Kalmanfilter/correction"
    windowPosition	    [399.879 291.305 200.25 189.75]
    viewLimits		    [0 156.75 0 153.75]
    screen		    [1 1 1680 1050 1.333333333333333]
    treeNode		    [0 24 0 0]
    firstTransition	    26
    firstJunction	    25
    viewObj		    23
    machine		    1
    subviewS {
    }
    ssIdHighWaterMark	    13
    decomposition	    CLUSTER_CHART
    type		    EML_CHART
    firstData		    27
    chartFileNumber	    3
    disableImplicitCasting  1
    eml {
      name		      "correction"
    }
  }
  state {
    id			    24
    labelString		    "eML_blk_kernel()"
    position		    [18 64.5 118 66]
    fontSize		    12
    chart		    23
    treeNode		    [23 0 0 0]
    superState		    SUBCHART
    subviewer		    23
    ssIdNumber		    1
    type		    FUNC_STATE
    decomposition	    CLUSTER_STATE
    eml {
      isEML		      1
      script		      "function [x,P] = correction(xpred, Ppred, y, sensors, parameter)\n\n\nR0   = parameter.R0;\nPos0 "
      "= parameter.Pos0;\nB0   = parameter.B0;\n\nx    = xpred;\nP    = Ppred;\n% Horizontal GPS Position\nif sensors(1"
      ") == 1\n    [temp, C, R] = getGPSPosition(xpred,y(1:2),R0(1:2),Pos0);\n    K            = Ppred*C'*(C*Ppred*C'  "
      "+  R)^( - 1);\n    x            = x  +  K*temp;\n    P            = (eye(length(xpred))  -  K*C)*P;\nend\n% Baro"
      "metric height\nif sensors(2) == 1\n    [temp,C,R]  =  getBarometer(xpred,y(3),R0(3));\n    K           = Ppred*C"
      "'*(C*Ppred*C'  +  R)^( - 1);\n    x           = x  +  K*temp;\n    P           = (eye(length(xpred))  -  K*C)*P;"
      "\nend\n% GPS Velocity\nif sensors(3) == 1\n    [temp,C,R]  =  getGPSVelocity(xpred,y(4:6),R0(4:6));\n    K      "
      "     = Ppred*C'*(C*Ppred*C'  +  R)^( - 1);\n    x           = x  +  K*temp;\n    P           = (eye(length(xpred"
      "))  -  K*C)*P;\nend\n% Acceleration\nif sensors(4) == 1\n    [temp,C,R]  =  getAccelerometer(xpred,y(7:9),R0(7:9"
      "),parameter);\n    K           = Ppred*C'*(C*Ppred*C'  +  R)^( - 1);\n    x           = x  +  K*temp;\n    P    "
      "       = (eye(length(xpred))  -  K*C)*P;\nend\n% Gyroscope\nif sensors(5) == 1\n    [temp,C,R]  =  getGyroscope("
      "xpred,y(10:12),R0(10:12));\n    K           = Ppred*C'*(C*Ppred*C'  +  R)^( - 1);\n    x           = x  +  K*tem"
      "p;\n    P           = (eye(length(xpred))  -  K*C)*P;\nend\n% Omega motor\nif sensors(6) == 1\n    [temp,C,R]  ="
      "  getOmegaMotor(xpred,y(13:16),R0(13:16));\n    K           = Ppred*C'*(C*Ppred*C'  +  R)^( - 1);\n    x        "
      "   = x  +  K*temp;\n    P           = (eye(length(xpred))  -  K*C)*P;\nend\n% Magnetometer\nif sensors(7) == 1\n"
      "    [temp, C, R] = getMagneticField(xpred,y(17:19),R0(17:19),B0);\n    K            = Ppred*C'*(C*Ppred*C'  +  R"
      ")^( - 1);\n    x            = x  +  K*temp;\n    P            = (eye(length(xpred))  -  K*C)*P;\nend\n% normaliz"
      "e quaternions\nq_0 = x(7);\nq_1 = x(8);\nq_2 = x(9);\nq_3 = x(10);\nq_length = sqrt((q_0*q_0) + (q_1*q_1) + (q_2"
      "*q_2) + (q_3*q_3));\n\nx(7)  = x(7)/q_length;\nx(8)  = x(8)/q_length;\nx(9)  = x(9)/q_length;\nx(10) = x(10)/q_l"
      "ength;\n\n%endfunction\n\nfunction [temp, C, R] = getGPSPosition(x,real_measurements,Rin,Pos0)\n\ny = zeros(2,1)"
      ";\nC = zeros(2,31);\nR = zeros(2);\n\ny(1)   = Pos0(1)  +  x(1)/6378137.0/pi*180.0;                         % La"
      "titude\ny(2)   = Pos0(2)  +  x(2)/6378137.0/pi/cos(Pos0(1)*pi/180.0)*180.0;   % Longitude\n\nC(1,1) = 180/637813"
      "7/pi;\nC(2,2) = 180/6378137/pi/cos(Pos0(1)*pi/180);\n\nR(1,1) = 180*Rin(1)/6378137/pi;\nR(2,2) = 180*Rin(2)/6378"
      "137/pi/cos(Pos0(1)*pi/180);\n\ntemp   = real_measurements  -  y;\n\nfunction [temp, C, R] = getGPSVelocity(x,rea"
      "l_measurements,Rin)\n\ny = zeros(3,1);\nC = zeros(3,31);\n\nu = x(4);\nv = x(5);\nw = x(6);\nq_0 = x(7);\nq_1 = "
      "x(8);\nq_2 = x(9);\nq_3 = x(10);\n\ny(1) = u*(q_0*q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3) - v*(q_0*q_3*2.0 - q_1*q_2*"
      "2.0) + w*(q_0*q_2*2.0 + q_1*q_3*2.0);\ny(2) = v*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*q_3) + u*(q_0*q_3*2.0 + q_1*q"
      "_2*2.0) - w*(q_0*q_1*2.0 - q_2*q_3*2.0);\ny(3) = w*(q_0*q_0 - q_1*q_1 - q_2*q_2 + q_3*q_3) - u*(q_0*q_2*2.0 - q_"
      "1*q_3*2.0) + v*(q_0*q_1*2.0 + q_2*q_3*2.0);\n\nC(1,4)  = q_0*q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3;\nC(1,5)  = q_0*q"
      "_3* - 2.0 + q_1*q_2*2.0;\nC(1,6)  = q_0*q_2*2.0 + q_1*q_3*2.0;\nC(1,7)  = q_0*u*2.0 - q_3*v*2.0 + q_2*w*2.0;\nC("
      "1,8)  = q_1*u*2.0 + q_2*v*2.0 + q_3*w*2.0;\nC(1,9)  = q_2*u* - 2.0 + q_1*v*2.0 + q_0*w*2.0;\nC(1,10) = q_3*u* - "
      "2.0 - q_0*v*2.0 + q_1*w*2.0;\nC(2,4)  = q_0*q_3*2.0 + q_1*q_2*2.0;\nC(2,5)  = q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*"
      "q_3;\nC(2,6)  = q_0*q_1* - 2.0 + q_2*q_3*2.0;\nC(2,7)  = q_3*u*2.0 + q_0*v*2.0 - q_1*w*2.0;\nC(2,8)  = q_2*u*2.0"
      " - q_1*v*2.0 - q_0*w*2.0;\nC(2,9)  = q_1*u*2.0 + q_2*v*2.0 + q_3*w*2.0;\nC(2,10) = q_0*u*2.0 - q_3*v*2.0 + q_2*w"
      "*2.0;\nC(3,4)  = q_0*q_2* - 2.0 + q_1*q_3*2.0;\nC(3,5)  = q_0*q_1*2.0 + q_2*q_3*2.0;\nC(3,6)  = q_0*q_0 - q_1*q_"
      "1 - q_2*q_2 + q_3*q_3;\nC(3,7)  = q_2*u* - 2.0 + q_1*v*2.0 + q_0*w*2.0;\nC(3,8)  = q_3*u*2.0 + q_0*v*2.0 - q_1*w"
      "*2.0;\nC(3,9)  = q_0*u* - 2.0 + q_3*v*2.0 - q_2*w*2.0;\nC(3,10) = q_1*u*2.0 + q_2*v*2.0 + q_3*w*2.0;\n\nR       "
      "= diag(Rin);\n\ntemp    = real_measurements  -  y;\n\n\nfunction [temp, C, R] = getMagneticField(x,real_measurem"
      "ents,Rin,B)\n\nq_0 = x(7);\nq_1 = x(8);\nq_2 = x(9);\nq_3 = x(10);\n\ny       = zeros(3,1);\nC       = zeros(3,3"
      "1);\n\nfieldLength             = eps  +  sqrt(B(1)*B(1) + B(2)*B(2) + B(3)*B(3));\nfieldLengthMeasurement  = eps"
      "  +  sqrt(real_measurements(1)^2  +  real_measurements(2)^2  +  real_measurements(3)^2);\n\n%% Magnetometer upda"
      "tes only heading angle\ny(1) = (B(2)*(q_0*q_3*2.0 + q_1*q_2*2.0) - B(3)*(q_0*q_2*2.0 - q_1*q_3*2.0) + B(1)*(q_0*"
      "q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3))/fieldLength;\ny(2) = ( - B(1)*(q_0*q_3*2.0 - q_1*q_2*2.0) + B(3)*(q_0*q_1*2."
      "0 + q_2*q_3*2.0) + B(2)*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*q_3))/fieldLength;\ny(3) = (B(1)*(q_0*q_2*2.0 + q_1*q"
      "_3*2.0) - B(2)*(q_0*q_1*2.0 - q_2*q_3*2.0) + B(3)*(q_0*q_0 - q_1*q_1 - q_2*q_2 + q_3*q_3))/fieldLength;\n\nC(1,7"
      ") =  - q_3*(q_0*(B(2)*q_0*1.0/fieldLength*2.0 - B(1)*q_3*1.0/fieldLength*2.0 + B(3)*q_1*1.0/fieldLength*2.0) + q"
      "_1*(B(1)*q_2*1.0/fieldLength*2.0 - B(2)*q_1*1.0/fieldLength*2.0 + B(3)*q_0*1.0/fieldLength*2.0) + q_2*(B(1)*q_1*"
      "1.0/fieldLength*2.0 + B(2)*q_2*1.0/fieldLength*2.0 + B(3)*q_3*1.0/fieldLength*2.0) - q_3*(B(1)*q_0*1.0/fieldLeng"
      "th*2.0 + B(2)*q_3*1.0/fieldLength*2.0 - B(3)*q_2*1.0/fieldLength*2.0));\nC(1,8) = q_2*(q_0*(B(2)*q_0*1.0/fieldLe"
      "ngth*2.0 - B(1)*q_3*1.0/fieldLength*2.0 + B(3)*q_1*1.0/fieldLength*2.0) + q_1*(B(1)*q_2*1.0/fieldLength*2.0 - B("
      "2)*q_1*1.0/fieldLength*2.0 + B(3)*q_0*1.0/fieldLength*2.0) + q_2*(B(1)*q_1*1.0/fieldLength*2.0 + B(2)*q_2*1.0/fi"
      "eldLength*2.0 + B(3)*q_3*1.0/fieldLength*2.0) - q_3*(B(1)*q_0*1.0/fieldLength*2.0 + B(2)*q_3*1.0/fieldLength*2.0"
      " - B(3)*q_2*1.0/fieldLength*2.0));\nC(1,9) =  - q_1*(q_0*(B(2)*q_0*1.0/fieldLength*2.0 - B(1)*q_3*1.0/fieldLengt"
      "h*2.0 + B(3)*q_1*1.0/fieldLength*2.0) + q_1*(B(1)*q_2*1.0/fieldLength*2.0 - B(2)*q_1*1.0/fieldLength*2.0 + B(3)*"
      "q_0*1.0/fieldLength*2.0) + q_2*(B(1)*q_1*1.0/fieldLength*2.0 + B(2)*q_2*1.0/fieldLength*2.0 + B(3)*q_3*1.0/field"
      "Length*2.0) - q_3*(B(1)*q_0*1.0/fieldLength*2.0 + B(2)*q_3*1.0/fieldLength*2.0 - B(3)*q_2*1.0/fieldLength*2.0));"
      "\nC(1,10) = q_0*(q_0*(B(2)*q_0*1.0/fieldLength*2.0 - B(1)*q_3*1.0/fieldLength*2.0 + B(3)*q_1*1.0/fieldLength*2.0"
      ") + q_1*(B(1)*q_2*1.0/fieldLength*2.0 - B(2)*q_1*1.0/fieldLength*2.0 + B(3)*q_0*1.0/fieldLength*2.0) + q_2*(B(1)"
      "*q_1*1.0/fieldLength*2.0 + B(2)*q_2*1.0/fieldLength*2.0 + B(3)*q_3*1.0/fieldLength*2.0) - q_3*(B(1)*q_0*1.0/fiel"
      "dLength*2.0 + B(2)*q_3*1.0/fieldLength*2.0 - B(3)*q_2*1.0/fieldLength*2.0));\nC(2,7) = q_3*(q_0*(B(1)*q_0*1.0/fi"
      "eldLength*2.0 + B(2)*q_3*1.0/fieldLength*2.0 - B(3)*q_2*1.0/fieldLength*2.0) - q_2*(B(1)*q_2*1.0/fieldLength*2.0"
      " - B(2)*q_1*1.0/fieldLength*2.0 + B(3)*q_0*1.0/fieldLength*2.0) + q_1*(B(1)*q_1*1.0/fieldLength*2.0 + B(2)*q_2*1"
      ".0/fieldLength*2.0 + B(3)*q_3*1.0/fieldLength*2.0) + q_3*(B(2)*q_0*1.0/fieldLength*2.0 - B(1)*q_3*1.0/fieldLengt"
      "h*2.0 + B(3)*q_1*1.0/fieldLength*2.0));\nC(2,8) =  - q_2*(q_0*(B(1)*q_0*1.0/fieldLength*2.0 + B(2)*q_3*1.0/field"
      "Length*2.0 - B(3)*q_2*1.0/fieldLength*2.0) - q_2*(B(1)*q_2*1.0/fieldLength*2.0 - B(2)*q_1*1.0/fieldLength*2.0 + "
      "B(3)*q_0*1.0/fieldLength*2.0) + q_1*(B(1)*q_1*1.0/fieldLength*2.0 + B(2)*q_2*1.0/fieldLength*2.0 + B(3)*q_3*1.0/"
      "fieldLength*2.0) + q_3*(B(2)*q_0*1.0/fieldLength*2.0 - B(1)*q_3*1.0/fieldLength*2.0 + B(3)*q_1*1.0/fieldLength*2"
      ".0));\nC(2,9) = q_1*(q_0*(B(1)*q_0*1.0/fieldLength*2.0 + B(2)*q_3*1.0/fieldLength*2.0 - B(3)*q_2*1.0/fieldLength"
      "*2.0) - q_2*(B(1)*q_2*1.0/fieldLength*2.0 - B(2)*q_1*1.0/fieldLength*2.0 + B(3)*q_0*1.0/fieldLength*2.0) + q_1*("
      "B(1)*q_1*1.0/fieldLength*2.0 + B(2)*q_2*1.0/fieldLength*2.0 + B(3)*q_3*1.0/fieldLength*2.0) + q_3*(B(2)*q_0*1.0/"
      "fieldLength*2.0 - B(1)*q_3*1.0/fieldLength*2.0 + B(3)*q_1*1.0/fieldLength*2.0));\nC(2,10) =  - q_0*(q_0*(B(1)*q_"
      "0*1.0/fieldLength*2.0 + B(2)*q_3*1.0/fieldLength*2.0 - B(3)*q_2*1.0/fieldLength*2.0) - q_2*(B(1)*q_2*1.0/fieldLe"
      "ngth*2.0 - B(2)*q_1*1.0/fieldLength*2.0 + B(3)*q_0*1.0/fieldLength*2.0) + q_1*(B(1)*q_1*1.0/fieldLength*2.0 + B("
      "2)*q_2*1.0/fieldLength*2.0 + B(3)*q_3*1.0/fieldLength*2.0) + q_3*(B(2)*q_0*1.0/fieldLength*2.0 - B(1)*q_3*1.0/fi"
      "eldLength*2.0 + B(3)*q_1*1.0/fieldLength*2.0));\nC(3,7) = q_3*( - q_0*(B(1)*q_1*1.0/fieldLength*2.0 + B(2)*q_2*1"
      ".0/fieldLength*2.0 + B(3)*q_3*1.0/fieldLength*2.0) + q_1*(B(1)*q_0*1.0/fieldLength*2.0 + B(2)*q_3*1.0/fieldLengt"
      "h*2.0 - B(3)*q_2*1.0/fieldLength*2.0) + q_2*(B(2)*q_0*1.0/fieldLength*2.0 - B(1)*q_3*1.0/fieldLength*2.0 + B(3)*"
      "q_1*1.0/fieldLength*2.0) + q_3*(B(1)*q_2*1.0/fieldLength*2.0 - B(2)*q_1*1.0/fieldLength*2.0 + B(3)*q_0*1.0/field"
      "Length*2.0));\nC(3,8) =  - q_2*( - q_0*(B(1)*q_1*1.0/fieldLength*2.0 + B(2)*q_2*1.0/fieldLength*2.0 + B(3)*q_3*1"
      ".0/fieldLength*2.0) + q_1*(B(1)*q_0*1.0/fieldLength*2.0 + B(2)*q_3*1.0/fieldLength*2.0 - B(3)*q_2*1.0/fieldLengt"
      "h*2.0) + q_2*(B(2)*q_0*1.0/fieldLength*2.0 - B(1)*q_3*1.0/fieldLength*2.0 + B(3)*q_1*1.0/fieldLength*2.0) + q_3*"
      "(B(1)*q_2*1.0/fieldLength*2.0 - B(2)*q_1*1.0/fieldLength*2.0 + B(3)*q_0*1.0/fieldLength*2.0));\nC(3,9) = q_1*( -"
      " q_0*(B(1)*q_1*1.0/fieldLength*2.0 + B(2)*q_2*1.0/fieldLength*2.0 + B(3)*q_3*1.0/fieldLength*2.0) + q_1*(B(1)*q_"
      "0*1.0/fieldLength*2.0 + B(2)*q_3*1.0/fieldLength*2.0 - B(3)*q_2*1.0/fieldLength*2.0) + q_2*(B(2)*q_0*1.0/fieldLe"
      "ngth*2.0 - B(1)*q_3*1.0/fieldLength*2.0 + B(3)*q_1*1.0/fieldLength*2.0) + q_3*(B(1)*q_2*1.0/fieldLength*2.0 - B("
      "2)*q_1*1.0/fieldLength*2.0 + B(3)*q_0*1.0/fieldLength*2.0));\nC(3,10) =  - q_0*( - q_0*(B(1)*q_1*1.0/fieldLength"
      "*2.0 + B(2)*q_2*1.0/fieldLength*2.0 + B(3)*q_3*1.0/fieldLength*2.0) + q_1*(B(1)*q_0*1.0/fieldLength*2.0 + B(2)*q"
      "_3*1.0/fieldLength*2.0 - B(3)*q_2*1.0/fieldLength*2.0) + q_2*(B(2)*q_0*1.0/fieldLength*2.0 - B(1)*q_3*1.0/fieldL"
      "ength*2.0 + B(3)*q_1*1.0/fieldLength*2.0) + q_3*(B(1)*q_2*1.0/fieldLength*2.0 - B(2)*q_1*1.0/fieldLength*2.0 + B"
      "(3)*q_0*1.0/fieldLength*2.0));\n\nR       = diag(Rin);\n\ntemp    = real_measurements/fieldLengthMeasurement  - "
      " y;\n\n\nfunction [temp,C,R] = getBarometer(x,real_measurements,Rin)\n\n%% Initial conditions\np_z = x(3);\n\nC "
      "     = zeros(1,31);\nC(1,3) = 1.0;\n\nR       = diag(Rin);\n\ntemp    = real_measurements  -  p_z;\n\nfunction ["
      "temp,C,R] = getAccelerometer(x,real_measurements,Rin,parameter)\n\n% parameters\ng     = parameter.g;\nl_m   = p"
      "arameter.l_m;\nm     = parameter.m;\nCT2s  = parameter.CT2s;\nCT1s  = parameter.CT1s;\nC_wz  = parameter.C_wz;\n"
      "\n%% Initial conditions\nu = x(4);\nv = x(5);\nw = x(6);\nq_0 = x(7);\nq_1 = x(8);\nq_2 = x(9);\nq_3 = x(10);\na"
      "_x_bias = x(11);\na_y_bias = x(12);\na_z_bias = x(13);\n\np = x(17);\nq = x(18);\nr = x(19);\nw_1 = x(20);\nw_2 "
      "= x(21);\nw_3 = x(22);\nw_4 = x(23);\n\nCT0s = x(25);\n\nv_x_wind = x(29);\nv_y_wind = x(30);\nC_wxy    = x(31);"
      "\n\ny     = zeros(3,1);\nC     = zeros(3,31);\n\nvx_res =  - u + v_x_wind*(q_0*q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3"
      ") + v_y_wind*(q_0*q_3*2.0 + q_1*q_2*2.0);\nvy_res = v - v_y_wind*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*q_3) + v_x_w"
      "ind*(q_0*q_3*2.0 - q_1*q_2*2.0);\nvz_res = w - v_x_wind*(q_0*q_2*2.0 + q_1*q_3*2.0) + v_y_wind*(q_0*q_1*2.0 - q_"
      "2*q_3*2.0);\nvelocityLength = eps + sqrt(vx_res^2  +  vy_res^2  +  vz_res^2);\n\n\nif sum(x(20:23)) < 1500 % gro"
      "und contact if motor speed is to low\n    y(1) = a_x_bias + g*(q_0*q_2*2.0 - q_1*q_3*2.0);\n    y(2) = a_y_bias "
      "- g*(q_0*q_1*2.0 + q_2*q_3*2.0);\n    y(3) = a_z_bias - g*(q_0*q_0 - q_1*q_1 - q_2*q_2 + q_3*q_3);\n    \n    C("
      "1,7) = g*q_2*2.0;\n    C(1,8) = g*q_3* - 2.0;\n    C(1,9) = g*q_0*2.0;\n    C(1,10) = g*q_1* - 2.0;\n    C(1,11)"
      " = 1.0;\n    C(2,7) = g*q_1* - 2.0;\n    C(2,8) = g*q_0* - 2.0;\n    C(2,9) = g*q_3* - 2.0;\n    C(2,10) = g*q_2"
      "* - 2.0;\n    C(2,12) = 1.0;\n    C(3,7) = g*q_0* - 2.0;\n    C(3,8) = g*q_1*2.0;\n    C(3,9) = g*q_2*2.0;\n    "
      "C(3,10) = g*q_3* - 2.0;\n    C(3,13) = 1.0;\nelse\n    y(1) = a_x_bias - q*w + r*v + (C_wxy*(vx_res)*velocityLen"
      "gth)/m;\n    y(2) = a_y_bias + p*w - r*u - (C_wxy*velocityLength*(vy_res))/m;\n    y(3) = a_z_bias - p*v + q*u -"
      " (CT0s*(w_1*w_1) + CT0s*(w_2*w_2) + CT0s*(w_3*w_3) + CT0s*(w_4*w_4) - CT1s*w_2*(w + l_m*p + q_0*q_1*v_y_wind*2.0"
      " - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) - CT1s*w_3*(w + l_m*q + q_0*q_1*v_y_wind*"
      "2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) + CT1s*w_4*( - w + l_m*p - q_0*q_1*v_y"
      "_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT1s*w_1*( - w + l_m*q - q_0*q"
      "_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*abs( - w + l_m*p - "
      "q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*( - w + l_m*p - q_0*q"
      "_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*abs( - w + l_m*q - "
      "q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*( - w + l_m*q - q_0*q"
      "_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) - CT2s*abs(w + l_m*p + q_0"
      "*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(w + l_m*p + q_0*q_1*v_y"
      "_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) - CT2s*abs(w + l_m*q + q_0*q_1*v"
      "_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(w + l_m*q + q_0*q_1*v_y_wind*"
      "2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0))/m - (C_wz*(vz_res)*velocityLength)/m;"
      "\n    \n    C(1,4) =  - (C_wxy*velocityLength)/m - (C_wxy*(vx_res)*(u* - 2.0 + v_x_wind*(q_0*q_0 + q_1*q_1 - q_2"
      "*q_2 - q_3*q_3)*2.0 + v_y_wind*(q_0*q_3*2.0 + q_1*q_2*2.0)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(1,5) = r"
      " + (C_wxy*(vx_res)*(v*2.0 - v_y_wind*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*q_3)*2.0 + v_x_wind*(q_0*q_3*2.0 - q_1*q"
      "_2*2.0)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(1,6) =  - q + (C_wxy*(vx_res)*(w*2.0 - v_x_wind*(q_0*q_2*2."
      "0 + q_1*q_3*2.0)*2.0 + v_y_wind*(q_0*q_1*2.0 - q_2*q_3*2.0)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(1,7) = "
      "(C_wxy*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*velocityLength)/m + (C_wxy*(vx_res)*((q_0*v_y_wind*2.0 - q_3*v_x_wi"
      "nd*2.0)*(vy_res)* - 2.0 + (q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*(vx_res)*2.0 + (q_1*v_y_wind*2.0 - q_2*v_x_wind*"
      "2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(1,8) = (C_wxy*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0)*v"
      "elocityLength)/m + (C_wxy*(vx_res)*((q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0)*(vy_res)*2.0 + (q_1*v_x_wind*2.0 + q_2"
      "*v_y_wind*2.0)*(vx_res)*2.0 + (q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/"
      "m;\n    C(1,9) = (C_wxy*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0)*velocityLength)/m - (C_wxy*(vx_res)*((q_1*v_x_wind"
      "*2.0 + q_2*v_y_wind*2.0)*(vy_res)*2.0 - (q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0)*(vx_res)*2.0 + (q_0*v_x_wind*2.0 +"
      " q_3*v_y_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(1,10) = (C_wxy*(q_0*v_y_wind*2.0 - q_3*"
      "v_x_wind*2.0)*velocityLength)/m + (C_wxy*(vx_res)*((q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*(vy_res)*2.0 + (q_0*v_y"
      "_wind*2.0 - q_3*v_x_wind*2.0)*(vx_res)*2.0 - (q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0)*(vz_res)*2.0)*1.0/velocityLen"
      "gth*(1.0/2.0))/m;\n    C(1,11) = 1.0;\n    \n    %     C(1,18) =  - w;\n    %     C(1,19) = v;\n    %     C(1,29"
      ") = (C_wxy*velocityLength*(q_0*q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3))/m + (C_wxy*(vx_res)*1.0/velocityLength*((q_0*"
      "q_3*2.0 - q_1*q_2*2.0)*(vy_res)*2.0 - (q_0*q_2*2.0 + q_1*q_3*2.0)*(vz_res)*2.0 + (vx_res)*(q_0*q_0 + q_1*q_1 - q"
      "_2*q_2 - q_3*q_3)*2.0)*(1.0/2.0))/m;\n    %     C(1,30) = (C_wxy*(q_0*q_3*2.0 + q_1*q_2*2.0)*velocityLength)/m +"
      " (C_wxy*(vx_res)*1.0/velocityLength*((q_0*q_3*2.0 + q_1*q_2*2.0)*(vx_res)*2.0 - (vy_res)*(q_0*q_0 - q_1*q_1 + q_"
      "2*q_2 - q_3*q_3)*2.0 + (q_0*q_1*2.0 - q_2*q_3*2.0)*(vz_res)*2.0)*(1.0/2.0))/m;\n    %     C(1,31) = ((vx_res)*ve"
      "locityLength)/m;\n    \n    C(2,4) =  - r + (C_wxy*(u* - 2.0 + v_x_wind*(q_0*q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3)*"
      "2.0 + v_y_wind*(q_0*q_3*2.0 + q_1*q_2*2.0)*2.0)*1.0/velocityLength*(vy_res)*(1.0/2.0))/m;\n    C(2,5) =  - (C_wx"
      "y*velocityLength)/m - (C_wxy*(v*2.0 - v_y_wind*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*q_3)*2.0 + v_x_wind*(q_0*q_3*2"
      ".0 - q_1*q_2*2.0)*2.0)*1.0/velocityLength*(vy_res)*(1.0/2.0))/m;\n    C(2,6) = p - (C_wxy*(w*2.0 - v_x_wind*(q_0"
      "*q_2*2.0 + q_1*q_3*2.0)*2.0 + v_y_wind*(q_0*q_1*2.0 - q_2*q_3*2.0)*2.0)*1.0/velocityLength*(vy_res)*(1.0/2.0))/m"
      ";\n    C(2,7) = (C_wxy*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0)*velocityLength)/m - (C_wxy*((q_0*v_y_wind*2.0 - q_3"
      "*v_x_wind*2.0)*(vy_res)* - 2.0 + (q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*(vx_res)*2.0 + (q_1*v_y_wind*2.0 - q_2*v_"
      "x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(vy_res)*(1.0/2.0))/m;\n    C(2,8) =  - (C_wxy*(q_1*v_y_wind*2.0 - "
      "q_2*v_x_wind*2.0)*velocityLength)/m - (C_wxy*((q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0)*(vy_res)*2.0 + (q_1*v_x_wind"
      "*2.0 + q_2*v_y_wind*2.0)*(vx_res)*2.0 + (q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*("
      "vy_res)*(1.0/2.0))/m;\n    C(2,9) = (C_wxy*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0)*velocityLength)/m + (C_wxy*((q_"
      "1*v_x_wind*2.0 + q_2*v_y_wind*2.0)*(vy_res)*2.0 - (q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0)*(vx_res)*2.0 + (q_0*v_x_"
      "wind*2.0 + q_3*v_y_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(vy_res)*(1.0/2.0))/m;\n    C(2,10) =  - (C_wxy*(q"
      "_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*velocityLength)/m - (C_wxy*((q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*(vy_res)*2"
      ".0 + (q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0)*(vx_res)*2.0 - (q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0)*(vz_res)*2.0)*1."
      "0/velocityLength*(vy_res)*(1.0/2.0))/m;\n    C(2,12) = 1.0;\n    \n    %     C(2,17) = w;\n    %     C(2,19) =  "
      "- u;\n    %     C(2,29) =  - (C_wxy*(q_0*q_3*2.0 - q_1*q_2*2.0)*velocityLength)/m - (C_wxy*1.0/velocityLength*(v"
      "y_res)*((q_0*q_3*2.0 - q_1*q_2*2.0)*(vy_res)*2.0 - (q_0*q_2*2.0 + q_1*q_3*2.0)*(vz_res)*2.0 + (vx_res)*(q_0*q_0 "
      "+ q_1*q_1 - q_2*q_2 - q_3*q_3)*2.0)*(1.0/2.0))/m;\n    %     C(2,30) = (C_wxy*velocityLength*(q_0*q_0 - q_1*q_1 "
      "+ q_2*q_2 - q_3*q_3))/m - (C_wxy*1.0/velocityLength*(vy_res)*((q_0*q_3*2.0 + q_1*q_2*2.0)*(vx_res)*2.0 - (vy_res"
      ")*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*q_3)*2.0 + (q_0*q_1*2.0 - q_2*q_3*2.0)*(vz_res)*2.0)*(1.0/2.0))/m;\n    %  "
      "   C(2,31) =  - (velocityLength*(vy_res))/m;\n    \n    C(3,4) = q + (C_wz*(u* - 2.0 + v_x_wind*(q_0*q_0 + q_1*q"
      "_1 - q_2*q_2 - q_3*q_3)*2.0 + v_y_wind*(q_0*q_3*2.0 + q_1*q_2*2.0)*2.0)*(vz_res)*1.0/velocityLength*(1.0/2.0))/m"
      ";\n    C(3,5) =  - p - (C_wz*(v*2.0 - v_y_wind*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*q_3)*2.0 + v_x_wind*(q_0*q_3*2"
      ".0 - q_1*q_2*2.0)*2.0)*(vz_res)*1.0/velocityLength*(1.0/2.0))/m;\n    C(3,6) = (CT1s*w_1 + CT1s*w_2 + CT1s*w_3 +"
      " CT1s*w_4 + CT2s*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3"
      "*v_y_wind*2.0) + CT2s*abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_"
      "2*q_3*v_y_wind*2.0) + CT2s*abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - "
      "q_2*q_3*v_y_wind*2.0) + CT2s*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 "
      "- q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0"
      " - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_"
      "2*q_3*v_y_wind*2.0)))*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*"
      "v_y_wind*2.0) + CT2s*((( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*"
      "q_3*v_y_wind*2.0)/abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_"
      "3*v_y_wind*2.0)))*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v"
      "_y_wind*2.0) + CT2s*((( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q"
      "_3*v_y_wind*2.0)/abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3"
      "*v_y_wind*2.0)))*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_"
      "y_wind*2.0) + CT2s*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v"
      "_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wi"
      "nd*2.0)))*(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0"
      "))/m - (C_wz*velocityLength)/m - (C_wz*(vz_res)*(w*2.0 - v_x_wind*(q_0*q_2*2.0 + q_1*q_3*2.0)*2.0 + v_y_wind*(q_"
      "0*q_1*2.0 - q_2*q_3*2.0)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(3,7) = (CT1s*w_1*(q_1*v_y_wind*2.0 - q_2*v"
      "_x_wind*2.0) + CT1s*w_2*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0) + CT1s*w_3*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0) +"
      " CT1s*w_4*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0) + CT2s*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_win"
      "d*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0) + CT2s*abs( - w + l_m"
      "*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_1*v_y_wind*2."
      "0 - q_2*v_x_wind*2.0) + CT2s*abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 "
      "- q_2*q_3*v_y_wind*2.0)*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0) + CT2s*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*"
      "q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0) + CT2s*((("
      " - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( -"
      " w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_1*v"
      "_y_wind*2.0 - q_2*v_x_wind*2.0)*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2"
      ".0 + q_2*q_3*v_y_wind*2.0) + CT2s*((( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wi"
      "nd*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind"
      "*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0)*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*"
      "q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0"
      "*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*"
      "v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0)*(w + l_m*p +"
      " q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*q "
      "+ q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_0"
      "*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_1*v_y_wind*2.0 - q_"
      "2*v_x_wind*2.0)*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wi"
      "nd*2.0))/m - (C_wz*(q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0)*velocityLength)/m - (C_wz*(vz_res)*((q_0*v_y_wind*2.0 -"
      " q_3*v_x_wind*2.0)*(vy_res)* - 2.0 + (q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*(vx_res)*2.0 + (q_1*v_y_wind*2.0 - q_"
      "2*v_x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(3,8) = (CT1s*w_1*(q_0*v_y_wind*2.0 - q_3*v"
      "_x_wind*2.0) + CT1s*w_2*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0) + CT1s*w_3*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0) +"
      " CT1s*w_4*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0) + CT2s*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_win"
      "d*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0) + CT2s*abs( - w + l_m"
      "*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*v_y_wind*2."
      "0 - q_3*v_x_wind*2.0) + CT2s*abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 "
      "- q_2*q_3*v_y_wind*2.0)*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0) + CT2s*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*"
      "q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0) + CT2s*((("
      " - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( -"
      " w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_0*v"
      "_y_wind*2.0 - q_3*v_x_wind*2.0)*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2"
      ".0 + q_2*q_3*v_y_wind*2.0) + CT2s*((( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wi"
      "nd*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind"
      "*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0)*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*"
      "q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0"
      "*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*"
      "v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0)*(w + l_m*p +"
      " q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*q "
      "+ q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_0"
      "*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_0*v_y_wind*2.0 - q_"
      "3*v_x_wind*2.0)*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wi"
      "nd*2.0))/m - (C_wz*(q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0)*velocityLength)/m - (C_wz*(vz_res)*((q_1*v_y_wind*2.0 -"
      " q_2*v_x_wind*2.0)*(vy_res)*2.0 + (q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0)*(vx_res)*2.0 + (q_0*v_y_wind*2.0 - q_3*v"
      "_x_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(3,9) =  - (CT1s*w_1*(q_0*v_x_wind*2.0 + q_3*v"
      "_y_wind*2.0) + CT1s*w_2*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0) + CT1s*w_3*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0) +"
      " CT1s*w_4*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0) + CT2s*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_win"
      "d*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0) + CT2s*abs( - w + l_m"
      "*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*v_x_wind*2."
      "0 + q_3*v_y_wind*2.0) + CT2s*abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 "
      "- q_2*q_3*v_y_wind*2.0)*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0) + CT2s*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*"
      "q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0) + CT2s*((("
      " - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( -"
      " w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_0*v"
      "_x_wind*2.0 + q_3*v_y_wind*2.0)*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2"
      ".0 + q_2*q_3*v_y_wind*2.0) + CT2s*((( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wi"
      "nd*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind"
      "*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*"
      "q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0"
      "*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*"
      "v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*(w + l_m*p +"
      " q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*q "
      "+ q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_0"
      "*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_0*v_x_wind*2.0 + q_"
      "3*v_y_wind*2.0)*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wi"
      "nd*2.0))/m + (C_wz*(q_0*v_x_wind*2.0 + q_3*v_y_wind*2.0)*velocityLength)/m + (C_wz*(vz_res)*((q_1*v_x_wind*2.0 +"
      " q_2*v_y_wind*2.0)*(vy_res)*2.0 - (q_1*v_y_wind*2.0 - q_2*v_x_wind*2.0)*(vx_res)*2.0 + (q_0*v_x_wind*2.0 + q_3*v"
      "_y_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(3,10) =  - (CT1s*w_1*(q_1*v_x_wind*2.0 + q_2*"
      "v_y_wind*2.0) + CT1s*w_2*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0) + CT1s*w_3*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0) "
      "+ CT1s*w_4*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0) + CT2s*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wi"
      "nd*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0) + CT2s*abs( - w + l_"
      "m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_1*v_x_wind*2"
      ".0 + q_2*v_y_wind*2.0) + CT2s*abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0"
      " - q_2*q_3*v_y_wind*2.0)*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0) + CT2s*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0"
      "*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0) + CT2s*(("
      "( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( "
      "- w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_1*"
      "v_x_wind*2.0 + q_2*v_y_wind*2.0)*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*"
      "2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*((( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_w"
      "ind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_win"
      "d*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0)*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0"
      "*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_"
      "0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2"
      "*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0)*(w + l_m*p "
      "+ q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*q"
      " + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_"
      "0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_1*v_x_wind*2.0 + q"
      "_2*v_y_wind*2.0)*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_w"
      "ind*2.0))/m + (C_wz*(q_1*v_x_wind*2.0 + q_2*v_y_wind*2.0)*velocityLength)/m - (C_wz*(vz_res)*((q_0*v_x_wind*2.0 "
      "+ q_3*v_y_wind*2.0)*(vy_res)*2.0 + (q_0*v_y_wind*2.0 - q_3*v_x_wind*2.0)*(vx_res)*2.0 - (q_1*v_x_wind*2.0 + q_2*"
      "v_y_wind*2.0)*(vz_res)*2.0)*1.0/velocityLength*(1.0/2.0))/m;\n    C(3,13) = 1.0;\n    \n    %     C(3,17) =  - v"
      " + (CT2s*l_m*abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wi"
      "nd*2.0) + CT1s*l_m*w_2 - CT1s*l_m*w_4 - CT2s*l_m*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 "
      "+ q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) - CT2s*l_m*((( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_w"
      "ind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_win"
      "d*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2"
      ".0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*l_m*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_w"
      "ind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2"
      ".0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q"
      "_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0))/m;\n    %     C(3,18) = u + (CT2s*l_m*abs(w + l_m*q + q_0*q_1*v_y_w"
      "ind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) - CT1s*l_m*w_1 + CT1s*l_m*w_3 - CT"
      "2s*l_m*abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*"
      "2.0) - CT2s*l_m*((( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v"
      "_y_wind*2.0)/abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y"
      "_wind*2.0)))*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wi"
      "nd*2.0) + CT2s*l_m*(((w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v"
      "_y_wind*2.0)/abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wi"
      "nd*2.0)))*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0"
      "))/m;\n    %     C(3,20) =  - (CT0s*w_1*2.0 + CT1s*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 +"
      " q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0))/m;\n    %     C(3,21) =  - (CT0s*w_2*2.0 - CT1s*(w + l_m*p + q_0*"
      "q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0))/m;\n    %     C(3,22) = "
      " - (CT0s*w_3*2.0 - CT1s*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_"
      "3*v_y_wind*2.0))/m;\n    %     C(3,23) =  - (CT0s*w_4*2.0 + CT1s*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*"
      "v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0))/m;\n    %     C(3,25) =  - (w_1*w_1 + w_2*w_2 + w_3"
      "*w_3 + w_4*w_4)/m;\n    %     C(3,29) =  - (CT2s*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 "
      "+ q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT2s*abs( - w + l_m*q - q_0*q_1*v_y"
      "_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT"
      "2s*abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(q"
      "_0*q_2*2.0 + q_1*q_3*2.0) + CT2s*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*"
      "2.0 - q_2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT1s*w_1*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT1s*w_2*(q_0*q"
      "_2*2.0 + q_1*q_3*2.0) + CT1s*w_3*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT1s*w_4*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT2s*((( -"
      " w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w"
      " + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_0*q_2"
      "*2.0 + q_1*q_3*2.0)*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3"
      "*v_y_wind*2.0) + CT2s*((( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2"
      "*q_3*v_y_wind*2.0)/abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q"
      "_3*v_y_wind*2.0)))*(q_0*q_2*2.0 + q_1*q_3*2.0)*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1"
      "*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_"
      "1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3"
      "*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0 + q_1*q_3*2.0)*(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*"
      "v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2"
      "*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_"
      "wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0 + q_1*q_3*2.0)*(w + l_m*q + q_0*q_1*v_y_w"
      "ind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0))/m + (C_wz*(q_0*q_2*2.0 + q_1*q_3*"
      "2.0)*velocityLength)/m - (C_wz*(vz_res)*1.0/velocityLength*((q_0*q_3*2.0 - q_1*q_2*2.0)*(vy_res)*2.0 - (q_0*q_2*"
      "2.0 + q_1*q_3*2.0)*(vz_res)*2.0 + (vx_res)*(q_0*q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3)*2.0)*(1.0/2.0))/m;\n    %    "
      " C(3,30) = (CT2s*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3"
      "*v_y_wind*2.0)*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT2s*abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0"
      " + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT2s*abs(w + l_m*p + q_0*q_1*v_y_w"
      "ind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT2s"
      "*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(q_0"
      "*q_1*2.0 - q_2*q_3*2.0) + CT1s*w_1*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT1s*w_2*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT1s*w_3"
      "*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT1s*w_4*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT2s*((( - w + l_m*p - q_0*q_1*v_y_wind*2."
      "0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 "
      "+ q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0 - q_2*q_3*2.0)*( - w + l_m*"
      "p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*((( - w + "
      "l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_"
      "m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0 "
      "- q_2*q_3*2.0)*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_"
      "wind*2.0) + CT2s*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y"
      "_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind"
      "*2.0)))*(q_0*q_1*2.0 - q_2*q_3*2.0)*(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*"
      "2.0 - q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind"
      "*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 "
      "- q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0 - q_2*q_3*2.0)*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 -"
      " q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0))/m - (C_wz*(q_0*q_1*2.0 - q_2*q_3*2.0)*velocityLength)/m - (C_wz*("
      "vz_res)*1.0/velocityLength*((q_0*q_3*2.0 + q_1*q_2*2.0)*(vx_res)*2.0 - (vy_res)*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q"
      "_3*q_3)*2.0 + (q_0*q_1*2.0 - q_2*q_3*2.0)*(vz_res)*2.0)*(1.0/2.0))/m;\nend\n% C(1,18) =  - w;\n% C(1,19) = v;\n%"
      " C(1,29) = (C_wxy*velocityLength*(q_0*q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3))/m + (C_wxy*(vx_res)*1.0/velocityLength"
      "*((q_0*q_3*2.0 - q_1*q_2*2.0)*(vy_res)*2.0 - (q_0*q_2*2.0 + q_1*q_3*2.0)*(vz_res)*2.0 + (vx_res)*(q_0*q_0 + q_1*"
      "q_1 - q_2*q_2 - q_3*q_3)*2.0)*(1.0/2.0))/m;\n% C(1,30) = (C_wxy*(q_0*q_3*2.0 + q_1*q_2*2.0)*velocityLength)/m + "
      "(C_wxy*(vx_res)*1.0/velocityLength*((q_0*q_3*2.0 + q_1*q_2*2.0)*(vx_res)*2.0 - (vy_res)*(q_0*q_0 - q_1*q_1 + q_2"
      "*q_2 - q_3*q_3)*2.0 + (q_0*q_1*2.0 - q_2*q_3*2.0)*(vz_res)*2.0)*(1.0/2.0))/m;\n% C(1,31) = ((vx_res)*velocityLen"
      "gth)/m;\n% C(2,17) = w;\n% C(2,19) =  - u;\n% C(2,29) =  - (C_wxy*(q_0*q_3*2.0 - q_1*q_2*2.0)*velocityLength)/m "
      "- (C_wxy*1.0/velocityLength*(vy_res)*((q_0*q_3*2.0 - q_1*q_2*2.0)*(vy_res)*2.0 - (q_0*q_2*2.0 + q_1*q_3*2.0)*(vz"
      "_res)*2.0 + (vx_res)*(q_0*q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3)*2.0)*(1.0/2.0))/m;\n% C(2,30) = (C_wxy*velocityLeng"
      "th*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*q_3))/m - (C_wxy*1.0/velocityLength*(vy_res)*((q_0*q_3*2.0 + q_1*q_2*2.0)*"
      "(vx_res)*2.0 - (vy_res)*(q_0*q_0 - q_1*q_1 + q_2*q_2 - q_3*q_3)*2.0 + (q_0*q_1*2.0 - q_2*q_3*2.0)*(vz_res)*2.0)*"
      "(1.0/2.0))/m;\n% C(2,31) =  - (velocityLength*(vy_res))/m;\n% C(3,17) =  - v + (CT2s*l_m*abs(w + l_m*p + q_0*q_1"
      "*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) + CT1s*l_m*w_2 - CT1s*l_m*w_"
      "4 - CT2s*l_m*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y"
      "_wind*2.0) - CT2s*l_m*((( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2"
      "*q_3*v_y_wind*2.0)/abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q"
      "_3*v_y_wind*2.0)))*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*"
      "v_y_wind*2.0) + CT2s*l_m*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2"
      "*q_3*v_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*"
      "v_y_wind*2.0)))*(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wi"
      "nd*2.0))/m;\n% C(3,18) = u + (CT2s*l_m*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x"
      "_wind*2.0 - q_2*q_3*v_y_wind*2.0) - CT1s*l_m*w_1 + CT1s*l_m*w_3 - CT2s*l_m*abs( - w + l_m*q - q_0*q_1*v_y_wind*2"
      ".0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) - CT2s*l_m*((( - w + l_m*q - q_0*q_1*v_"
      "y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_m*q - q_0*q_1*v_y_"
      "wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*( - w + l_m*q - q_0*q_1*v_y_win"
      "d*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*l_m*(((w + l_m*q + q_0*q_1*v_"
      "y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_0*q_1*v_y_win"
      "d*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(w + l_m*q + q_0*q_1*v_y_wind*2.0 "
      "- q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0))/m;\n% C(3,20) =  - (CT0s*w_1*2.0 + CT1s*("
      " - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0))/m;\n%"
      " C(3,21) =  - (CT0s*w_2*2.0 - CT1s*(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2"
      ".0 - q_2*q_3*v_y_wind*2.0))/m;\n% C(3,22) =  - (CT0s*w_3*2.0 - CT1s*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*"
      "v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0))/m;\n% C(3,23) =  - (CT0s*w_4*2.0 + CT1s*( - w + l_m"
      "*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0))/m;\n% C(3,25) ="
      "  - (w_1*w_1 + w_2*w_2 + w_3*w_3 + w_4*w_4)/m;\n% C(3,29) =  - (CT2s*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q"
      "_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT2s*abs( - w +"
      " l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0"
      " + q_1*q_3*2.0) + CT2s*abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*"
      "q_3*v_y_wind*2.0)*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT2s*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0"
      " - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT1s*w_1*(q_0*q_2*2.0 + q_1*q_3*2."
      "0) + CT1s*w_2*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT1s*w_3*(q_0*q_2*2.0 + q_1*q_3*2.0) + CT1s*w_4*(q_0*q_2*2.0 + q_1*q"
      "_3*2.0) + CT2s*((( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_"
      "y_wind*2.0)/abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_"
      "wind*2.0)))*(q_0*q_2*2.0 + q_1*q_3*2.0)*( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_"
      "x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*((( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_"
      "3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*"
      "v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0 + q_1*q_3*2.0)*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_"
      "2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q"
      "_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_"
      "x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0 + q_1*q_3*2.0)*(w + l_m*p + q_0*q_1*v_y"
      "_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*q + q_0*q_1*v_"
      "y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_0*q_1*v_y_win"
      "d*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_0*q_2*2.0 + q_1*q_3*2.0)*(w + l"
      "_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0))/m + (C_wz*(q_"
      "0*q_2*2.0 + q_1*q_3*2.0)*velocityLength)/m - (C_wz*(vz_res)*1.0/velocityLength*((q_0*q_3*2.0 - q_1*q_2*2.0)*(vy_"
      "res)*2.0 - (q_0*q_2*2.0 + q_1*q_3*2.0)*(vz_res)*2.0 + (vx_res)*(q_0*q_0 + q_1*q_1 - q_2*q_2 - q_3*q_3)*2.0)*(1.0"
      "/2.0))/m;\n% C(3,30) = (CT2s*abs( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2"
      ".0 + q_2*q_3*v_y_wind*2.0)*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT2s*abs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*"
      "v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT2s*abs(w + l_m*p + q"
      "_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)*(q_0*q_1*2.0 - q_2*q_3"
      "*2.0) + CT2s*abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wi"
      "nd*2.0)*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT1s*w_1*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT1s*w_2*(q_0*q_1*2.0 - q_2*q_3*2.0"
      ") + CT1s*w_3*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT1s*w_4*(q_0*q_1*2.0 - q_2*q_3*2.0) + CT2s*((( - w + l_m*p - q_0*q_1"
      "*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/abs( - w + l_m*p - q_0*q_1*v"
      "_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0 - q_2*q_3*2.0)*"
      "( - w + l_m*p - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0) + CT2"
      "s*((( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)/a"
      "bs( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + q_2*q_3*v_y_wind*2.0)))*("
      "q_0*q_1*2.0 - q_2*q_3*2.0)*( - w + l_m*q - q_0*q_1*v_y_wind*2.0 + q_0*q_2*v_x_wind*2.0 + q_1*q_3*v_x_wind*2.0 + "
      "q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 -"
      " q_2*q_3*v_y_wind*2.0)/abs(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*"
      "q_3*v_y_wind*2.0)))*(q_0*q_1*2.0 - q_2*q_3*2.0)*(w + l_m*p + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q"
      "_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0) + CT2s*(((w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*"
      "q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)/abs(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_x_wind*2.0 - q_1*q_3*v"
      "_x_wind*2.0 - q_2*q_3*v_y_wind*2.0)))*(q_0*q_1*2.0 - q_2*q_3*2.0)*(w + l_m*q + q_0*q_1*v_y_wind*2.0 - q_0*q_2*v_"
      "x_wind*2.0 - q_1*q_3*v_x_wind*2.0 - q_2*q_3*v_y_wind*2.0))/m - (C_wz*(q_0*q_1*2.0 - q_2*q_3*2.0)*velocityLength)"
      "/m - (C_wz*(vz_res)*1.0/velocityLength*((q_0*q_3*2.0 + q_1*q_2*2.0)*(vx_res)*2.0 - (vy_res)*(q_0*q_0 - q_1*q_1 +"
      " q_2*q_2 - q_3*q_3)*2.0 + (q_0*q_1*2.0 - q_2*q_3*2.0)*(vz_res)*2.0)*(1.0/2.0))/m;\n\nR        = diag(Rin);\n\nte"
      "mp = real_measurements  -  y;\n\nfunction [temp,C,R] = getGyroscope(x,real_measurements,Rin)\n\n%% Initial condi"
      "tions\np_bias = x(14);\nq_bias = x(15);\nr_bias = x(16);\np = x(17);\nq = x(18);\nr = x(19);\n\ny   = zeros(3,1)"
      ";\nC   = zeros(3,31);\n\ny(1) = p + p_bias;\ny(2) = q + q_bias;\ny(3) = r + r_bias;\n\nC(1,14) = 1.0;\nC(1,17) ="
      " 1.0;\nC(2,15) = 1.0;\nC(2,18) = 1.0;\nC(3,16) = 1.0;\nC(3,19) = 1.0;\n\nR       = diag(Rin);\n\ntemp = real_mea"
      "surements  -  y;\n\nfunction [temp,C,R] = getOmegaMotor(x,real_measurements,Rin)\n\n%% Initial conditions\n\nw_1"
      " = x(20);\nw_2 = x(21);\nw_3 = x(22);\nw_4 = x(23);\n\ny    = zeros(4,1);\nC    = zeros(4,31);\n\ny(1) = w_1;\ny"
      "(2) = w_2;\ny(3) = w_3;\ny(4) = w_4;\n\nC(1,20) = 1.0;\nC(2,21) = 1.0;\nC(3,22) = 1.0;\nC(4,23) = 1.0;\n\nR     "
      "  = diag(Rin);\n\ntemp = real_measurements  -  y;\n"
      editorLayout	      "100 M4x1[10 5 700 500]"
    }
  }
  junction {
    id			    25
    position		    [23.5747 49.5747 7]
    chart		    23
    linkNode		    [23 0 0]
    subviewer		    23
    ssIdNumber		    3
    type		    CONNECTIVE_JUNCTION
  }
  transition {
    id			    26
    labelString		    "{eML_blk_kernel();}"
    labelPosition	    [32.125 19.875 102.544 14.964]
    fontSize		    12
    src {
      intersection	      [0 0 1 0 23.5747 14.625 0 0]
    }
    dst {
      id		      25
      intersection	      [7 0 -1 -1 23.5747 42.5747 0 0]
    }
    midPoint		    [23.5747 24.9468]
    chart		    23
    linkNode		    [23 0 0]
    dataLimits		    [23.575 23.575 14.625 34.575]
    subviewer		    23
    drawStyle		    SMART
    executionOrder	    1
    ssIdNumber		    2
  }
  data {
    id			    27
    ssIdNumber		    4
    name		    "xpred"
    linkNode		    [23 0 28]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    28
    ssIdNumber		    5
    name		    "x"
    linkNode		    [23 27 29]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    29
    ssIdNumber		    6
    name		    "Ppred"
    linkNode		    [23 28 30]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    30
    ssIdNumber		    10
    name		    "y"
    linkNode		    [23 29 31]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    31
    ssIdNumber		    11
    name		    "sensors"
    linkNode		    [23 30 32]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    32
    ssIdNumber		    12
    name		    "P"
    linkNode		    [23 31 33]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    33
    ssIdNumber		    13
    name		    "parameter"
    linkNode		    [23 32 0]
    scope		    PARAMETER_DATA
    isNonTunable	    1
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"Parameters"
	isSigned		1
	wordLength		"16"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  instance {
    id			    34
    name		    "Kalmanfilter/correction"
    machine		    1
    chart		    23
  }
  target {
    id			    35
    name		    "sfun"
    description		    "Default Simulink S-Function Target."
    machine		    1
    linkNode		    [1 0 36]
  }
  target {
    id			    36
    name		    "rtw"
    machine		    1
    linkNode		    [1 35 0]
  }
}
